<?php
/**
 * Description of Medcheck controller
 *
 * @author Mikhael Felian Waskito - mikhaelfelian@gmail.com
 * @modified by Mikhael Felian Waskito - mikhaelfelian@gmail.com
 * @date 2025-03-24
 */

class Medcheck extends CI_Controller {
    public $ciqrcode;
    public $benchmark;
    public $hooks;
    public $config;
    public $log;
    public $utf8;
    public $uri;
    public $router;
    public $output;
    public $security;
    public $input;
    public $lang;
    public $db;
    public $pagination;
    public $encryption;
    public $encrypt;
    public $session;
    public $form_validation;
    public $tanggalan;
    public $agent;
    public $email;
    public $ion_auth_model;
    
    public function __construct() {
        parent::__construct();
        $this->load->library('encryption');
        $this->load->library('form_validation');
        $this->load->library('user_agent');
        $this->load->model('Ion_auth_model', 'ion_auth_model');
    }
    
    public function index() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $id_dokter   = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();
            
            if(isset($_GET['tipe'])){
                /* -- Blok Filter -- */
                $hal     = $this->input->get('halaman');
                $id      = $this->input->get('id');
                $cs      = $this->input->get('filter_nama');
                $by      = $this->input->get('filter_bayar');
                $tp      = $this->input->get('filter_tipe');
                $tg      = $this->input->get('filter_tgl');
                $sp      = $this->input->get('filter_periksa');
                $pl      = $this->input->get('filter_poli');
                $jml     = $this->input->get('jml');

                # Prepare common query conditions
                $tgl_filter = $this->tanggalan->tgl_indo_sys($tg);
                $pasien_filter = str_replace("'", "''", $cs);

                # Jika User dokter, maka pilih rajal dan ranap
                if(akses::hakDokter()){
                    $this->db->select('COUNT(*) as count')
                             ->from('v_medcheck_dokter')
                             ->where('id_dokter', $id_user);
                    
                    if(!empty($tp)) $this->db->like('tipe', $tp);
                    if(!empty($pasien_filter)) $this->db->like('pasien', $pasien_filter);
                    if(!empty($pl)) $this->db->like('id_poli', $pl);
                    if(isset($by)) $this->db->like('status_bayar', $by);
                    if(!empty($sp)) $this->db->like('status_periksa', $sp);
                    
                    $jml_sql = $this->db->get()->row()->count;
                }else{
                    $this->db->select('COUNT(*) as count')
                             ->from('tbl_trans_medcheck')
                             ->where('status_hps', '0')
                             ->where('status_pos', '0');
                    
                    if(!empty($tgl_filter)) $this->db->like('DATE(tgl_simpan)', $tgl_filter);
                    if(!empty($tp)) $this->db->like('tipe', $tp);
                    if($id_grup->name == 'dokter') $this->db->like('id_dokter', $id_user);
                    if(!empty($id)) $this->db->like('id', general::dekrip($id));
                    if(!empty($pl)) $this->db->like('id_poli', $pl);
                    if(!empty($pasien_filter)) $this->db->like('pasien', $pasien_filter);
                    if(isset($by)) $this->db->like('status_bayar', $by);
                    if(!empty($sp)) $this->db->like('status_periksa', $sp);
                    
                    $jml_sql = $this->db->get()->row()->count;                
                }

                $jml_hal = !empty($jml) ? $jml : $jml_sql;
                /* -- End Blok Filter -- */

                /* -- Form Error -- */
                $data['hasError'] = $this->session->flashdata('form_error');

                /* -- Blok Pagination -- */
                $config['base_url'] = base_url('medcheck/index.php?tipe=1'
                    .(!empty($cs) ? '&filter_nama='.$cs : '')
                    .(!empty($tg) ? '&filter_tgl='.$tg : '')
                    .(!empty($tp) ? '&filter_tipe='.$tp : '')
                    .(!empty($sp) ? '&filter_periksa='.$sp : '')
                    .(isset($by) ? '&filter_bayar='.$by : '')
                    .(!empty($jml_hal) ? '&jml='.$jml_hal : ''));
                    
                $config['total_rows']           = $jml_hal;
                $config['query_string_segment'] = 'halaman';
                $config['page_query_string']    = TRUE;
                $config['per_page']             = $pengaturan->jml_item;
                $config['num_links']            = 2;

                $config['first_tag_open']       = '<li class="page-item">';
                $config['first_tag_close']      = '</li>';
                $config['prev_tag_open']        = '<li class="page-item">';
                $config['prev_tag_close']       = '</li>';
                $config['num_tag_open']         = '<li class="page-item">';
                $config['num_tag_close']        = '</li>';
                $config['next_tag_open']        = '<li class="page-item">';
                $config['next_tag_close']       = '</li>';
                $config['last_tag_open']        = '<li class="page-item">';
                $config['last_tag_close']       = '</li>';
                $config['cur_tag_open']         = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
                $config['cur_tag_close']        = '</b></a></li>';
                $config['first_link']           = '&laquo;';
                $config['prev_link']            = '&lsaquo;';
                $config['next_link']            = '&rsaquo;';
                $config['last_link']            = '&raquo;';
                $config['anchor_class']         = 'class="page-link"';
                /* -- End Blok Pagination -- */

                $limit = $config['per_page'];
                $offset = !empty($hal) ? $hal : 0;

                // Jika User dokter, maka pilih rajal dan ranap
                if (akses::hakDokter() == TRUE) {
                    $this->db->select('*')
                             ->from('v_medcheck_dokter')
                             ->where('id_dokter', $id_user);
                    
                    if (!empty($tp)) $this->db->like('tipe', $tp);
                    if (!empty($pasien_filter)) $this->db->like('pasien', $pasien_filter);
                    if (!empty($pl)) $this->db->like('id_poli', $pl);
                    if (isset($by)) $this->db->like('status_bayar', $by);
                    if (!empty($sp)) $this->db->like('status_periksa', $sp);
                    
                    $this->db->limit($limit, $offset);
                    $data['penj'] = $this->db->get()->result();
                } else {
                    // Optimize query for non-doctor users
                    $select_fields = "id, id_user, id_dokter, id_nurse, id_analis, id_pasien, id_poli, id_dft, id_ant, id_kasir, id_instansi, 
                                    id_encounter, id_condition, id_post_location, tgl_simpan, tgl_modif, tgl_masuk, 
                                    tgl_periksa, tgl_periksa_lab, tgl_periksa_rad, tgl_periksa_pen, tgl_ranap, tgl_keluar, tgl_bayar, tgl_ttd,
                                    no_rm, no_akun, no_nota, pasien, 
                                    keluhan, anamnesa, pemeriksaan, program, alergi, metode, platform, 
                                    jml_total, jml_dp, jml_diskon, jml_potongan, jml_potongan_poin, jml_subtotal, jml_ppn, ppn, jml_gtotal, 
                                    jml_bayar, jml_kembali, jml_kurang, jml_poin, jml_poin_nom, tipe, tipe_bayar, status, status_bayar, 
                                    status_nota, status_hps, status_pos, status_periksa";
                    
                    $this->db->select($select_fields)
                             ->from('tbl_trans_medcheck')
                             ->where('status_hps', '0')
                             ->where('status_pos', '0');
                    
                    if (!empty($tgl_filter)) $this->db->like('DATE(tgl_simpan)', $tgl_filter);
                    if (!empty($pasien_filter)) $this->db->like('pasien', $pasien_filter);
                    if (!empty($tp)) $this->db->like('tipe', $tp);
                    if (isset($by)) $this->db->like('status_bayar', $by);
                    if (!empty($pl)) $this->db->like('id_poli', $pl);
                    
                    $this->db->order_by('id', 'DESC')
                             ->limit($limit, $offset);
                    
                    $data['penj'] = $this->db->get()->result();
                }

                $this->pagination->initialize($config);

                /* Blok pagination */
                $data['total_rows'] = $config['total_rows'];
                $data['PerPage']    = $config['per_page'];
                $data['pagination'] = $this->pagination->create_links();
                /* --End Blok pagination-- */

                // Load only necessary data
                $data['kmr_label']      = $this->crud->kmr_label();
                $data['kmr_kaps']       = $this->crud->kmr_kapasitas();
                $data['sql_kamar']      = $this->db->select('id, kode, kamar, jml, jml_max, style')
                                                   ->where('status', '1')
                                                   ->get('tbl_m_kamar')
                                                   ->result();
                
                $data['sql_kary_jdwl']  = $this->db->select('tbl_m_karyawan.nama_dpn, tbl_m_karyawan.nama, tbl_m_karyawan.nama_blk, 
                                                            tbl_m_poli.lokasi, tbl_m_karyawan_jadwal.hari_1, tbl_m_karyawan_jadwal.hari_2, 
                                                            tbl_m_karyawan_jadwal.hari_3, tbl_m_karyawan_jadwal.hari_4, 
                                                            tbl_m_karyawan_jadwal.hari_5, tbl_m_karyawan_jadwal.hari_6, 
                                                            tbl_m_karyawan_jadwal.hari_7, tbl_m_karyawan_jadwal.waktu')
                                                   ->from('tbl_m_karyawan_jadwal')
                                                   ->join('tbl_m_karyawan', 'tbl_m_karyawan.id=tbl_m_karyawan_jadwal.id_karyawan')
                                                   ->join('tbl_m_poli', 'tbl_m_poli.id=tbl_m_karyawan_jadwal.id_poli')
                                                   ->get()
                                                   ->result();
                
                $data['sql_poli']       = $this->db->get('tbl_m_poli')->result();
                $data['pengaturan']     = $pengaturan;
            }

            /* Sidebar Menu */
            $data['sidebar'] = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */   

            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/'.(isset($_GET['tipe']) ? 'index' : 'content'), $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function data_satusehat() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $id_dokter   = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $hal     = $this->input->get('halaman');
            $id      = $this->input->get('id');
            $cs      = $this->input->get('filter_nama');
            $by      = $this->input->get('filter_bayar');
            $tp      = $this->input->get('filter_tipe');
            $tg      = $this->input->get('filter_tgl');
            $sp      = $this->input->get('filter_periksa');
            $st      = $this->input->get('status');
            $jml     = $this->input->get('jml');
            
            $jml_sql = $this->db->order_by('id', 'DESC')
                                ->get('tbl_util_log_satusehat')->num_rows();

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal = $jml_sql;
            }
            
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_satusehat.php?'.(!empty($tg) ? 'filter_tgl='.$tg.'&' : '').(!empty($jml_hal) ? 'jml='.$jml_hal : ''));
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
                   $data['sql_log'] = $this->db->limit($config['per_page'], $hal)
                                               ->order_by('id', 'DESC')
                                               ->get('tbl_util_log_satusehat')->result();
            }else{
                   $data['sql_log'] = $this->db->limit($config['per_page'])
                                               ->order_by('id', 'DESC')
                                               ->get('tbl_util_log_satusehat')->result();
            }
            
            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_satusehat', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function data_resep() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $id_dokter   = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $hal     = $this->input->get('halaman');
            $id      = $this->input->get('id');
            $cs      = $this->input->get('filter_nama');
            $by      = $this->input->get('filter_bayar');
            $tp      = $this->input->get('filter_tipe');
            $tg      = $this->input->get('filter_tgl');
            $sp      = $this->input->get('filter_periksa');
            $st      = $this->input->get('status');
            $jml     = $this->input->get('jml');
            
            $jml_sql = $this->db->like('status', $st)
                                ->like('pasien', (!empty($cs) ? $cs : ''))
                                ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                ->order_by('id', 'DESC')
                                ->get('v_medcheck_resep')->num_rows();

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal = $jml_sql;
            }
            
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/resep/data_resep.php?status='.(isset($st) ? $st : '').(!empty($cs) ? '&filter_nama='.$cs : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($jml_hal) ? '&jml='.$jml_hal : ''));
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
                   $data['penj'] = $this->db->like('status', $st)
                                            ->like('pasien', (!empty($cs) ? $cs : ''))
                                            ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                            ->limit($config['per_page'], $hal)
                                            ->order_by('id', 'DESC')
                                            ->get('v_medcheck_resep')->result();
            }else{
                   $data['penj'] = $this->db->like('status', $st)
                                            ->like('pasien', (!empty($cs) ? $cs : ''))
                                            ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                            ->limit($config['per_page'])
                                            ->order_by('id', 'DESC')
                                            ->get('v_medcheck_resep')->result();
            }
            
            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            $data['cetak']      = '<button type="button" onclick="window.location.href = \''.base_url('transaksi/cetak_data_penj.php?'.(!empty($nt) ? 'filter_nota='.$nt : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tgl_tempo='.$tp : '').(!empty($cs) ? '&filter_cust='.$cs : '').(!empty($sl) ? '&filter_sales='.$sl : '').(!empty($jml) ? '&jml='.$jml : '')).'\'" class="btn btn-warning"><i class="fa fa-print"></i> Cetak</button>';
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_resep', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function data_radiologi() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $id_dokter   = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $hal     = $this->input->get('halaman');
            $id      = $this->input->get('id');
            $cs      = $this->input->get('filter_nama');
            $by      = $this->input->get('filter_bayar');
            $tp      = $this->input->get('filter_tipe');
            $tg      = $this->input->get('filter_tgl');
            $sp      = $this->input->get('filter_periksa');
            $st      = $this->input->get('status');
            $jml     = $this->input->get('jml');
            
            $jml_sql = $this->db->select('tbl_trans_medcheck.id, tbl_trans_medcheck.id_pasien, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.no_nota, tbl_trans_medcheck.pasien, tbl_trans_medcheck_rad.tgl_simpan, tbl_trans_medcheck_rad.id_radiografer, tbl_trans_medcheck_rad.id_dokter, tbl_trans_medcheck_rad.no_sample, tbl_trans_medcheck_rad.no_rad, tbl_trans_medcheck_rad.status')
                                        ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id=tbl_trans_medcheck_rad.id_medcheck')
                                        ->like('tbl_trans_medcheck_rad.status', (isset($st) ? $st : ''))
                                        ->like('tbl_trans_medcheck.pasien', (!empty($cs) ? $cs : ''))
                                        ->like('DATE(tbl_trans_medcheck.tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                        ->order_by('tbl_trans_medcheck_rad.id', 'DESC')
                                        ->get('tbl_trans_medcheck_rad')->num_rows();

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal = $jml_sql;
            }
            
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_radiologi.php?status='.(isset($st) ? $st : '').(!empty($cs) ? '&filter_nama='.$cs : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tipe='.$tp : '').(!empty($sp) ? '&filter_periksa='.$sp : '').(!empty($jml_hal) ? '&jml='.$jml_hal : ''));
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
                   $data['penj'] = $this->db->select('tbl_trans_medcheck.id, tbl_trans_medcheck.id_pasien, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.no_nota, tbl_trans_medcheck.pasien, tbl_trans_medcheck_rad.id AS id_rad, tbl_trans_medcheck_rad.tgl_simpan, tbl_trans_medcheck_rad.id_radiografer, tbl_trans_medcheck_rad.id_dokter, tbl_trans_medcheck_rad.no_sample, tbl_trans_medcheck_rad.no_rad, tbl_trans_medcheck_rad.status')
                                        ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id=tbl_trans_medcheck_rad.id_medcheck')
                                        ->like('tbl_trans_medcheck_rad.status', (isset($st) ? $st : ''))
                                        ->like('tbl_trans_medcheck.pasien', (!empty($cs) ? $cs : ''))
                                        ->like('DATE(tbl_trans_medcheck.tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                        ->limit($config['per_page'],$hal)
                                        ->order_by('tbl_trans_medcheck_rad.id', 'DESC')
                                        ->get('tbl_trans_medcheck_rad')->result();
            }else{
                   $data['penj'] = $this->db->select('tbl_trans_medcheck.id, tbl_trans_medcheck.id_pasien, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.no_nota, tbl_trans_medcheck.pasien, tbl_trans_medcheck_rad.id AS id_rad, tbl_trans_medcheck_rad.tgl_simpan, tbl_trans_medcheck_rad.id_radiografer, tbl_trans_medcheck_rad.id_dokter, tbl_trans_medcheck_rad.no_sample, tbl_trans_medcheck_rad.no_rad, tbl_trans_medcheck_rad.status')
                                        ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id=tbl_trans_medcheck_rad.id_medcheck')
                                        ->like('tbl_trans_medcheck_rad.status', (isset($st) ? $st : ''))
                                        ->like('tbl_trans_medcheck.pasien', (!empty($cs) ? $cs : ''))
                                        ->like('DATE(tbl_trans_medcheck.tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                        ->limit($config['per_page'])
                                        ->order_by('tbl_trans_medcheck_rad.id', 'DESC')
                                        ->get('tbl_trans_medcheck_rad')->result();
            }
            
            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            $data['cetak']      = '<button type="button" onclick="window.location.href = \''.base_url('transaksi/cetak_data_penj.php?'.(!empty($nt) ? 'filter_nota='.$nt : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tgl_tempo='.$tp : '').(!empty($cs) ? '&filter_cust='.$cs : '').(!empty($sl) ? '&filter_sales='.$sl : '').(!empty($jml) ? '&jml='.$jml : '')).'\'" class="btn btn-warning"><i class="fa fa-print"></i> Cetak</button>';
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_radiologi', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function data_laborat() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $id_dokter   = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $hal     = $this->input->get('halaman');
            $id      = $this->input->get('id');
            $cs      = $this->input->get('filter_nama');
            $by      = $this->input->get('filter_bayar');
            $tp      = $this->input->get('filter_tipe');
            $tg      = $this->input->get('filter_tgl');
            $sp      = $this->input->get('filter_periksa');
            $st      = $this->input->get('status');
            $jml     = $this->input->get('jml');
            
            $jml_sql = $this->db->select('tbl_trans_medcheck.id, tbl_trans_medcheck.id_pasien, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.no_nota, tbl_trans_medcheck.pasien, tbl_trans_medcheck_lab.tgl_simpan, tbl_trans_medcheck_lab.id_analis, tbl_trans_medcheck_lab.id_dokter, tbl_trans_medcheck_lab.no_sample, tbl_trans_medcheck_lab.no_lab, tbl_trans_medcheck_lab.status')
                                        ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id=tbl_trans_medcheck_lab.id_medcheck')
                                        ->like('tbl_trans_medcheck_lab.status', (isset($st) ? $st : ''))
                                        ->like('tbl_trans_medcheck.pasien', (!empty($cs) ? $cs : ''))
                                        ->like('DATE(tbl_trans_medcheck.tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                        ->order_by('tbl_trans_medcheck_lab.id', 'DESC')
                                        ->get('tbl_trans_medcheck_lab')->num_rows();

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal = $jml_sql;
            }
            
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_laborat.php?status='.(isset($st) ? $st : '').(!empty($cs) ? '&filter_nama='.$cs : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tipe='.$tp : '').(!empty($sp) ? '&filter_periksa='.$sp : '').(!empty($jml_hal) ? '&jml='.$jml_hal : ''));
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
                   $data['penj'] = $this->db->select('tbl_trans_medcheck.id, tbl_trans_medcheck.id_pasien, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.no_nota, tbl_trans_medcheck.pasien, tbl_trans_medcheck_lab.id AS id_rad, tbl_trans_medcheck_lab.id AS id_lab, tbl_trans_medcheck_lab.tgl_simpan, tbl_trans_medcheck_lab.id_analis, tbl_trans_medcheck_lab.id_dokter, tbl_trans_medcheck_lab.no_sample, tbl_trans_medcheck_lab.no_lab, tbl_trans_medcheck_lab.status')
                                        ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id=tbl_trans_medcheck_lab.id_medcheck')
                                        ->like('tbl_trans_medcheck_lab.status', (isset($st) ? $st : ''))
                                        ->like('tbl_trans_medcheck.pasien', (!empty($cs) ? $cs : ''))
                                        ->like('DATE(tbl_trans_medcheck.tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                        ->limit($config['per_page'],$hal)
                                        ->order_by('tbl_trans_medcheck_lab.id', 'DESC')
                                        ->get('tbl_trans_medcheck_lab')->result();
            }else{
                   $data['penj'] = $this->db->select('tbl_trans_medcheck.id, tbl_trans_medcheck.id_pasien, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.no_nota, tbl_trans_medcheck.pasien, tbl_trans_medcheck_lab.id AS id_rad, tbl_trans_medcheck_lab.id AS id_lab, tbl_trans_medcheck_lab.tgl_simpan, tbl_trans_medcheck_lab.id_analis, tbl_trans_medcheck_lab.id_dokter, tbl_trans_medcheck_lab.no_sample, tbl_trans_medcheck_lab.no_lab, tbl_trans_medcheck_lab.status')
                                        ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id=tbl_trans_medcheck_lab.id_medcheck')
                                        ->like('tbl_trans_medcheck_lab.status', (isset($st) ? $st : ''))
                                        ->like('tbl_trans_medcheck.pasien', (!empty($cs) ? $cs : ''))
                                        ->like('DATE(tbl_trans_medcheck.tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                        ->limit($config['per_page'])
                                        ->order_by('tbl_trans_medcheck_lab.id', 'DESC')
                                        ->get('tbl_trans_medcheck_lab')->result();
            }
            
            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            $data['cetak']      = '<button type="button" onclick="window.location.href = \''.base_url('transaksi/cetak_data_penj.php?'.(!empty($nt) ? 'filter_nota='.$nt : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tgl_tempo='.$tp : '').(!empty($cs) ? '&filter_cust='.$cs : '').(!empty($sl) ? '&filter_sales='.$sl : '').(!empty($jml) ? '&jml='.$jml : '')).'\'" class="btn btn-warning"><i class="fa fa-print"></i> Cetak</button>';
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_laborat', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function data_pen_spiro() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $id_dokter   = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $hal     = $this->input->get('halaman');
            $id      = $this->input->get('id');
            $cs      = $this->input->get('filter_nama');
            $by      = $this->input->get('filter_bayar');
            $tp      = $this->input->get('filter_tipe');
            $tg      = $this->input->get('filter_tgl');
            $sp      = $this->input->get('filter_periksa');
            $st      = $this->input->get('status');
            $jml     = $this->input->get('jml');
            
            $jml_sql = $this->db->where('status', '0')
                                ->like('pasien', (!empty($cs) ? $cs : ''))
                                ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                ->order_by('id', 'DESC')
                                ->get('v_medcheck_pen_spiro')->num_rows();

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal = $jml_sql;
            }
            
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_pen_spiro.php?status='.(isset($st) ? $st : '').(!empty($cs) ? '&filter_nama='.$cs : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($jml_hal) ? '&jml='.$jml_hal : ''));
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
                   $data['penj'] = $this->db->where('status', '0')
                                            ->like('pasien', (!empty($cs) ? $cs : ''))
                                            ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                            ->limit($config['per_page'], $hal)
                                            ->order_by('id', 'DESC')
                                            ->get('v_medcheck_pen_spiro')->result();
            }else{
                   $data['penj'] = $this->db->where('status', '0')
                                            ->like('pasien', (!empty($cs) ? $cs : ''))
                                            ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                            ->limit($config['per_page'])
                                            ->order_by('id', 'DESC')
                                            ->get('v_medcheck_pen_spiro')->result();
            }
            
            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            $data['cetak']      = '<button type="button" onclick="window.location.href = \''.base_url('transaksi/cetak_data_penj.php?'.(!empty($nt) ? 'filter_nota='.$nt : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tgl_tempo='.$tp : '').(!empty($cs) ? '&filter_cust='.$cs : '').(!empty($sl) ? '&filter_sales='.$sl : '').(!empty($jml) ? '&jml='.$jml : '')).'\'" class="btn btn-warning"><i class="fa fa-print"></i> Cetak</button>';
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_pen_spiro', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function data_pen_ekg() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $id_dokter   = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $hal     = $this->input->get('halaman');
            $id      = $this->input->get('id');
            $cs      = $this->input->get('filter_nama');
            $by      = $this->input->get('filter_bayar');
            $tp      = $this->input->get('filter_tipe');
            $tg      = $this->input->get('filter_tgl');
            $sp      = $this->input->get('filter_periksa');
            $st      = $this->input->get('status');
            $jml     = $this->input->get('jml');
            
            $jml_sql = $this->db->where('status', '0')
                                ->like('pasien', (!empty($cs) ? $cs : ''))
                                ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                ->order_by('id', 'DESC')
                                ->get('v_medcheck_pen_ekg')->num_rows();

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal = $jml_sql;
            }
            
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_pen_ekg.php?status='.(isset($st) ? $st : '').(!empty($cs) ? '&filter_nama='.$cs : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($jml_hal) ? '&jml='.$jml_hal : ''));
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
                   $data['penj'] = $this->db->where('status', '0')
                                            ->like('pasien', (!empty($cs) ? $cs : ''))
                                            ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                            ->limit($config['per_page'], $hal)
                                            ->order_by('id', 'DESC')
                                            ->get('v_medcheck_pen_ekg')->result();
            }else{
                   $data['penj'] = $this->db->where('status', '0')
                                            ->like('pasien', (!empty($cs) ? $cs : ''))
                                            ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                            ->limit($config['per_page'])
                                            ->order_by('id', 'DESC')
                                            ->get('v_medcheck_pen_ekg')->result();
            }
            
            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            $data['cetak']      = '<button type="button" onclick="window.location.href = \''.base_url('transaksi/cetak_data_penj.php?'.(!empty($nt) ? 'filter_nota='.$nt : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tgl_tempo='.$tp : '').(!empty($cs) ? '&filter_cust='.$cs : '').(!empty($sl) ? '&filter_sales='.$sl : '').(!empty($jml) ? '&jml='.$jml : '')).'\'" class="btn btn-warning"><i class="fa fa-print"></i> Cetak</button>';
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_pen_ekg', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function data_pen_hrv() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $id_dokter   = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $hal     = $this->input->get('halaman');
            $id      = $this->input->get('id');
            $cs      = $this->input->get('filter_nama');
            $by      = $this->input->get('filter_bayar');
            $tp      = $this->input->get('filter_tipe');
            $tg      = $this->input->get('filter_tgl');
            $sp      = $this->input->get('filter_periksa');
            $st      = $this->input->get('status');
            $jml     = $this->input->get('jml');
            
            $jml_sql = $this->db->where('status', '0')
                                ->like('pasien', (!empty($cs) ? $cs : ''))
                                ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                ->order_by('id', 'DESC')
                                ->get('v_medcheck_pen_hrv')->num_rows();

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal = $jml_sql;
            }
            
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_pen_hrv.php?status='.(isset($st) ? $st : '').(!empty($cs) ? '&filter_nama='.$cs : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($jml_hal) ? '&jml='.$jml_hal : ''));
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
                   $data['penj'] = $this->db->where('status', '0')
                                            ->like('pasien', (!empty($cs) ? $cs : ''))
                                            ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                            ->limit($config['per_page'], $hal)
                                            ->order_by('id', 'DESC')
                                            ->get('v_medcheck_pen_hrv')->result();
            }else{
                   $data['penj'] = $this->db->where('status', '0')
                                            ->like('pasien', (!empty($cs) ? $cs : ''))
                                            ->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                            ->limit($config['per_page'])
                                            ->order_by('id', 'DESC')
                                            ->get('v_medcheck_pen_hrv')->result();
            }
            
            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            $data['cetak']      = '<button type="button" onclick="window.location.href = \''.base_url('transaksi/cetak_data_penj.php?'.(!empty($nt) ? 'filter_nota='.$nt : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tgl_tempo='.$tp : '').(!empty($cs) ? '&filter_cust='.$cs : '').(!empty($sl) ? '&filter_sales='.$sl : '').(!empty($jml) ? '&jml='.$jml : '')).'\'" class="btn btn-warning"><i class="fa fa-print"></i> Cetak</button>';
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_pen_hrv', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function data_konsul() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $hal     = $this->input->get('halaman');
            $jd      = $this->input->get('filter_judul');
            $jml     = $this->input->get('jml');
//            $jml_sql = ($id_grup->name == 'superadmin' || $id_grup->name == 'owner' || $id_grup->name == 'admin' ? $this->db->get('tbl_trans_jual')->num_rows() : $this->db->where('id_user', $id_user)->where('tgl_masuk', date('Y-m-d'))->get('tbl_trans_jual')->num_rows());

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal = $this->db->select('*')
                                ->where('id_parent', '0')
                                ->like('judul', $jd)
                                ->get('tbl_trans_konsul')->num_rows();
            }
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_konsul.php?'.(!empty($jd) ? '&filter_judul='.$jd.'&' : '').'jml='.$jml_hal);
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
                   $data['sql_konsul'] = $this->db
                                              ->select('*')
                                              ->where('id_parent', '0')
                                              ->like('judul', $jd)
                                              ->limit($config['per_page'], $hal)
                                              ->order_by('id','desc')
                                              ->get('tbl_trans_konsul')->result();
            }else{
                   $data['sql_konsul'] = $this->db
                                              ->select('*')
                                              ->where('id_parent', '0')
                                              ->like('judul', $jd)
                                              ->limit($config['per_page'])
                                              ->order_by('id','desc')
                                              ->get('tbl_trans_konsul')->result();
            }

            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_konsul', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function data_konsul_cari() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $id_dokter   = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $hal     = $this->input->get('halaman');
            $id      = $this->input->get('id');
            $cs      = $this->input->get('filter_nama');
            $by      = $this->input->get('filter_bayar');
            $tp      = $this->input->get('filter_tipe');
            $tg      = $this->input->get('filter_tgl');
            $sp      = $this->input->get('filter_periksa');
            $jml     = $this->input->get('jml');
            

            $jml_sql = $this->db->select('id')
                            ->where('status_hps', '0')
                            ->where('status_bayar', '0')
                            ->like('pasien', $cs)
                            ->order_by('id', 'desc')
                            ->get('tbl_trans_medcheck')->num_rows();

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal = $jml_sql;
            }
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_konsul_cari.php?'.(!empty($cs) ? '&filter_nama='.$cs : '').(!empty($jml_sql) ? '&jml='.$jml_sql : ''));
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 3;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if (!empty($hal)) {
                $data['sql_konsul'] = $this->db
                                           ->select('tbl_trans_medcheck.id, tbl_trans_medcheck.id_user, tbl_trans_medcheck.id_dokter, tbl_trans_medcheck.tgl_simpan, tbl_trans_medcheck.tgl_masuk, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.pasien, tbl_trans_medcheck.keluhan, tbl_trans_medcheck.diagnosa, tbl_trans_medcheck.anamnesa, tbl_m_pasien.kode, tbl_m_pasien.kode_dpn, tbl_m_pasien.tgl_lahir, tbl_m_pasien.jns_klm, tbl_m_pasien.file_name')
                                           ->join('tbl_m_pasien', 'tbl_m_pasien.id=tbl_trans_medcheck.id_pasien')
                                           ->where('tbl_trans_medcheck.status_hps', '0')
                                           ->where('tbl_trans_medcheck.status_bayar', '0')
                                           ->like('tbl_trans_medcheck.pasien', $cs)
                                           ->limit($config['per_page'], $hal)
                                           ->order_by('tbl_trans_medcheck.id', 'desc')
                                           ->get('tbl_trans_medcheck')->result();
            } else {
                $data['sql_konsul'] = $this->db
                                           ->select('tbl_trans_medcheck.id, tbl_trans_medcheck.id_user, tbl_trans_medcheck.id_dokter, tbl_trans_medcheck.tgl_simpan, tbl_trans_medcheck.tgl_masuk, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.pasien, tbl_trans_medcheck.keluhan, tbl_trans_medcheck.diagnosa, tbl_trans_medcheck.anamnesa, tbl_m_pasien.kode, tbl_m_pasien.kode_dpn, tbl_m_pasien.tgl_lahir, tbl_m_pasien.jns_klm, tbl_m_pasien.file_name')
                                           ->join('tbl_m_pasien', 'tbl_m_pasien.id=tbl_trans_medcheck.id_pasien')
                                           ->where('tbl_trans_medcheck.status_hps', '0')
                                           ->where('tbl_trans_medcheck.status_bayar', '0')
                                           ->like('tbl_trans_medcheck.pasien', $cs)
                                           ->limit($config['per_page'])
                                           ->order_by('tbl_trans_medcheck.id', 'desc')
                                           ->get('tbl_trans_medcheck')->result();
            }

            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_konsul_cari', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function data_konsul_post() {
        if (akses::aksesLogin() == TRUE) {
            $setting                = $this->db->get('tbl_pengaturan')->row();
            $id_medc                = $this->input->get('id_medc');
            $id                     = $this->input->get('id');
            $id_resep               = $this->input->get('id_resep');
            $id_pasien              = $this->input->get('id_pasien');
            $id_item                = $this->input->get('id_item');
            $id_item_res            = $this->input->get('id_item_resep');
            $dft_id                 = $this->input->get('dft');
            $userid                 = $this->ion_auth->user()->row()->id;

            $data['poli']           = $this->db->where('status_ant', '1')->get('tbl_m_poli')->result();
            $data['platform']       = $this->db->get('tbl_m_platform')->result();
            $data['gelar']          = $this->db->get('tbl_m_gelar')->result();
            $data['sql_doc']        = $this->db->where('id_user_group', '10')->get('tbl_m_karyawan')->result();
            $data['kerja']          = $this->db->get('tbl_m_jenis_kerja')->result();
            $data['sql_poli']       = $this->db->where('id', $data['sql_dft_id']->id_poli)->get('tbl_m_poli')->row();
            $data['sql_dft_id']     = $this->db->where('id', general::dekrip($dft_id))->get('tbl_pendaftaran')->row();            
            $data['sql_itm_pas']    = $this->db->select('id, nama, nama_pgl')->get('tbl_m_pasien')->result();
            $data['sql_pas']        = $this->db->where('id', general::dekrip($id_pasien))->get('tbl_m_pasien')->row();
            $data['sql_penjamin']   = $this->db->where('status', '1')->get('tbl_m_penjamin')->result();
            
            if(!empty($id_pasien)){
               $data['pasien']         = $this->db->where('id', general::dekrip($id_pasien))->get('tbl_m_pasien')->row(); 
            }
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_konsul_post', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function data_konsul_balas() {
        if (akses::aksesLogin() == TRUE) {
            $setting                = $this->db->get('tbl_pengaturan')->row();
            $id                     = $this->input->get('id');
            $userid                 = $this->ion_auth->user()->row()->id;
            
            if(!empty($id)){
               $data['sql_konsul']         = $this->db->where('id', general::dekrip($id))->get('tbl_trans_konsul')->row(); 
               $data['sql_konsul_bls']     = $this->db->where('id_parent', $data['sql_konsul']->id)->group_by('DATE(tgl_simpan)')->order_by('id', 'desc')->get('tbl_trans_konsul')->result(); 
            }
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_konsul_balas', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    
    public function trans_medcheck_dft() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $query   = $this->input->get('q');
            $hal     = $this->input->get('halaman');
            $nt      = $this->input->get('filter_nota');
            $fn      = explode('/', $nt);
            $tg      = $this->input->get('filter_tgl');
            $tb      = $this->input->get('filter_tgl_bayar');
            $tp      = $this->input->get('filter_tgl_tempo');
            $lk      = $this->input->get('filter_lokasi');
            $cs      = $this->input->get('filter_nama');
            $sn      = $this->input->get('filter_status');
            $sl      = $this->input->get('filter_sales');
            $poli    = $this->input->get('poli');
            $stts    = $this->input->get('status');
            $jml     = $this->input->get('jml');
            $tipe    = $this->input->get('tipe');
//            $jml_sql = ($id_grup->name == 'superadmin' || $id_grup->name == 'owner' || $id_grup->name == 'admin' ? $this->db->get('tbl_trans_jual')->num_rows() : $this->db->where('id_user', $id_user)->where('tgl_masuk', date('Y-m-d'))->get('tbl_trans_jual')->num_rows());

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal = $this->db->select('*')
                                ->where('status_akt !=', '2')
                                ->where('DATE(tgl_masuk)', (!empty($tg) ? $tg : date('Y-m-d')))
                                ->like('nama', $cs)                                
                                ->group_by('tgl_simpan, nama')
                                ->get('tbl_pendaftaran')->num_rows();
            }
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_pendaftaran.php?'.(!empty($cs) ? '&filter_nama='.$cs : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tipe) ? '&tipe='.$tipe : '').'&jml='.$jml);
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
                   $data['penj'] = $this->db->select('*')
                           ->where('status_hps', '0')
                           ->where('status_akt !=', '2')
                           ->like('DATE(tgl_masuk)', (!empty($tg) ? $tg : ''), (!empty($tg) ? 'none' : ''))
                           ->like('nama', $cs)
                           ->like('id_poli', $poli)
                           ->like('tipe_rawat', $tipe)
                           ->limit($config['per_page'],$hal)
                           ->group_by('tgl_simpan, nama')
                           ->order_by('status_gc','desc')
                           ->get('tbl_pendaftaran')->result();
            }else{
                   $data['penj'] = $this->db->select('*')
                           ->where('status_hps', '0')
                           ->where('status_akt !=', '2')
                           ->like('DATE(tgl_masuk)', (!empty($tg) ? $tg : ''), (!empty($tg) ? 'none' : ''))
                           ->like('nama', $cs)
                           ->like('id_poli', $poli)
                           ->like('tipe_rawat', $tipe)
                           ->limit($config['per_page'])
                           ->group_by('tgl_simpan, nama')
                           ->order_by('status_gc','desc')
                           ->get('tbl_pendaftaran')->result();
            }

            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            $data['cetak']      = '<button type="button" onclick="window.location.href = \''.base_url('transaksi/cetak_data_penj.php?'.(!empty($nt) ? 'filter_nota='.$nt : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tgl_tempo='.$tp : '').(!empty($cs) ? '&filter_cust='.$cs : '').(!empty($sl) ? '&filter_sales='.$sl : '').(!empty($jml) ? '&jml='.$jml : '')).'\'" class="btn btn-warning"><i class="fa fa-print"></i> Cetak</button>';
            /* --End Blok pagination-- */
            
            $data['pengaturan'] = $pengaturan;
            $data['sql_poli']       = $this->db->get('tbl_m_poli')->result();
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_pendf', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
        
    public function trans_medcheck_ant() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $query   = $this->input->get('q');
            $hal     = $this->input->get('halaman');
            $tg      = $this->input->get('filter_tgl');
            $pl      = $this->input->get('filter_poli');
            $stts    = $this->input->get('status');
            $jml     = $this->input->get('jml');
//            $jml_sql = ($id_grup->name == 'superadmin' || $id_grup->name == 'owner' || $id_grup->name == 'admin' ? $this->db->get('tbl_trans_jual')->num_rows() : $this->db->where('id_user', $id_user)->where('tgl_masuk', date('Y-m-d'))->get('tbl_trans_jual')->num_rows());

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal =  $this->db->select('*')
                                     ->where('ddate', date('Y-m-d'))->where('status !=', '2')
                                     ->like('ddate', $tg)
                                     ->like('cnoro', $pl)->limit(100)
                                     ->get('tr_queue')->num_rows();
            }
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_antrian.php?'.(!empty($filter_nama) ? '&filter_nama='.$filter_nama : '').'&jml='.$jml);
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
//                   $data['penj'] = $this->db->select('*')
//                           ->where('status_akt !=', '2')
//                           ->where('DATE(tgl_masuk)', (!empty($tg) ? $tg : date('Y-m-d')))
//                           ->like('nama', $cs)
//                           ->limit($config['per_page'],$hal)
//                           ->order_by('no_urut','asc')
//                           ->get('tbl_pendaftaran')->result();
            }else{
                   $data['penj'] = $this->db->select('*')
                                           ->where('ddate', date('Y-m-d'))->where('status !=', '2')
                                           ->like('ddate', $tg)
                                           ->like('cnoro', $pl)->limit(100)
                                           ->get('tr_queue')->result();
            }

            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            $data['cetak']      = '<button type="button" onclick="window.location.href = \''.base_url('transaksi/cetak_data_penj.php?'.(!empty($nt) ? 'filter_nota='.$nt : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tgl_tempo='.$tp : '').(!empty($cs) ? '&filter_cust='.$cs : '').(!empty($sl) ? '&filter_sales='.$sl : '').(!empty($jml) ? '&jml='.$jml : '')).'\'" class="btn btn-warning"><i class="fa fa-print"></i> Cetak</button>';
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_antrian', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function trans_medcheck_ant_det() {
        if (akses::aksesLogin() == TRUE) {         
            $setting                = $this->db->get('tbl_pengaturan')->row();
            $id_medc                = $this->input->get('id_medc');
            $id                     = $this->input->get('id');
            $id_resep               = $this->input->get('id_resep');
            $id_pasien              = $this->input->get('id_pasien');
            $id_item                = $this->input->get('id_item');
            $id_item_res            = $this->input->get('id_item_resep');
            $dft_id                 = $this->input->get('dft');
            $userid                 = $this->ion_auth->user()->row()->id;
            
            $data['poli']           = $this->db->where('status_ant', '1')->get('tbl_m_poli')->result();
            $data['platform']       = $this->db->get('tbl_m_platform')->result();
            $data['gelar']          = $this->db->get('tbl_m_gelar')->result();
            $data['sql_doc']        = $this->db->where('id_user_group', '10')->get('tbl_m_karyawan')->result();
            $data['kerja']          = $this->db->get('tbl_m_jenis_kerja')->result();
            $data['sql_poli']       = $this->db->where('id', $data['sql_dft_id']->id_poli)->get('tbl_m_poli')->row();
            $data['sql_dft_id']     = $this->db->where('id', general::dekrip($dft_id))->get('tbl_pendaftaran')->row();            
            $data['sql_itm_pas']    = $this->db->select('id, nama, nama_pgl')->get('tbl_m_pasien')->result();
            $data['sql_pas']        = $this->db->where('id', general::dekrip($id_pasien))->get('tbl_m_pasien')->row();
            $data['sql_penjamin']   = $this->db->where('status', '1')->get('tbl_m_penjamin')->result();
            
            if(!empty($id)){
               $data['sql_antrian']    = $this->db->where('id', $id)->get('tr_queue')->row(); 
            }
            
//            echo '<pre>';
//            print_r($_SERVER);
//            echo '</pre>';
            
//            echo BASE_ANTRIAN;
//            echo $_SERVER['SERVER_ADDR'];
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_antrian_det', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function trans_medcheck_ant_simpan() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $ant    = $this->input->get('antrian');
            $typ    = $this->input->get('type');
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function set_data_antrian() {
        $id             = $this->input->get('id');
        $idv            = $this->input->get('id_view');
        $ant            = $this->input->get('antrian');
        $poli           = $this->input->get('poli');
        $sts            = $this->input->get('status_pgl');
        $tipe           = $this->input->get('type');
        $status         = $this->input->get('status');
        $stp            = $this->input->post('status_poli');

        $dt = array();
        $dt['csflagqu'] = $sts;
        $dt['ccustsrv'] = strtoupper($this->session->userdata('nama_lengkap'));
        $dt['cnote']    = (!empty($stp) ? $stp : 'PANGGILAN');
        $dt['csflaghd'] = $this->session->userdata('cs_number');
        $dt['crgcode']  = $this->session->userdata('region');
        $dt['ccode']    = $this->session->userdata('company');
        
        if ($sts == '0') {
            $quevw      = $this->db->select('tr_queue.id, tr_queue.id_dft, tr_queue.id_medcheck, tr_queue.ddate, tr_queue.ddatestart, tr_queue.ddatepross, tr_queue.ddateend, tr_queue.cnoro, tr_queue.ncount, tr_queue.status_pgl AS status')->where('tr_queue.id', $id)->get('tr_queue')->row();
            $sql_medc   = $this->db->where('id', $quevw->id_medcheck)->get('tbl_trans_medcheck');
            $sql_dft    = $this->db->where('id', $quevw->id_dft)->get('tbl_pendaftaran')->row();
            $id_pasien  = ($sql_medc->num_rows() > 0 ? $sql_medc->row()->id_pasien : $sql_dft->id_pasien);
            $nama       = ($sql_medc->num_rows() > 0 ? $sql_medc->row()->pasien : $sql_dft->nama);
            $sql_pas    = $this->db->where('id', $id_pasien)->get('tbl_m_pasien')->row();
            $pasien     = ($sql_medc->num_rows() > 0 ? $sql_pas->nama : $sql_dft->nama);
            
            $nama_poli  = str_replace(' ', '_', strtolower($poli));

            $text       = "Antrian " . (!empty($ant) ? $ant : '0') . " ke " . $poli;
            $text2      = "Pasien " . strtolower($pasien) ." ke " . $poli; // antrian ".$quevw->ncount. "

            // Yes French is a beautiful language.
            $lang       = "en";

            // MP3 filename generated using MD5 hash
            // Added things to prevent bug if you want same sentence in two different languages
            $filename   = substr(md5($lang . "?" . urlencode($text)), 0, 7) . '_' . sprintf('%03d', $quevw->ncount) . '_' . date('Ymd') . '_' . $nama_poli;
            $filename2  =  'pasien_' . $quevw->id . '_' . date('Ymd') . '_' . $nama_poli;

            // Save MP3 file in folder with .mp3 extension 
            $fldr   = realpath('../'.BASE_ANTRIAN.'/scale/audio');
            $file   = $fldr . "/" . $filename . ".mp3";
            $file2  = $fldr . "/" . $filename2 . ".mp3";

            // Check folder exists, if not create it, else verify CHMOD
            if (!is_dir($fldr)) {
                mkdir($fldr);
            } else {
                $perms = substr(sprintf('%o', fileperms('../'.BASE_ANTRIAN.'/scale/audio/')), -4);
                if ($perms != "0777") {
                    chmod('../'.BASE_ANTRIAN.'/scale/audio/', 0777);
                }
            }

            // If MP3 file exists do not create new request
            if (!file_exists($file2)) {
                // Download content
                $mp3        = file_get_contents('https://translate.google.com/translate_tts?ie=UTF-8&client=tw-ob&q=' . urlencode($text) . '&tl=ID');
                $mp3_jeneng = file_get_contents('https://translate.google.com/translate_tts?ie=UTF-8&client=tw-ob&q=' . urlencode($text2) . '&tl=ID');
                file_put_contents($file, $mp3);
                file_put_contents($file2, $mp3_jeneng);
            }

            $this->db->query("UPDATE tr_queue SET status_pgl='0' WHERE id_view='".$idv."';");
            
            $upd = array(
                'status_pgl' => '0'
            );
            
            $this->db->where('id_view', $idv)->update("tr_queue", $upd);
			
            $dt['ddatepross']   = date('Y-m-d H:i:s');
            $dt['status']       = '1';
            $dt['status_pgl']   = '1';
            $dt['suara']        = $filename.".mp3";
            $dt['suara2']       = (!empty($pasien) ? $filename2.".mp3" : $filename.".mp3");
        }elseif ($sts == '1') {
            $dt['ddateend']     = date('Y-m-d H:i:s');
            $dt['status']       = '2';
            $dt['status_pgl']   = '0';
        }
        
        $dt['dLastUpdate'] = date('Y-m-d H:i:s');
        
        $this->db->where('id', $id)->update("tr_queue", $dt);

        if ($sts == 'CS') {
            $sts = 'DF';
        }
        
        redirect(base_url('medcheck/data_antrian_det.php?id='.$id.'&antrian='.$ant.'&type='.$tipe.'&status='.$status.'&status_pgl=1&id_view='.$idv.'&poli='.$poli));
    }

    
    public function trans_medcheck_dft_tambah() {
        if (akses::aksesLogin() == TRUE) {
            $setting                = $this->db->get('tbl_pengaturan')->row();
            $id_medc                = $this->input->get('id_medc');
            $id                     = $this->input->get('id');
            $id_resep               = $this->input->get('id_resep');
            $id_pasien              = $this->input->get('id_pasien');
            $id_item                = $this->input->get('id_item');
            $id_item_res            = $this->input->get('id_item_resep');
            $dft_id                 = $this->input->get('dft');
            $userid                 = $this->ion_auth->user()->row()->id;

            $data['poli']           = $this->db->where('status', '1')->where('status_ant', '1')->get('tbl_m_poli')->result();
            $data['platform']       = $this->db->get('tbl_m_platform')->result();
            $data['gelar']          = $this->db->get('tbl_m_gelar')->result();
            $data['sql_doc']        = $this->db->where('id_user_group', '10')->where('status_aps', '0')->get('tbl_m_karyawan')->result();
            $data['sql_kary']       = $this->db->where('status_aps', '0')->get('tbl_m_karyawan')->result();
            $data['kerja']          = $this->db->get('tbl_m_jenis_kerja')->result();
            $data['sql_poli']       = $this->db->where('id', $data['sql_dft_id']->id_poli)->get('tbl_m_poli')->row();
            $data['sql_dft_id']     = $this->db->where('id', general::dekrip($dft_id))->get('tbl_pendaftaran')->row();            
            $data['sql_itm_pas']    = $this->db->select('id, nama, nama_pgl')->get('tbl_m_pasien')->result();
            $data['sql_pas']        = $this->db->where('id', general::dekrip($id_pasien))->get('tbl_m_pasien')->row();
            $data['sql_penjamin']   = $this->db->where('status', '1')->get('tbl_m_penjamin')->result();
            
            if(!empty($id_pasien)){
               $data['pasien']         = $this->db->where('id', general::dekrip($id_pasien))->get('tbl_m_pasien')->row(); 
            }
            
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_daftar', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function trans_medcheck_dft_gc() {
        if (akses::aksesLogin() == TRUE) {
            $setting             = $this->db->get('tbl_pengaturan')->row();
            $dft_id              = $this->input->get('dft');
            $userid              = $this->ion_auth->user()->row()->id;

            $data['poli']        = $this->db->where('status_ant', '1')->get('tbl_m_poli')->result();
            $data['platform']    = $this->db->get('tbl_m_platform')->result();
            $data['gelar']       = $this->db->get('tbl_m_gelar')->result();
            $data['sql_doc']     = $this->db->where('id_user_group', '10')->get('tbl_m_karyawan')->result();
            $data['kerja']       = $this->db->get('tbl_m_jenis_kerja')->result();
            $data['sql_poli']    = $this->db->where('id', $data['sql_dft_id']->id_poli)->get('tbl_m_poli')->row();
            $data['sql_dft']     = $this->db->where('id', general::dekrip($dft_id))->get('tbl_pendaftaran')->row();            
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_daftar_gc', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function trans_medcheck_dft_gc_ttd() {
        if (akses::aksesLogin() == TRUE) {
            $setting             = $this->db->get('tbl_pengaturan')->row();
            $dft_id              = $this->input->get('dft');
            $userid              = $this->ion_auth->user()->row()->id;

            $data['sql_dft']     = $this->db->where('id', general::dekrip($dft_id))->get('tbl_pendaftaran')->row();            
            $data['sql_dft_gc']  = $this->db->where('id_pendaftaran', $data['sql_dft']->id)->get('tbl_pendaftaran_gc')->row();            

            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_daftar_gc_ttd', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function trans_medcheck_dft_gc_det() {
        if (akses::aksesLogin() == TRUE) {
            $setting             = $this->db->get('tbl_pengaturan')->row();
            $dft_id              = $this->input->get('dft');
            $userid              = $this->ion_auth->user()->row()->id;

            $data['sql_dft']     = $this->db->where('id', general::dekrip($dft_id))->get('tbl_pendaftaran')->row();            
            $data['sql_dft_gc']  = $this->db->where('id_pendaftaran', $data['sql_dft']->id)->get('tbl_pendaftaran_gc')->row();            
                        
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_daftar_gc_det', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function trans_medcheck_dft_konfirm() {
        if (akses::aksesLogin() == TRUE) {
            $setting                = $this->db->get('tbl_pengaturan')->row();
            $id_medc                = $this->input->get('id_medc');
            $id                     = $this->input->get('dft');
            $id_resep               = $this->input->get('id_resep');
            $id_item                = $this->input->get('id_item');
            $id_item_res            = $this->input->get('id_item_resep');
            $userid                 = $this->ion_auth->user()->row()->id;

            $data['poli']       = $this->db->where('status_ant', '1')->get('tbl_m_poli')->result();
            $data['gelar']      = $this->db->get('tbl_m_gelar')->result();
            $data['sql_doc']    = $this->db->where('id_user_group', '10')->where('status_aps', '0')->get('tbl_m_karyawan')->result();
            $data['kerja']      = $this->db->get('tbl_m_jenis_kerja')->result();
            $data['sql_dft_id'] = $this->db->where('id', general::dekrip($id))->get('tbl_pendaftaran')->row();
            $data['sql_poli']   = $this->db->where('id', $data['sql_dft_id']->id_poli)->get('tbl_m_poli')->row();
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_daftar_konfirm', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function trans_medcheck_dft_konfirm_simpan() {
        if (akses::aksesLogin() == TRUE) {
            $id           = $this->input->post('id');
            $antrian      = $this->input->post('no_antrian');
            $hadir        = $this->input->post('status_hdr');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'NIK', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'     => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);
                redirect(base_url('medcheck/data_pendaftaran.php'));
            } else {
                
                $data_pas = [
                    'tgl_modif'    => date('Y-m-d H:i:s'),
                    'no_urut'      => (int)$antrian,
                    'status_akt'   => '1',
                    'status_hdr'   => $hadir
                ];
                
                try {
                    // Start database transaction
                    $this->db->trans_begin();
                    
                    // Update data in the database
                    $this->db->where('id', general::dekrip($id))->update('tbl_pendaftaran', $data_pas);
                $last_id = general::dekrip($id);                
                    
                    // Check if the transaction was successful
                    if ($this->db->trans_status() === FALSE) {
                        // Something went wrong, rollback transaction
                        $this->db->trans_rollback();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Gagal konfirmasi pasien. Silahkan coba lagi.");');
                    } else {
                        // All good, commit the transaction
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Pasien terkonfirmasi hadir");');
                    }
                } catch (Exception $e) {
                    // Rollback transaction on exception
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Terjadi kesalahan sistem. Silahkan coba lagi.");');
                }
                
                redirect(base_url('medcheck/data_pendaftaran.php?filter_tgl='.date('Y-m-d')));
            }
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function trans_medcheck_dft_simpan() {
        if (akses::aksesLogin() == TRUE) {
            $id_ant       = $this->input->post('id_ant');
            $id_pasien    = $this->input->post('id_pasien');
            $ant          = $this->input->post('antrian');
            $no_rm        = $this->input->post('no_rm');
            $nik          = $this->input->post('nik');
            $gelar        = $this->input->post('gelar');
            $nama         = $this->input->post('nama');
            $no_hp        = $this->input->post('no_hp');
            $no_rmh       = $this->input->post('no_rmh');
            $tmp_lahir    = $this->input->post('tmp_lahir');
            $tgl_lahir    = $this->input->post('tgl_lahir');
            $alamat       = $this->input->post('alamat');
            $alamat_dom   = $this->input->post('alamat_dom');
            $jns_klm      = $this->input->post('jns_klm');
            $pekerjaan    = $this->input->post('pekerjaan');
            $tipe_pas     = $this->input->post('tipe_pas');
            $tipe_rwt     = $this->input->post('tipe_rawat');
            $file         = $this->input->post('file');
            $file_id      = $this->input->post('file_id');
            $alergi       = $this->input->post('alergi');
            $inst         = $this->input->post('instansi');
            $inst_alamat  = $this->input->post('instansi_almt');
            $referall     = $this->input->post('referall');
            $tgl_masuk    = $this->input->post('tgl_masuk');
            $plat         = $this->input->post('platform');
            $tipe         = $this->input->post('tipe');
            $poli         = $this->input->post('poli');
            $dokter       = $this->input->post('dokter');
            
            $pengaturan   = $this->db->get('tbl_pengaturan')->row();

            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('nik', 'NIK', 'required');
            $this->form_validation->set_rules('gelar', 'Gelar', 'required');
            $this->form_validation->set_rules('nama', 'Nama Pasien', 'required');
            $this->form_validation->set_rules('jns_klm', 'Jenis Kelamin', 'required');
            $this->form_validation->set_rules('tmp_lahir', 'Tempat Lahir', 'required');
            $this->form_validation->set_rules('tgl_lahir', 'Tanggal Lahir', 'required');
            $this->form_validation->set_rules('alamat', 'Alamat', 'required');
            $this->form_validation->set_rules('platform', 'Platform', 'required');
            $this->form_validation->set_rules('file', 'File', 'required');
            $this->form_validation->set_rules('file_id', 'File ID', 'required');
            $this->form_validation->set_rules('tipe_rawat', 'Tipe', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'nik'           => form_error('nik'),
                    'gelar'         => form_error('gelar'),
                    'nama'          => form_error('nama'),
                    'jns_klm'       => form_error('jns_klm'),
                    'tmp_lahir'     => form_error('tmp_lahir'),
                    'tgl_lahir'     => form_error('tgl_lahir'),
                    'alamat'        => form_error('alamat'),
                    'platform'      => form_error('platform'),
                    'file'          => form_error('file'),
                    'file_id'       => form_error('file_id'),
                    'tipe_rawat'    => form_error('tipe_rawat'),
                ];

                // value data pasien                        
                $this->session->set_flashdata('tipe_pas', $tipe_pas);
                $this->session->set_flashdata('nik_baru', $nik);
                $this->session->set_flashdata('nama', $nama);
                $this->session->set_flashdata('tmp_lahir', $tmp_lahir);
                $this->session->set_flashdata('tgl_lahir', $tgl_lahir);
                $this->session->set_flashdata('jns_klm', $jns_klm);
                $this->session->set_flashdata('no_hp', $no_hp);
                $this->session->set_flashdata('no_rmh', $no_rmh);
                $this->session->set_flashdata('alamat', $alamat);
                $this->session->set_flashdata('alamat_dom', $alamat_dom);
                $this->session->set_flashdata('pekerjaan', $pekerjaan);
                $this->session->set_flashdata('poli', $poli);
                $this->session->set_flashdata('dokter', $dokter);
                $this->session->set_flashdata('alergi', $alergi);

                // File Kosong
                if(!empty($msg_error['file'])){
                    $this->session->set_flashdata('medcheck_file_toast', 'toastr.error("Foto Pasien tidak boleh kosong.");');
                }

                if(!empty($msg_error['file_id'])){
                    $this->session->set_flashdata('medcheck_file_id_toast', 'toastr.error("Foto Identitas tidak boleh kosong.");');
                }

                $this->session->set_flashdata('form_error', $msg_error);
                // $this->session->set_flashdata('medcheck_toast', 'toastr.error("Validation error, please check the form again.");');
                redirect(base_url('medcheck/daftar.php?tipe_pas=' . $tipe_pas . '&id_ant=' . '&id_pasien=' . $id_pasien));
            } else {
                // Check if this is a new patient registration (tipe_pas = 2)
                if ($tipe_pas == '2') {
                    // Check if NIK already exists in the database
                    $sql_cek = $this->db->where('nik', $nik)
                                               ->get('tbl_m_pasien')
                                               ->row();
                    
                    if ($sql_cek) {
                        // Set flash data for error message
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("NIK sudah terdaftar atas nama :<br/><b>'.$sql_cek->nama_pgl.'</b>.<br/>Silahkan gunakan pendaftaran pasien lama.");');
                        
                        // Preserve form data in session
                        $this->session->set_flashdata('tipe_pas', $tipe_pas);
                        $this->session->set_flashdata('nik_baru', $nik);
                        $this->session->set_flashdata('nama', $nama);
                        $this->session->set_flashdata('tmp_lahir', $tmp_lahir);
                        $this->session->set_flashdata('tgl_lahir', $tgl_lahir);
                        $this->session->set_flashdata('jns_klm', $jns_klm);
                        $this->session->set_flashdata('no_hp', $no_hp);
                        $this->session->set_flashdata('no_rmh', $no_rmh);
                        $this->session->set_flashdata('alamat', $alamat);
                        $this->session->set_flashdata('alamat_dom', $alamat_dom);
                        $this->session->set_flashdata('pekerjaan', $pekerjaan);
                        $this->session->set_flashdata('poli', $poli);
                        $this->session->set_flashdata('dokter', $dokter);
                        $this->session->set_flashdata('alergi', $alergi);
                        
                        // Redirect back to the registration form
                        redirect(base_url('medcheck/daftar.php?tipe_pas=2'));
                    }
                }

                
                $tmsk       = $this->tanggalan->tgl_indo_sys($tgl_masuk);
                $sql_ins    = $this->db->where('id', $inst)->get('tbl_m_pelanggan')->row();
                $sql_glr    = $this->db->where('id', $gelar)->get('tbl_m_gelar')->row();

                // Count the number of patients registered for the same day and same poli
                $sql_num = $this->db->select('COUNT(*) AS jml')
                                    ->where('DATE(tgl_masuk)', $tmsk)
                                    ->where('id_poli', $poli)
                                    ->get('tbl_pendaftaran');

                // Generate sequential number for the patient
                $no_urut = $sql_num->row()->jml + 1;

                $data = [
                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                    'tgl_masuk'         => $tmsk.' '.date('H:i:s'),
                    'id_ant'            => (!empty($id_ant) ? $id_ant : 0),
                    'id_pasien'         => general::dekrip($id_pasien),
                    'id_gelar'          => (!empty($gelar) ? $gelar : '0'),
                    'id_poli'           => (!empty($poli) ? $poli : '0'),
                    'id_dokter'         => (!empty($dokter) ? $dokter : '0'),
                    'id_pekerjaan'      => (!empty($pekerjaan) ? $pekerjaan : '0'),
                    'id_instansi'       => (!empty($inst) ? $sql_ins->id : '0'),
                    'id_referall'       => (!empty($referall) ? $referall : '0'),
                    'no_urut'           => $no_urut,
                    'nik'               => $nik,
                    'nama'              => stripslashes($nama),
                    'nama_pgl'          => stripslashes(strtoupper($sql_glr->gelar.' '.$nama)),
                    'tmp_lahir'         => (!empty($tmp_lahir) ? $tmp_lahir : ''),
                    'tgl_lahir'         => (!empty($tgl_lahir) ? $this->tanggalan->tgl_indo_sys($tgl_lahir) : '0000-00-00'),
                    'jns_klm'           => (!empty($jns_klm) ? $jns_klm : 0),
                    'kontak'            => $no_hp,
                    'kontak_rmh'        => $no_rmh,
                    'alamat'            => $alamat,
                    'alamat_dom'        => $alamat_dom,
                    'instansi'          => $sql_ins->nama,
                    'instansi_alamat'   => $sql_ins->alamat,
                    'file_base64'       => $file,
                    'file_base64_id'    => $file_id,
                    'alergi'            => $alergi,
                    'tipe'              => (!empty($tipe) ? $tipe : '0'),
                    'tipe_bayar'        => (!empty($plat) ? $plat : '0'),
                    'tipe_rawat'        => (!empty($tipe_rwt) ? $tipe_rwt : '0'),
                    'status'            => $tipe_pas,
                    'status_akt'        => '0',
                    'status_hdr'        => '0',
                    'status_dft'        => '1',
                ];

                try {
                    // Start database transaction
                    $this->db->trans_begin();
                    
                    // Check for form resubmission
                    if (check_form_submitted($this->input->post('form_id'))) {
                        $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Form sudah disubmit sebelumnya");');
                        redirect(base_url('medcheck/daftar.php?tipe_pas=' . $tipe_pas));
                        return;
                    }
                    
                    // Insert data into the database
                    $this->db->insert('tbl_pendaftaran', $data);
                    
                    // Check if the transaction was successful
                    if ($this->db->trans_status() === FALSE) {
                        // Something went wrong, rollback transaction
                        $this->db->trans_rollback();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Gagal menyimpan data pendaftaran. Silahkan coba lagi.");');
                    } else {
                        // All good, commit the transaction
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data pendaftaran berhasil disimpan.");');
                    }
                    
                    // Redirect to appropriate page
                    redirect(base_url('medcheck/data_pendaftaran.php?filter_tgl=' . date('Y-m-d')));
                    
                } catch (Exception $e) {
                    // Rollback transaction on exception
                    $this->db->trans_rollback();
                    
                    // Set error message
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Terjadi kesalahan sistem. Silahkan coba lagi.");');
                    
                    // Redirect back to form
                    redirect(base_url('medcheck/daftar.php?tipe_pas=' . $tipe_pas));
                }
            }
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function trans_medcheck_dft_update() {
        if (akses::aksesLogin() == TRUE) {
            $dft          = $this->input->post('id_dft');
            $id_ant       = $this->input->post('id_ant');
            $id_pasien    = $this->input->post('id_pasien');
            $ant          = $this->input->post('antrian');
            $no_rm        = $this->input->post('no_rm');
            $nik          = $this->input->post('nik');
            $gelar        = $this->input->post('gelar');
            $nama         = $this->input->post('nama');
            $no_hp        = $this->input->post('no_hp');
            $no_rmh       = $this->input->post('no_rmh');
            $tmp_lahir    = $this->input->post('tmp_lahir');
            $tgl_lahir    = $this->input->post('tgl_lahir');
            $alamat       = $this->input->post('alamat');
            $alamat_dom   = $this->input->post('alamat_dom');
            $jns_klm      = $this->input->post('jns_klm');
            $pekerjaan    = $this->input->post('pekerjaan');
            $tipe_pas     = $this->input->post('tipe_pas');
            $tipe_rwt     = $this->input->post('tipe_rawat');
            $file         = $this->input->post('file');
            $file_id      = $this->input->post('file_id');
            $alergi       = $this->input->post('alergi');
            $inst         = $this->input->post('instansi');
            $inst_alamat  = $this->input->post('instansi_almt');
            $referall     = $this->input->post('referall');
            $tgl_masuk    = $this->input->post('tgl_masuk');
            $plat         = $this->input->post('platform');
            $tipe         = $this->input->post('tipe');
            $poli         = $this->input->post('poli');
            $dokter       = $this->input->post('dokter');
            
            $pengaturan   = $this->db->get('tbl_pengaturan')->row();

            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('nik', 'NIK', 'required');
            $this->form_validation->set_rules('gelar', 'Gelar', 'required');
            $this->form_validation->set_rules('nama', 'Nama Pasien', 'required');
            $this->form_validation->set_rules('jns_klm', 'Jenis Kelamin', 'required');
            $this->form_validation->set_rules('tmp_lahir', 'Tempat Lahir', 'required');
            $this->form_validation->set_rules('tgl_lahir', 'Tanggal Lahir', 'required');
            $this->form_validation->set_rules('alamat', 'Alamat', 'required');
            $this->form_validation->set_rules('platform', 'Platform', 'required');
            $this->form_validation->set_rules('tipe_rawat', 'Tipe', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'nik'           => form_error('nik'),
                    'gelar'         => form_error('gelar'),
                    'nama'          => form_error('nama'),
                    'jns_klm'       => form_error('jns_klm'),
                    'tmp_lahir'     => form_error('tmp_lahir'),
                    'tgl_lahir'     => form_error('tgl_lahir'),
                    'alamat'        => form_error('alamat'),
                    'platform'      => form_error('platform'),
                    'tipe_rawat'    => form_error('tipe_rawat'),
                ];

                // value data pasien                        
                $this->session->set_flashdata('tipe_pas', $tipe_pas);
                $this->session->set_flashdata('nik_baru', $nik);
                $this->session->set_flashdata('nama', $nama);
                $this->session->set_flashdata('tmp_lahir', $tmp_lahir);
                $this->session->set_flashdata('tgl_lahir', $tgl_lahir);
                $this->session->set_flashdata('jns_klm', $jns_klm);
                $this->session->set_flashdata('no_hp', $no_hp);
                $this->session->set_flashdata('no_rmh', $no_rmh);
                $this->session->set_flashdata('alamat', $alamat);
                $this->session->set_flashdata('alamat_dom', $alamat_dom);
                $this->session->set_flashdata('pekerjaan', $pekerjaan);
                $this->session->set_flashdata('poli', $poli);
                $this->session->set_flashdata('dokter', $dokter);
                $this->session->set_flashdata('alergi', $alergi);

                $this->session->set_flashdata('form_error', $msg_error);
                // $this->session->set_flashdata('medcheck_toast', 'toastr.error("Validation error, please check the form again.");');
                redirect(base_url('medcheck/daftar.php?tipe_pas=' . $tipe_pas . '&id_ant=' . '&id_pasien=' . $id_pasien));
            } else {               
                $tmsk       = $this->tanggalan->tgl_indo_sys($tgl_masuk);
                $sql_dft    = $this->db->where('id', general::dekrip($dft))->get('tbl_pendaftaran')->row();
                $sql_ins    = $this->db->where('id', $inst)->get('tbl_m_pelanggan')->row();
                $sql_glr    = $this->db->where('id', $gelar)->get('tbl_m_gelar')->row();

                // Count the number of patients registered for the same day and same poli
                $sql_num = $this->db->select('COUNT(*) AS jml')
                                    ->where('DATE(tgl_masuk)', $tmsk)
                                    ->where('id_poli', $poli)
                                    ->get('tbl_pendaftaran');

                // Generate sequential number for the patient
                $no_urut = $sql_num->row()->jml + 1;

                $data = [
                    'tgl_modif'        => date('Y-m-d H:i:s'),
                    'id_gelar'          => (!empty($gelar) ? $gelar : '0'),
                    'id_poli'           => (!empty($poli) ? $poli : '0'),
                    'id_dokter'         => (!empty($dokter) ? $dokter : '0'),
                    'id_pekerjaan'      => (!empty($pekerjaan) ? $pekerjaan : '0'),
                    'id_instansi'       => (!empty($inst) ? $sql_ins->id : '0'),
                    'id_referall'       => (!empty($referall) ? $referall : '0'),
                    'no_urut'           => $no_urut,
                    'nik'               => $nik,
                    'nama'              => stripslashes($nama),
                    'nama_pgl'          => stripslashes(strtoupper($sql_glr->gelar.' '.$nama)),
                    'tmp_lahir'         => (!empty($tmp_lahir) ? $tmp_lahir : ''),
                    'tgl_lahir'         => (!empty($tgl_lahir) ? $this->tanggalan->tgl_indo_sys($tgl_lahir) : '0000-00-00'),
                    'jns_klm'           => (!empty($jns_klm) ? $jns_klm : 0),
                    'kontak'            => $no_hp,
                    'kontak_rmh'        => $no_rmh,
                    'alamat'            => $alamat,
                    'alamat_dom'        => $alamat_dom,
                    'instansi'          => $sql_ins->nama,
                    'instansi_alamat'   => $sql_ins->alamat,
                    'file_base64'       => (!empty($file) ? $file : $sql_dft->file_base64),
                    'file_base64_id'    => (!empty($file_id) ? $file_id : $sql_dft->file_base64_id),
                    'alergi'            => $alergi,
                    'tipe'              => (!empty($tipe) ? $tipe : '0'),
                    'tipe_bayar'        => (!empty($plat) ? $plat : '0'),
                    'tipe_rawat'        => (!empty($tipe_rwt) ? $tipe_rwt : '0'),
                ];

                try {
                    // Start database transaction
                    $this->db->trans_begin();
                    
                    // Check for form resubmission
                    if (check_form_submitted($this->input->post('form_id'))) {
                        $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Form sudah disubmit sebelumnya");');
                        redirect(base_url('medcheck/daftar.php?tipe_pas=' . $tipe_pas));
                        return;
                    }
                    
                    // Insert data into the database
                    $this->db->where('id', general::dekrip($dft))->update('tbl_pendaftaran', $data);
                     
                    // Check if the transaction was successful
                    if ($this->db->trans_status() === FALSE) {
                        // Something went wrong, rollback transaction
                        $this->db->trans_rollback();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Gagal menyimpan data pendaftaran. Silahkan coba lagi.");');
                    } else {
                        // All good, commit the transaction
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data pendaftaran berhasil disimpan.");');
                    }
                    
                    // Redirect to appropriate page
                    redirect(base_url('medcheck/data_pendaftaran.php?filter_tgl=' . date('Y-m-d')));
                    
                } catch (Exception $e) {
                    // Rollback transaction on exception
                    $this->db->trans_rollback();
                    
                    // Set error message
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Terjadi kesalahan sistem. Silahkan coba lagi.");');
                    
                    // Redirect back to form
                    redirect(base_url('medcheck/daftar.php?tipe_pas=' . $tipe_pas));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function trans_medcheck_dft_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $dft          = $this->input->get('id');
            
            if(!empty($dft)){
//                $this->db->where('id', general::dekrip($dft))->delete('tbl_pendaftaran');

//                if($this->db->affected_rows() > 0){
                    $this->db->where('id', general::dekrip($dft))->update('tbl_pendaftaran', array('status_hps'=>'1'));
//                    $this->db->where('id', $sql_dft->id)->update('tbl_pendaftaran', array('status_hps'=>'1'));
                    
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri pendaftaran berhasil dihapus !");');
//                }else{
//                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri pendaftaran gagal dihapus !");');
//                }
            }
            
            redirect(base_url('medcheck/data_pendaftaran.php'));
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function trans_medcheck() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id                 = $this->input->get('id');
            $id_produk          = $this->input->get('id_produk');
            $id_resep           = $this->input->get('id_resep');
            $id_ass             = $this->input->get('id_ass');
            $id_lab             = $this->input->get('id_lab');
            $id_pen             = $this->input->get('id_pen');
            $id_rad             = $this->input->get('id_rad');
            $id_rsm             = $this->input->get('id_resm');
            $id_item            = $this->input->get('id_item');
            $id_item_res        = $this->input->get('id_item_resep');
            $id_form            = $this->input->get('id_form');
            $id_post            = $this->input->get('id_post');
            $status             = $this->input->get('status');
            $dft_pas            = $this->input->get('dft_pas');
            $dft_id             = $this->input->get('dft_id');
            $userid             = $this->ion_auth->user()->row()->id;
            
            $data['sess_jual']    = $this->session->userdata('trans_medcheck');
            $data['kategori']     = $this->db->get('tbl_m_kategori')->result();
            $data['poli']         = $this->db->where('status','1')->get('tbl_m_poli')->result();
            $data['sql_doc']      = $this->db->where('id_user_group', '10')->where('status_aps', '0')->order_by('nama, status_aps', 'asc')->get('tbl_m_karyawan')->result();              
            $data['sql_dft_pas']  = $this->db->where('id', general::dekrip($dft_pas))->get('tbl_m_pasien')->row();
            $data['sql_dft_id']   = $this->db->where('id', general::dekrip($dft_id))->get('tbl_pendaftaran')->row();
            $data['sql_dft_gc']   = $this->db->where('id_pendaftaran', $data['sql_dft_id']->id)->get('tbl_pendaftaran_gc')->row(); 

            if(!empty($data['sess_jual']) OR !empty($id)){
                $data['sql_spirometri']     = $this->db->where('status', '1')->get('tbl_m_kategori_spiro')->result();
                $data['sql_produk']         = $this->db->where('id', general::dekrip($id_produk))->get('tbl_m_produk')->row();
                $data['sql_produk_ip']      = $this->db->where('id_produk', general::dekrip($id_produk))->get('tbl_m_produk_ref_input')->result();
                $data['sql_sat_pake']       = $this->db->get('tbl_m_satuan_pakai')->result();
                $data['sql_kat_lab']        = $this->db->where('status_lab', '1')->get('tbl_m_kategori')->result();                
                $data['sql_kamar']          = $this->db->where('status', '1')->get('tbl_m_kamar');
                $data['sql_medc']           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $data['sql_medc_det']       = $this->db->where('id_medcheck', general::dekrip($id))->where('status', $status)->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();
                $data['sql_medc_det_rw']    = $this->db->where('id', general::dekrip($id_item))->get('tbl_trans_medcheck_det')->row();
                $data['sql_medc_res']       = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_resep');
                $data['sql_medc_res_rw']    = $this->db->where('id', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep')->row();
                $data['sql_medc_res_m']     = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_resep')->result();
                $data['sql_medc_res_dt']    = $this->db->where('id_medcheck', $data['sql_medc']->id)->where('id_resep', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep_det')->result();
                $data['sql_medc_res_dt_rw'] = $this->db->where('id', general::dekrip($id_item_res))->get('tbl_trans_medcheck_resep_det')->row();
                $data['sql_medc_lab']       = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_lab');
                $data['sql_medc_lab_rw']    = $this->db->where('id', general::dekrip($id_lab))->get('tbl_trans_medcheck_lab')->row();
                $data['sql_medc_lab_m']     = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_lab')->result();
                $data['sql_medc_lab_dt']    = $this->db->where('id_medcheck', general::dekrip($id))->where('id_lab', general::dekrip($id_lab))->where('status', '3')->group_by('id_lab_kat')->get('tbl_trans_medcheck_det')->result();
                $data['sql_medc_lab_spr']   = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_lab_spiro');
                $data['sql_medc_lab_spr_rw']= $this->db->where('id', general::dekrip($id_lab))->get('tbl_trans_medcheck_lab_spiro')->row();
                $data['sql_medc_lab_spr_dt']= $this->db->where('id_lab_spiro', $data['sql_medc_lab_spr_rw']->id)->get('tbl_trans_medcheck_lab_spiro_hsl')->result();
                $data['sql_medc_lab_ekg']   = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_lab_ekg');
                $data['sql_medc_lab_ekg_rw']= $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_lab_ekg')->row();
                $data['sql_medc_rm']        = $this->db->where('id_medcheck', general::dekrip($id))->order_by('id', 'desc')->get('tbl_trans_medcheck_rm')->result();
                $data['sql_medc_rm_rw']     = $this->db->where('id', general::dekrip($id_item))->get('tbl_trans_medcheck_rm')->row();
                $data['sql_medc_rad']       = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_rad');
                $data['sql_medc_rad_rw']    = $this->db->where('id_medcheck', general::dekrip($id))->where('id', general::dekrip($id_rad))->get('tbl_trans_medcheck_rad')->row();
                $data['sql_medc_rad_dt']    = $this->db->where('id_medcheck', general::dekrip($id))->where('id_rad', general::dekrip($id_rad))->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();
                $data['sql_medc_rsm']       = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_resume');
                $data['sql_medc_rsm_rw']    = $this->db->where('id', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume')->row();
                $data['sql_medc_rsm_dt']    = $this->db->where('id_medcheck', general::dekrip($id))->where('id_resume', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume_det')->result();
                $data['sql_medc_rsm_dt2']   = $this->db->where('id_medcheck', general::dekrip($id))->where('id_resume', general::dekrip($id_rsm))->where('status_rnp', '1')->get('tbl_trans_medcheck_resume_det')->result();
                $data['sql_medc_rsm_dt3']   = $this->db->where('id_medcheck', general::dekrip($id))->where('id_resume', general::dekrip($id_rsm))->where('status_trp', '1')->get('tbl_trans_medcheck_resume_det')->result();
                $data['sql_medc_rsm_dt4']   = $this->db->where('id', general::dekrip($id_item))->get('tbl_trans_medcheck_resume_det')->row();
                $data['sql_medc_mcu']       = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_mcu');
                $data['sql_medc_file']      = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_file')->result();
                $data['sql_medc_kmr']       = $this->db->select('tbl_trans_medcheck_kamar.id, tbl_m_kamar.kode, tbl_m_kamar.kamar, tbl_m_kamar.tipe, tbl_trans_medcheck_kamar.id, tbl_trans_medcheck_kamar.id_medcheck, tbl_trans_medcheck_kamar.tgl_simpan, tbl_trans_medcheck_kamar.tgl_simpan, tbl_trans_medcheck_kamar.keterangan')->where('tbl_trans_medcheck_kamar.id_medcheck', general::dekrip($id))->join('tbl_m_kamar', 'tbl_m_kamar.id=tbl_trans_medcheck_kamar.id_kamar')->get('tbl_trans_medcheck_kamar')->result();
                $data['sql_pasien']         = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
                $data['sql_pasien_poin']    = $this->db->where('id_pasien', $data['sql_medc']->id_pasien)->get('tbl_m_pasien_poin')->row();
                $data['sql_dokter']         = $this->db->where('id_user', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_petugas']        = $this->db->where('id_user', $data['sql_medc']->id_user)->get('tbl_m_karyawan')->row();
                $data['sql_poli']           = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row();
                $data['sql_dft']            = $this->db->where('id', $data['sql_medc']->id_dft)->get('tbl_pendaftaran')->row();
                $data['sql_penjamin']       = $this->db->where('id', $data['sql_medc']->tipe_bayar)->get('tbl_m_penjamin')->row();
                $data['sql_icd']            = $this->db->where('id', $data['sql_medc']->id_icd)->get('tbl_m_icd')->row();
                $data['sql_icd10']          = $this->db->where('id', $data['sql_medc']->id_icd10)->get('tbl_m_icd')->row();
                $data['sql_konsul']         = $this->db->where('id_medcheck', $data['sql_medc']->id)->where('id_parent', '0')->get('tbl_trans_konsul')->result();
                $data['sql_konsul_rw']      = $this->db->where('id', general::dekrip($id_post))->get('tbl_trans_konsul')->row();
                $data['sql_antrian']        = $this->db->where('id_medcheck', $data['sql_medc']->id)->get('tr_queue')->result();
                $data['pengaturan']         = $setting; 
                $st_medrep                  = (!empty($status) ? $status : $data['sql_medc']->status);
                $data['st_medrep']          = $st_medrep;
                
                switch ($st_medrep){                        
                    case '1':
                        $view = 'med_trans_periksa';
                        break;
                    
                    case '2':
                        $view = 'med_trans_tindakan';
                        break;
                    
                    case '3':
                        $data['sql_doc']      = $this->db->where('id_user_group', '10')->order_by('status_aps', 'asc')->get('tbl_m_karyawan')->result();              
                        
                        $view = 'med_trans_lab';
                        break;
                    
                    case '4':
                        $view = 'med_trans_obat';
                        break;
                    
                    case '5':
                        $data['sql_doc_rad']  = $this->db->where('id_poli', '76')->order_by('nama', 'asc')->get('v_master_dokter')->result();              
            
                        $view = 'med_trans_rad';
                        break;
                    
                    case '6':
                        $data['sql_medc_srt']   = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_surat')->result();
                        $data['sql_medc_srt_dt']= $this->db->where('id', general::dekrip($id_form))->get('tbl_trans_medcheck_surat')->row();
                        
                        # Jika terdapat param id_form tampilkan edit form
                        if(!empty($id_form)){
                            $view = 'med_trans_surat_ubah';
                        }else{
                            $view = 'med_trans_surat';
                        }                        
                        break;
                    
                    case '7':
                        $view = 'med_trans_rm';
                        break;
                    
                    case '8':
                        $view = 'med_trans_upload';
                        break;
                    
                    case '9':
                        $data['sql_medc_ass']       = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_ass_fisik');
                        $data['sql_medc_ass_rw']    = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row();
                        
                        # Get MCU header data
                        $data['sql_header']         = $this->db->order_by('id', 'asc')
                                                               ->get('tbl_m_mcu_header')
                                                               ->result();
                        $view = 'med_trans_resume';
                        break;
                    
                    case '10':
                        # Modul MCU
                        $view = 'med_trans_mcu';
                        break;
                    
                    case '11':
                        # Modul untuk rawat bersama
                        $data['sql_raber'] = $this->db->select('tbl_trans_medcheck_dokter.id, tbl_trans_medcheck_dokter.id_medcheck, tbl_trans_medcheck_dokter.id_dokter, tbl_trans_medcheck_dokter.tgl_simpan, tbl_trans_medcheck_dokter.keterangan, tbl_trans_medcheck_dokter.status, tbl_m_karyawan.nama_dpn, tbl_m_karyawan.nama, tbl_m_karyawan.nama_blk')->join('tbl_m_karyawan', 'tbl_m_karyawan.id_user=tbl_trans_medcheck_dokter.id_dokter')->where('tbl_trans_medcheck_dokter.id_medcheck', $data['sql_medc']->id)->get('tbl_trans_medcheck_dokter')->result();
                        
                        $view = 'med_dokter';
                        break;
                    
                    case '12':
                        # Modul untuk kuitansi
                        $data['sql_kwitansi']   = $this->db->where('id_medcheck', $data['sql_medc']->id)->where('status_kwi', '1')->get('tbl_trans_medcheck_kwi')->result();

                        $view = 'med_kwitansi';
                        break;
                    
                    case '13':
                        # Modul untuk Inform Consent
                        $data['sql_medc_inf']   = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_surat_inform')->result();
                        $data['sql_medc_inf_rw']= $this->db->where('id', general::dekrip($id_form))->get('tbl_trans_medcheck_surat_inform')->row();
                        
                        $view = 'med_trans_inform';
                        break;
                    
                    case '14':
                        $data['sql_kamar_rw']   = $this->db->where('id', general::dekrip($id_item))->get('tbl_m_kamar')->row();
                        
                        $view = 'med_trans_kamar';
                        break;
                    
                    case '15':
                        $data['sql_medc_ass']   = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_ass_fisik');
                        $data['sql_medc_ass_rw']= $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row();
                        $data['sql_ass_kiri']   = $this->db->where('status', '1')->where('tipe', '1')->where('status_posisi', 'L')->get('tbl_m_ass_pny');
                        $data['sql_ass_kanan']  = $this->db->where('status', '1')->where('tipe', '1')->where('status_posisi', 'R')->get('tbl_m_ass_pny');
                        $data['sql_ass_ortu']   = $this->db->where('status', '1')->where('tipe', '2')->get('tbl_m_ass_pny');
                        $data['sql_ass_fisik']  = $this->db->where('status', '1')->where('tipe', '3')->get('tbl_m_ass_pny');
                        $data['sql_ass_mata']   = $this->db->where('status', '1')->where('tipe', '4')->get('tbl_m_ass_pny');
                        $data['sql_ass_tht_l']  = $this->db->where('status', '1')->where('tipe', '5')->where('status_posisi', 'L')->get('tbl_m_ass_pny');
                        $data['sql_ass_tht_r']  = $this->db->where('status', '1')->where('tipe', '5')->where('status_posisi', 'R')->get('tbl_m_ass_pny');
                        $data['sql_ass_thrx']   = $this->db->where('status', '1')->where('tipe', '6')->get('tbl_m_ass_pny');
                        $data['sql_ass_paru']   = $this->db->where('status', '1')->where('tipe', '7')->get('tbl_m_ass_pny');
                        $data['sql_ass_jntg']   = $this->db->where('status', '1')->where('tipe', '8')->get('tbl_m_ass_pny');
                        $data['sql_ass_abdmn']  = $this->db->where('status', '1')->where('tipe', '9')->get('tbl_m_ass_pny');
                        $data['sql_ass_urgntl'] = $this->db->where('status', '1')->where('tipe', '10')->get('tbl_m_ass_pny');
                        $data['sql_ass_ekstl']  = $this->db->where('status', '1')->where('tipe', '11')->where('status_posisi', 'L')->get('tbl_m_ass_pny');
                        $data['sql_ass_ekstr']  = $this->db->where('status', '1')->where('tipe', '11')->where('status_posisi', 'R')->get('tbl_m_ass_pny');
                        $data['sql_ass_psi']    = $this->db->where('status', '1')->where('tipe', '12')->get('tbl_m_ass_pny');
                        $data['sql_ass_gigil']  = $this->db->where('status', '1')->where('tipe', '13')->where('status_posisi', 'L')->get('tbl_m_ass_pny');
                        $data['sql_ass_gigir']  = $this->db->where('status', '1')->where('tipe', '13')->where('status_posisi', 'R')->get('tbl_m_ass_pny');
                        $data['sql_ass_syrfl']  = $this->db->where('status', '1')->where('tipe', '14')->where('status_posisi', 'L')->get('tbl_m_ass_pny');
                        $data['sql_ass_syrfr']  = $this->db->where('status', '1')->where('tipe', '14')->where('status_posisi', 'R')->get('tbl_m_ass_pny');
                        $data['sql_ass_riw1']   = $this->db->where('status', '1')->where('tipe', '15')->get('tbl_m_ass_pny');
                        $data['sql_ass_riw2']   = $this->db->where('status', '1')->where('tipe', '16')->get('tbl_m_ass_pny');
                        $data['sql_ass_riw3']   = $this->db->where('status', '1')->where('tipe', '17')->get('tbl_m_ass_pny');
                        
                        $view = 'med_trans_ass_fisik';
                        break;
                    
                    case '16':
                        $data['sql_ass_rnp']        = $this->db->where('id_medcheck', $data['sql_medc']->id)->get('tbl_trans_medcheck_ass_ranap')->row();
                        $data['sql_ass_rnp_obt']    = $this->db->where('id_ass_ranap', $data['sql_ass_rnp']->id)->get('tbl_trans_medcheck_ass_ranap_obat')->result();

                        $view = 'med_trans_ass_ranap';
                        break;
                    
                    # Pemeriksaan Penunjang
                    case '17':
                        $data['sql_medc_hrv']       = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_pen_hrv');
                        $data['sql_medc_hrv_rw']    = $this->db->where('id', general::dekrip($id_pen))->get('tbl_trans_medcheck_pen_hrv')->row();
                        
                        $data['sql_medc_ekg_file']  = $this->db->where('id_medcheck', general::dekrip($id))->where('id_lab_ekg', general::dekrip($this->input->get('id_lab')))->get('tbl_trans_medcheck_lab_ekg_file')->result();
                        $data['sql_medc_ass']       = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_ass_fisik');
                        $data['sql_medc_ass_rw']    = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row();
                        $data['sql_ass_kiri']       = $this->db->where('status', '1')->where('tipe', '1')->where('status_posisi', 'L')->get('tbl_m_ass_pny');
                        $data['sql_ass_kanan']      = $this->db->where('status', '1')->where('tipe', '1')->where('status_posisi', 'R')->get('tbl_m_ass_pny');
                        $data['sql_ass_ortu']       = $this->db->where('status', '1')->where('tipe', '2')->get('tbl_m_ass_pny');
                        $data['sql_ass_fisik']      = $this->db->where('status', '1')->where('tipe', '3')->get('tbl_m_ass_pny');
                        $data['sql_ass_mata']       = $this->db->where('status', '1')->where('tipe', '4')->get('tbl_m_ass_pny');
                        $data['sql_ass_tht_l']      = $this->db->where('status', '1')->where('tipe', '5')->where('status_posisi', 'L')->get('tbl_m_ass_pny');
                        $data['sql_ass_tht_r']      = $this->db->where('status', '1')->where('tipe', '5')->where('status_posisi', 'R')->get('tbl_m_ass_pny');
                        $data['sql_ass_thrx']       = $this->db->where('status', '1')->where('tipe', '6')->get('tbl_m_ass_pny');
                        $data['sql_ass_paru']       = $this->db->where('status', '1')->where('tipe', '7')->get('tbl_m_ass_pny');
                        $data['sql_ass_jntg']       = $this->db->where('status', '1')->where('tipe', '8')->get('tbl_m_ass_pny');
                        $data['sql_ass_abdmn']      = $this->db->where('status', '1')->where('tipe', '9')->get('tbl_m_ass_pny');
                        $data['sql_ass_urgntl']     = $this->db->where('status', '1')->where('tipe', '10')->get('tbl_m_ass_pny');
                        $data['sql_ass_ekstl']      = $this->db->where('status', '1')->where('tipe', '11')->where('status_posisi', 'L')->get('tbl_m_ass_pny');
                        $data['sql_ass_ekstr']      = $this->db->where('status', '1')->where('tipe', '11')->where('status_posisi', 'R')->get('tbl_m_ass_pny');
                        $data['sql_ass_psi']        = $this->db->where('status', '1')->where('tipe', '12')->get('tbl_m_ass_pny');
                        $data['sql_ass_gigil']      = $this->db->where('status', '1')->where('tipe', '13')->where('status_posisi', 'L')->get('tbl_m_ass_pny');
                        $data['sql_ass_gigir']      = $this->db->where('status', '1')->where('tipe', '13')->where('status_posisi', 'R')->get('tbl_m_ass_pny');
                        $data['sql_ass_syrfl']      = $this->db->where('status', '1')->where('tipe', '14')->where('status_posisi', 'L')->get('tbl_m_ass_pny');
                        $data['sql_ass_syrfr']      = $this->db->where('status', '1')->where('tipe', '14')->where('status_posisi', 'R')->get('tbl_m_ass_pny');
                        $data['sql_ass_riw1']       = $this->db->where('status', '1')->where('tipe', '15')->get('tbl_m_ass_pny');
                        $data['sql_ass_riw2']       = $this->db->where('status', '1')->where('tipe', '16')->get('tbl_m_ass_pny');
                        
                        $view = 'med_trans_pen';
                        break;
                    
                    # Tracer Pengunjung
                    case '18':
                        $view = 'med_trans_tracer';
                        break;
                    
                    # Tracer Pengunjung
                    case '19':
                        $sql_jml_dp             = $this->db->select_sum('nominal')->where('id_medcheck', $data['sql_medc']->id)->get('tbl_trans_medcheck_kwi')->row();
                        $sql_jml_tot            = $this->db->select_sum('subtotal')->where('id_medcheck', $data['sql_medc']->id)->get('tbl_trans_medcheck_det')->row();
                        
                        $data['jml_total']      = $sql_jml_tot->subtotal - $sql_jml_dp->nominal;
                        $data['sql_kwitansi']   = $this->db->where('id_medcheck', $data['sql_medc']->id)->where('status_kwi', '2')->get('tbl_trans_medcheck_kwi')->result();
                                                
                        $view = 'med_bayar_dp';
                        break;
                    
                    # TPP
                    case '20':
                        $sql_jml_dp             = $this->db->select_sum('nominal')->where('id_medcheck', $data['sql_medc']->id)->get('tbl_trans_medcheck_kwi')->row();
                        $sql_jml_tot            = $this->db->select_sum('subtotal')->where('id_medcheck', $data['sql_medc']->id)->get('tbl_trans_medcheck_det')->row();
                        
                        $data['jml_total']      = $sql_jml_tot->subtotal;
                        $data['sql_kwitansi']   = $this->db->where('id_medcheck', $data['sql_medc']->id)->where('status_kwi', '3')->get('tbl_trans_medcheck_kwi');
                                                
                        $view = 'med_bayar_tpp';
                        break;
                    
                    # Grafik Pantauan TTV
                    case '21':
                        $data['sql_ttv'] = $this->db
                                                   ->where('id_medcheck', $data['sql_medc']->id)
                                                   ->order_by('id', 'asc')
                                                   ->get('v_medcheck_rm')->result();
                                                
                        $view = 'med_trans_rm_ttv';
                        break;
                }
            }
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/'.(!empty($view) ? $view : 'med_trans'), $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function trans_medcheck_retur() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id                 = $this->input->get('pasien');
            $id_produk          = $this->input->get('id_produk');
            $id_resep           = $this->input->get('id_resep');
            $id_lab             = $this->input->get('id_lab');
            $id_item            = $this->input->get('id_item');
            $status             = $this->input->get('status');
            $dft_pas            = $this->input->get('dft_pas');
            $dft_id             = $this->input->get('dft_id');
            $userid             = $this->ion_auth->user()->row()->id;

            $data['sess_retur']   = $this->session->userdata('trans_medcheck_retur');
            $data['sql_doc']      = $this->db->where('id_user_group', '10')->get('tbl_m_karyawan')->result();
            $data['sql_medc']     = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
            $data['sql_pas']      = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();

            if(!empty($data['sess_retur'])){
                $data['sql_medc_row']   = $this->db->where('id', $data['sess_retur']['id'])->get('tbl_trans_medcheck')->row();
                $data['sql_medc_det']   = $this->db->where('id_medcheck', general::dekrip($id))->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();            
                $data['sql_medc_retur'] = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_retur')->result(); 
                $data['sql_produk']     = $this->db->where('id', general::dekrip($id_produk))->get('tbl_m_produk')->row();          
                $data['sql_pasien']     = $this->db->where('id', $data['sql_medc_row']->id_pasien)->get('tbl_m_pasien')->row();
                $data['sql_dokter']     = $this->db->where('id', $data['sql_medc_row']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_poli']       = $this->db->where('id', $data['sql_medc_row']->id_poli)->get('tbl_m_poli')->row();              
            }

            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_trans_retur', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function trans_medcheck_retur_ranap() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id                 = $this->input->get('id');
            $id_produk          = $this->input->get('id_produk');
            $id_resep           = $this->input->get('id_resep');
            $id_lab             = $this->input->get('id_lab');
            $id_item            = $this->input->get('id_item');
            $status             = $this->input->get('status');
            $dft_pas            = $this->input->get('dft_pas');
            $dft_id             = $this->input->get('dft_id');
            $userid             = $this->ion_auth->user()->row()->id;

            $data['sess_retur']   = $this->session->userdata('trans_medcheck_retur');
            $data['sql_doc']      = $this->db->where('id_user_group', '10')->get('tbl_m_karyawan')->result();              
            $data['sql_dft_pas']  = $this->db->where('id', general::dekrip($dft_pas))->get('tbl_m_pasien')->row();
            $data['sql_dft_id']   = $this->db->where('id', general::dekrip($dft_id))->get('tbl_pendaftaran')->row();
            $data['sql_medc']       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();

            if(!empty($id)){
                $data['sql_medc_det']   = $this->db->select('tbl_trans_medcheck_det.id, tbl_trans_medcheck_det.id_medcheck, tbl_trans_medcheck_det.id_item_kat, tbl_m_kategori.keterangan, tbl_m_kategori.kategori')->join('tbl_m_kategori', 'tbl_m_kategori.id=tbl_trans_medcheck_det.id_item_kat')->where('tbl_trans_medcheck_det.id_medcheck', general::dekrip($id))->group_by('tbl_trans_medcheck_det.id_item_kat')->get('tbl_trans_medcheck_det')->result();            
                $data['sql_medc_retur'] = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_retur')->result(); 
                $data['sql_produk']     = $this->db->where('id', general::dekrip($id_produk))->get('tbl_m_produk')->row();          
                $data['sql_pasien']     = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
                $data['sql_dokter']     = $this->db->where('id', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_poli']       = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row();              
            }

            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_trans_retur_rnp', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function trans_medcheck_tindakan() {
        if (akses::aksesLogin() == TRUE) {
            $setting              = $this->db->get('tbl_pengaturan')->row();
            $id                   = $this->input->get('id');
            $id_produk            = $this->input->get('id_produk');
            $status               = $this->input->get('status');
            $dft                  = $this->input->get('dft');
            $userid               = $this->ion_auth->user()->row()->id;
            

            $data['sess_jual']    = $this->session->userdata('trans_medcheck');
            $data['kategori']     = $this->db->get('tbl_m_kategori')->result();
            $data['poli']         = $this->db->get('tbl_m_poli')->result();
            $data['sql_doc']      = $this->db->where('status', '2')->get('tbl_m_sales')->result();

            if(!empty($id)){
                $data['sql_produk']         = $this->db->where('id', general::dekrip($id_produk))->get('tbl_m_produk')->row();
                $data['sql_medc']           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $data['sql_medc_det']       = $this->db->select('tbl_trans_medcheck_det.id, tbl_trans_medcheck_det.id_medcheck, tbl_trans_medcheck_det.id_item_kat, tbl_m_kategori.keterangan, tbl_m_kategori.kategori')->join('tbl_m_kategori', 'tbl_m_kategori.id=tbl_trans_medcheck_det.id_item_kat')->where('tbl_trans_medcheck_det.id_medcheck', general::dekrip($id))->where('tbl_trans_medcheck_det.status_pkt', '0')->group_by('tbl_trans_medcheck_det.id_item_kat')->get('tbl_trans_medcheck_det')->result();
                $data['sql_medc_plat']      = $this->db->where('id', $data['sql_medc']->metode)->get('tbl_m_platform')->row();
                $data['sql_dft']            = $this->db->where('id', $data['sql_medc']->id_dft)->get('tbl_pendaftaran')->row();
                $data['sql_dft_gc']         = $this->db->where('id_pendaftaran', $data['sql_dft']->id)->get('tbl_pendaftaran_gc')->row();
                $data['sql_poli']           = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row();         
                $data['sql_pasien']         = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
                $data['sql_pasien_poin']    = $this->db->where('id_pasien', $data['sql_medc']->id_pasien)->get('tbl_m_pasien_poin')->row();
                $data['sql_dokter']         = $this->db->where('id_user', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_petugas']        = $this->db->where('id_user', $data['sql_medc']->id_user)->get('tbl_m_karyawan')->row();
                $data['sql_penjamin']       = $this->db->where('id', $data['sql_medc']->tipe_bayar)->get('tbl_m_penjamin')->row();
                $data['sql_penjamin2']      = $this->db->where('status', '1')->get('tbl_m_penjamin')->result();
                $data['sql_icd']            = $this->db->where('id', $data['sql_medc']->id_icd)->get('tbl_m_icd')->row();
                $data['sql_icd10']          = $this->db->where('id', $data['sql_medc']->id_icd10)->get('tbl_m_icd')->row();
                $data['sql_antrian']        = $this->db->where('id_medcheck', $data['sql_medc']->id)->get('tr_queue')->result();
                $data['pengaturan']         = $setting;
            }
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_tindakan', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function trans_medcheck_trf() {
        if (akses::aksesLogin() == TRUE) {
            $setting              = $this->db->get('tbl_pengaturan')->row();
            $id                   = $this->input->get('id');
            $id_produk            = $this->input->get('id_produk');
            $status               = $this->input->get('status');
            $dft                  = $this->input->get('dft');
            $userid               = $this->ion_auth->user()->row()->id;

            $data['sess_jual']    = $this->session->userdata('trans_medcheck');
            $data['kategori']     = $this->db->get('tbl_m_kategori')->result();
            $data['poli']         = $this->db->where('status', '1')->get('tbl_m_poli')->result();
            $data['sql_doc']      = $this->db->where('id_user_group', '10')->where('status_aps', '0')->get('tbl_m_karyawan')->result();

            if(!empty($id)){
                $data['sql_produk']     = $this->db->where('id', general::dekrip($id_produk))->get('tbl_m_produk')->row();
                $data['sql_medc']       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $data['sql_medc_det']   = $this->db->where('id_medcheck', general::dekrip($id))->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();            
                $data['sql_medc_trf']   = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_trf')->result();            
                $data['sql_pasien']     = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
                $data['sql_dokter']     = $this->db->where('id_user', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_poli']       = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row();  
                $data['sql_petugas']    = $this->db->where('id_user', $data['sql_medc']->id_user)->get('tbl_m_karyawan')->row();
                $data['sql_dft']        = $this->db->where('id', $data['sql_medc']->id_dft)->get('tbl_pendaftaran')->row();
                $data['sql_kamar']      = $this->db->get('v_trans_kamar');
                $data['sql_penjamin']   = $this->db->where('id', $data['sql_medc']->tipe_bayar)->get('tbl_m_penjamin')->row();
            }
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_transfer', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
        
    public function trans_medcheck_detail() {
        if (akses::aksesLogin() == TRUE) {
            $setting              = $this->db->get('tbl_pengaturan')->row();
            $id                   = $this->input->get('id');
            $id_produk            = $this->input->get('id_produk');
            $status               = $this->input->get('status');
            $dft                  = $this->input->get('dft');
            $userid               = $this->ion_auth->user()->row()->id;

            $data['sess_jual']    = $this->session->userdata('trans_medcheck');
            $data['kategori']     = $this->db->get('tbl_m_kategori')->result();
            $data['poli']         = $this->db->get('tbl_m_poli')->result();
            $data['sql_doc']      = $this->db->where('status', '2')->get('tbl_m_sales')->result();

            if(!empty($id)){
                $data['sql_produk']     = $this->db->where('id', general::dekrip($id_produk))->get('tbl_m_produk')->row();
                $data['sql_medc']       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $data['sql_medc_det']   = $this->db->where('id_medcheck', general::dekrip($id))->where('status_pkt', '0')->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();            
                $data['sql_pasien']     = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
                $data['sql_dokter']     = $this->db->where('id', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_poli']       = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row();  
            }
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_detail', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
        
    public function trans_medcheck_detail_kamar() {
        if (akses::aksesLogin() == TRUE) {
            $setting              = $this->db->get('tbl_pengaturan')->row();
            $id                   = $this->input->get('id');
            $userid               = $this->ion_auth->user()->row()->id;

            if(!empty($id)){
                $data['sql_kamar_rw']     = $this->db->where('id', general::dekrip($id))->get('tbl_m_kamar')->row();
                $data['sql_kamar_rs']     = $this->db
                                                 ->select('tbl_trans_medcheck.id, tbl_trans_medcheck.tgl_masuk, tbl_trans_medcheck.tgl_keluar, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.pasien, tbl_trans_medcheck_kamar.id_kamar, tbl_trans_medcheck_kamar.tgl_simpan, tbl_trans_medcheck_kamar.keterangan, tbl_m_pasien.kode_dpn, tbl_m_pasien.kode, tbl_m_pasien.jns_klm')
                                                 ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id=tbl_trans_medcheck_kamar.id_medcheck')
                                                 ->join('tbl_m_kamar', 'tbl_m_kamar.id=tbl_trans_medcheck_kamar.id_kamar')
                                                 ->join('tbl_m_pasien', 'tbl_m_pasien.id=tbl_trans_medcheck.id_pasien')
                                                 ->where('tbl_trans_medcheck_kamar.id_kamar', $data['sql_kamar_rw']->id)
                                                 ->where('tbl_trans_medcheck_kamar.status', '1')
                                                 ->where('tbl_trans_medcheck.status_bayar', '0')
                                                 ->get('tbl_trans_medcheck_kamar');
            }

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_detail_kamar', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function trans_medcheck_bayar() {
        if (akses::aksesLogin() == TRUE) {                   
            $id         = $this->input->get('id');
            $id_produk  = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;

            if(!empty($id)){
                $data['setting']        = $this->db->get('tbl_pengaturan')->row();
                $data['sql_medc']       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $data['sql_medc_det']   = $this->db->select('tbl_trans_medcheck_det.id, tbl_trans_medcheck_det.id_medcheck, tbl_trans_medcheck_det.id_item_kat, tbl_m_kategori.keterangan, tbl_m_kategori.kategori')->join('tbl_m_kategori', 'tbl_m_kategori.id=tbl_trans_medcheck_det.id_item_kat')->where('tbl_trans_medcheck_det.id_medcheck', general::dekrip($id))->group_by('tbl_trans_medcheck_det.id_item_kat')->get('tbl_trans_medcheck_det')->result();             
                $data['sql_medc_det2']  = $this->db->where('id', general::dekrip($id_produk))->get('tbl_trans_medcheck_det')->row();            
                $data['sql_medc_plat']  = $this->db->where('id_medcheck', general::dekrip($id))->get('v_medcheck_plat')->result();
                $data['sql_produk']     = $this->db->where('id', ($_GET['status'] != '1' ? $data['sql_medc_det2']->id_item : general::dekrip($id_produk)))->get('tbl_m_produk')->row();
                $data['sql_satuan']     = $this->db->get('tbl_m_satuan')->result();
                $data['sql_pasien']     = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();               
                $data['sql_dokter']     = $this->db->where('id_user', $data['sql_medc_det2']->id_dokter)->get('tbl_m_karyawan')->row();               
                $data['sql_platform']   = $this->db->order_by('id', 'asc')->get('tbl_m_platform')->result();
                $data['sql_poin']       = $this->db->where('id_pasien', $data['sql_medc']->id_pasien)->get('tbl_m_pasien_poin')->row();

                $sql_jml_dp             = $this->db->select_sum('nominal')->where('status_kwi', '2')->where('id_medcheck', $data['sql_medc']->id)->get('tbl_trans_medcheck_kwi')->row();
                $sql_jml_tot            = $this->db->select_sum('subtotal')->where('id_medcheck', $data['sql_medc']->id)->get('tbl_trans_medcheck_det')->row();    
                $data['jml_total']      = $sql_jml_tot->subtotal - $sql_jml_dp->nominal;
                $data['jml_total_dp']   = $sql_jml_dp->nominal;
            }
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_bayar', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);            
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function trans_medcheck_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $userid = $this->ion_auth->user()->row()->id;
            
            $decrypted_id = general::dekrip($id);
            // Get the record type before updating to use in redirect
            $tipe = $this->db->select('tipe')
                            ->where('id', $decrypted_id)
                            ->get('tbl_trans_medcheck')
                            ->row()
                            ->tipe;
            
            // Direct update without fetching the entire record first
            $affected_rows = $this->db->where('id', $decrypted_id)
                                     ->update('tbl_trans_medcheck', array('status_hps' => '1'));
            
            if($affected_rows > 0){
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Transaksi berhasil dihapus");');
            }
            
            redirect(base_url('medcheck/index.php?tipe='.$tipe));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function trans_medcheck_restore() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $userid = $this->ion_auth->user()->row()->id;
            
            $decrypted_id = general::dekrip($id);
            // Get the record type before updating to use in redirect
            $tipe = $this->db->select('tipe')
                            ->where('id', $decrypted_id)
                            ->get('tbl_trans_medcheck')
                            ->row()
                            ->tipe;
            
            // Direct update without fetching the entire record first
            $affected_rows = $this->db->where('id', $decrypted_id)
                                     ->update('tbl_trans_medcheck', array('status_hps' => '0'));
            
            if($affected_rows > 0){
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Transaksi berhasil dipulihkan");');
            }
            
            redirect(base_url('medcheck/index.php?tipe='.$tipe));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function trans_medcheck_invoice() {
        if (akses::aksesLogin() == TRUE) {                   
            $id                   = $this->input->get('id');
            $id_produk            = $this->input->get('id_produk');
            $status               = $this->input->get('status');
            $userid               = $this->ion_auth->user()->row()->id;

            if(!empty($id)){
                $data['setting']        = $this->db->get('tbl_pengaturan')->row();
                $data['sql_produk']     = $this->db->where('id', general::dekrip($id_produk))->get('tbl_m_produk')->row();
                $data['sql_medc']       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $data['sql_medc_det']   = $this->db->where('id_medcheck', general::dekrip($id))->where('status_pkt', '0')->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();            
                $data['sql_medc_sum']   = $this->db->select('SUM(diskon) AS diskon, SUM(potongan) AS potongan, SUM(subtotal) AS subtotal')->where('id_medcheck', $data['sql_medc']->id)->get('tbl_trans_medcheck_det')->row();            
                $data['sql_medc_plat']  = $this->db->where('id_medcheck', general::dekrip($id))->get('v_medcheck_plat')->result();            
                $data['sql_medc_file']  = $this->db->where('id_medcheck', general::dekrip($id))->where('status', '3')->get('tbl_trans_medcheck_file')->result();            
                $data['sql_pasien']     = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
                $data['sql_dokter']     = $this->db->where('id', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_poli']       = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row();
                $data['sql_platform']   = $this->db->get('tbl_m_platform')->result();             
            }

            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_invoice', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function trans_medcheck_print_dm() {
        if (akses::aksesLogin() == TRUE) {                   
            $id                   = $this->input->get('id');
            $id_produk            = $this->input->get('id_produk');
            $status               = $this->input->get('status');
            $userid               = $this->ion_auth->user()->row()->id;

            if(!empty($id)){
                $data['setting']            = $this->db->get('tbl_pengaturan')->row();
                $data['sql_produk']         = $this->db->where('id', general::dekrip($id_produk))->get('tbl_m_produk')->row();
                $data['sql_medc']           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $data['sql_medc_sum']       = $this->db->select('SUM(diskon) AS diskon, SUM(potongan) AS potongan, SUM(potongan_poin) AS potongan_poin, SUM(subtotal) AS subtotal')->where('id_medcheck', $data['sql_medc']->id)->where('status_pkt', '0')->get('tbl_trans_medcheck_det')->row();  //->where('status_pkt', '0')          
                $data['sql_medc_det']       = $this->db->where('id_medcheck', general::dekrip($id))->where('status_pkt', '0')->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();            
                $data['sql_medc_plat']      = $this->db->where('id_medcheck', general::dekrip($id))->get('v_medcheck_plat')->result();
                $data['sql_pasien']         = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
                $data['sql_pasien_poin']    = $this->db->where('id_pasien', $data['sql_medc']->id_pasien)->get('tbl_m_pasien_poin')->row();
                $data['sql_dokter']         = $this->db->where('id', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_poli']           = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row(); 
            }

            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

//            $this->load->view('admin-lte-3/1_atas', $data);
//            $this->load->view('admin-lte-3/2_header', $data);
//            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_print_dm', $data);
//            $this->load->view('admin-lte-3/5_footer',$data);
//            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function trans_medcheck_print_dm_ranap() {
        if (akses::aksesLogin() == TRUE) {                   
            $id                   = $this->input->get('id');
            $id_produk            = $this->input->get('id_produk');
            $status               = $this->input->get('status');
            $userid               = $this->ion_auth->user()->row()->id;

            if(!empty($id)){
                $data['setting']        = $this->db->get('tbl_pengaturan')->row();
                $data['sql_produk']     = $this->db->where('id', general::dekrip($id_produk))->get('tbl_m_produk')->row();
                $data['sql_medc']       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $data['sql_medc_sum']   = $this->db->select('SUM(diskon) AS diskon, SUM(potongan) AS potongan, SUM(potongan_poin) AS potongan_poin, SUM(subtotal) AS subtotal')->where('id_medcheck', $data['sql_medc']->id)->where('status_pkt', '0')->get('tbl_trans_medcheck_det')->row();       
                $data['sql_medc_det']   = $this->db->where('id_medcheck', general::dekrip($id))->where('status_pkt', '0')->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();            
                $data['sql_medc_plat']  = $this->db->where('id_medcheck', general::dekrip($id))->get('v_medcheck_plat')->result();
                $data['sql_pasien']     = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
                $data['sql_pasien_poin']= $this->db->where('id_pasien', $data['sql_medc']->id_pasien)->get('tbl_m_pasien_poin')->row();
                $data['sql_dokter']     = $this->db->where('id', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_poli']       = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row();              
            }

            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

//            $this->load->view('admin-lte-3/1_atas', $data);
//            $this->load->view('admin-lte-3/2_header', $data);
//            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_print_dm', $data);
//            $this->load->view('admin-lte-3/5_footer',$data);
//            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function trans_medcheck_tracer() {
        if (akses::aksesLogin() == TRUE) {                   
            $id                         = $this->input->get('id');
            $id_produk                  = $this->input->get('id_produk');
            $status                     = $this->input->get('status');
            $userid                     = $this->ion_auth->user()->row()->id;

            $data['setting']            = $this->db->get('tbl_pengaturan')->row();
            $data['sql_dft']            = $this->db->where('DATE(tgl_masuk)', date('Y-m-d'))->order_by('tgl_masuk', 'asc')->get('tbl_pendaftaran');
            $data['sql_medc_prks']      = $this->db->where('DATE(tgl_simpan)', date('Y-m-d'))->where('tipe !=', '3')->where('status_pos', '0')->where('status_hps', '0')->where('status_periksa', '0')->order_by('id', 'asc')->get('tbl_trans_medcheck');           
            $data['sql_medc_lab']       = $this->db
                                               ->select('tbl_trans_medcheck.id, tbl_trans_medcheck.pasien, tbl_trans_medcheck_lab.tgl_masuk, tbl_trans_medcheck_lab.tgl_modif')
                                               ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id=tbl_trans_medcheck_lab.id_medcheck')
                                               ->where('DATE(tbl_trans_medcheck.tgl_simpan)', date('Y-m-d'))
                                               ->where('tbl_trans_medcheck.tipe !=', '3')
                                               ->where('tbl_trans_medcheck.status_hps', '0')
//                                               ->where('tbl_trans_medcheck.status_bayar', '0')
                                               ->where('tbl_trans_medcheck_lab.status', '0')
                                               ->get('tbl_trans_medcheck_lab');           
            $data['sql_medc_rad']       = $this->db
                                               ->select('tbl_trans_medcheck.id, tbl_trans_medcheck.pasien, tbl_trans_medcheck_rad.tgl_masuk, tbl_trans_medcheck_rad.tgl_modif')
                                               ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id=tbl_trans_medcheck_rad.id_medcheck')
                                               ->where('DATE(tbl_trans_medcheck.tgl_simpan)', date('Y-m-d'))
                                               ->where('tbl_trans_medcheck.tipe !=', '3')
                                               ->where('tbl_trans_medcheck.status_hps', '0')
//                                               ->where('tbl_trans_medcheck.status_bayar', '0')
                                               ->where('tbl_trans_medcheck_rad.status', '0')
                                               ->get('tbl_trans_medcheck_rad');        
            $data['sql_medc_res']       = $this->db
                                               ->select('tbl_trans_medcheck.id, tbl_trans_medcheck.pasien, tbl_trans_medcheck_resep.tgl_masuk, tbl_trans_medcheck_resep.tgl_keluar')
                                               ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id=tbl_trans_medcheck_resep.id_medcheck')
                                               ->where('DATE(tbl_trans_medcheck.tgl_simpan)', date('Y-m-d'))
                                               ->where('tbl_trans_medcheck.tipe !=', '3')
                                               ->where('tbl_trans_medcheck.status_hps', '0')
//                                               ->where('tbl_trans_medcheck.status_bayar', '0')
                                               ->where('tbl_trans_medcheck_resep.status !=', '4')
                                               ->get('tbl_trans_medcheck_resep');
            $data['sql_medc_ksr']       = $this->db->where('DATE(tgl_simpan)', date('Y-m-d'))->where('tipe !=', '3')->where('status >=', '5')->where('status_hps', '0')->get('tbl_trans_medcheck');           
            

            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_tracer', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    

    public function trans_resep_tambah() {
        if (akses::aksesLogin() == TRUE) {
            $setting                = $this->db->get('tbl_pengaturan')->row();
            $id_medc                = $this->input->get('id_medc');
            $id                     = $this->input->get('id');
            $id_resep               = $this->input->get('id_resep');
            $id_item                = $this->input->get('id_item');
            $id_item_res            = $this->input->get('id_item_resep');
            $userid                 = $this->ion_auth->user()->row()->id;

            $data['sess_jual']      = $this->session->userdata('trans_medcheck');
            $data['kategori']       = $this->db->get('tbl_m_kategori')->result();
            $data['poli']           = $this->db->get('tbl_m_poli')->result();
            $data['sql_doc']        = $this->db->where('status', '2')->get('tbl_m_karyawan')->result();

            if(!empty($id)){
                $data['sql_sat_pake']       = $this->db->get('tbl_m_satuan_pakai')->result();
                $data['sql_medc']           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $status = 0; // Define status variable with default value
                $data['sql_medc_det']       = $this->db->where('id_medcheck', $data['sql_medc']->id)->where('status', $status)->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();
                $data['sql_medc_det_rw']    = $this->db->where('id', general::dekrip($id_item))->get('tbl_trans_medcheck_det')->row();
                $data['sql_medc_srt']       = $this->db->where('id_medcheck', $data['sql_medc']->id)->get('tbl_trans_medcheck_surat')->result();
                $data['sql_medc_res']       = $this->db->where('id_medcheck', $data['sql_medc']->id)->limit(5)->get('tbl_trans_medcheck_resep');
                $data['sql_medc_res_rw']    = $this->db->where('id', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep')->row();
                $data['sql_medc_res_dt']    = $this->db->where('id_medcheck', $data['sql_medc']->id)->where('id_resep', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep_det')->result();
                $data['sql_medc_res_dt_rw'] = $this->db->where('id', general::dekrip($id_item_res))->get('tbl_trans_medcheck_resep_det')->row();
                $data['sql_produk']         = $this->db->where('id', (!empty($id_item) ? general::dekrip($id_item) : $data['sql_medc_res_dt_rw']->id_item))->get('tbl_m_produk')->row();
                $data['sql_pasien']         = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
                $data['sql_dokter']         = $this->db->where('id_user', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_poli']           = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row();
            }
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_trans_resep', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function trans_resep_detail() {
        if (akses::aksesLogin() == TRUE) {
            $setting              = $this->db->get('tbl_pengaturan')->row();
            $id_medc              = $this->input->get('id_medc');
            $id                   = $this->input->get('id');
            $userid               = $this->ion_auth->user()->row()->id;

            $data['sess_jual']    = $this->session->userdata('trans_medcheck');
            $data['kategori']     = $this->db->get('tbl_m_kategori')->result();
            $data['poli']         = $this->db->get('tbl_m_poli')->result();
            $data['sql_doc']      = $this->db->where('status', '2')->get('tbl_m_karyawan')->result();

            if(!empty($id)){
                $data['sql_medc']       = $this->db->where('id', general::dekrip($id_medc))->get('tbl_trans_medcheck')->row();
                $data['sql_medc_res_rw']= $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck_resep')->row();
                $data['sql_dokter']     = $this->db->where('id', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_poli']       = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row();
                $data['sql_pasien']     = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
            }
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_trans_resep_det', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function trans_resep_konfirm() {
        if (akses::aksesLogin() == TRUE) {
            $setting              = $this->db->get('tbl_pengaturan')->row();
            $id_medc              = $this->input->get('id_medc');
            $id                   = $this->input->get('id');
            $userid               = $this->ion_auth->user()->row()->id;

            $data['sess_jual']    = $this->session->userdata('trans_medcheck');
            $data['kategori']     = $this->db->get('tbl_m_kategori')->result();
            $data['poli']         = $this->db->get('tbl_m_poli')->result();
            $data['sql_doc']      = $this->db->where('status', '2')->get('tbl_m_karyawan')->result();

            if(!empty($id)){
                $data['sql_medc']       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $data['sql_dokter']     = $this->db->where('id', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_poli']       = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row();
                $data['sql_pasien']     = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
            }
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_trans_resep_konfirm', $data);
            $this->load->view('admin-lte-3/5_footer',$data);
            $this->load->view('admin-lte-3/6_bawah',$data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    


    public function medcheck_kasir_list() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $id_dokter   = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $query   = $this->input->get('q');
            $hal     = $this->input->get('halaman');
            $nt      = $this->input->get('filter_nota');
            $fn      = explode('/', $nt);
            $tg      = $this->input->get('filter_tgl');
            $tb      = $this->input->get('filter_tgl_bayar');
            $tp      = $this->input->get('filter_tgl_tempo');
            $lk      = $this->input->get('filter_lokasi');
            $cs      = $this->input->get('filter_cust');
            $sn      = $this->input->get('filter_status');
            $sl      = $this->input->get('filter_sales');
            $stts    = $this->input->get('status');
            $jml     = $this->input->get('jml');
            $jml_sql = $this->db->select('id, id_app, id_user, id_dokter, id_nurse, id_analis, id_pasien, id_poli, no_nota, no_rm, tgl_simpan, TIME(tgl_simpan) AS waktu_masuk, DATE(tgl_bayar) as tgl_bayar, DATE(tgl_keluar) as tgl_keluar, TIME(tgl_keluar) AS waktu_keluar, jml_total, jml_gtotal, ppn, jml_ppn, tipe, status, status_nota')
                           ->where('status_hps', '0')
                           ->like('id_dokter', ($id_grup->name == 'dokter' ? $id_user : ''), ($id_grup->name == 'dokter' ? 'none' : ''))
                           ->order_by('id','desc')
                           ->get('tbl_trans_medcheck')->num_rows();

            if(!empty($jml)){
                $jml_hal = $jml_sql;
            }else{
                $jml_hal = $this->db->select('id, id_app, id_user, id_dokter, id_nurse, id_analis, id_pasien, id_poli, no_nota, no_rm, tgl_simpan, TIME(tgl_simpan) AS waktu_masuk, DATE(tgl_bayar) as tgl_bayar, DATE(tgl_keluar) as tgl_keluar, TIME(tgl_keluar) AS waktu_keluar, jml_total, jml_gtotal, ppn, jml_ppn, tipe, status, status_nota, tipe')
                                ->where('status_hps', '0')
                                ->like('id_dokter', ($id_grup->name == 'dokter' ? $id_user : ''), ($id_grup->name == 'dokter' ? 'none' : ''))
                                ->order_by('id','desc')
                                ->get('tbl_trans_medcheck')->num_rows();
            }
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_medcheck.php?filter_nota='.$nt.'&filter_tgl='.$tg.'&filter_sales='.$sl.'&filter_status='.$sn.'&jml='.$jml);
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
                   $data['penj'] = $this->db->select('id, id_app, id_user, id_dokter, id_nurse, id_analis, id_pasien, id_poli, no_nota, no_rm, tgl_simpan, TIME(tgl_simpan) AS waktu_masuk, DATE(tgl_bayar) as tgl_bayar, DATE(tgl_keluar) as tgl_keluar, TIME(tgl_keluar) AS waktu_keluar, jml_total, jml_gtotal, ppn, jml_ppn, tipe, status, status_nota, tipe')
                           ->where('status_hps', '0')
                           ->where('status_bayar !=', '1')
                           ->like('id_dokter', ($id_grup->name == 'dokter' ? $id_user : ''), ($id_grup->name == 'dokter' ? 'none' : ''))
                           ->limit($config['per_page'],$hal)
                           ->order_by('id','desc')
                           ->get('tbl_trans_medcheck')->result();
            }else{
                   $data['penj'] = $this->db->select('id, id_app, id_user, id_dokter, id_nurse, id_analis, id_pasien, id_poli, no_nota, no_rm, tgl_simpan, TIME(tgl_simpan) AS waktu_masuk, DATE(tgl_bayar) as tgl_bayar, DATE(tgl_keluar) as tgl_keluar, TIME(tgl_keluar) AS waktu_keluar, jml_total, jml_gtotal, ppn, jml_ppn, tipe, status, status_nota, tipe')
                           ->where('status_hps', '0')
                           ->where('status_bayar !=', '1')
                           ->like('id_dokter', ($id_grup->name == 'dokter' ? $id_user : ''), ($id_grup->name == 'dokter' ? 'none' : ''))
                           ->limit($config['per_page'])
                           ->order_by('id','desc')
                           ->get('tbl_trans_medcheck')->result();
            }
            
            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            $data['cetak']      = '<button type="button" onclick="window.location.href = \''.base_url('transaksi/cetak_data_penj.php?'.(!empty($nt) ? 'filter_nota='.$nt : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tgl_tempo='.$tp : '').(!empty($cs) ? '&filter_cust='.$cs : '').(!empty($sl) ? '&filter_sales='.$sl : '').(!empty($jml) ? '&jml='.$jml : '')).'\'" class="btn btn-warning"><i class="fa fa-print"></i> Cetak</button>';
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/index', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function medcheck_pemb_list() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $query   = $this->input->get('q');
            $hal     = $this->input->get('halaman');
            $nt      = $this->input->get('filter_nota');
            $fn      = explode('/', $nt);
            $tg      = $this->input->get('filter_tgl');
            $tb      = $this->input->get('filter_tgl_bayar');
            $tp      = $this->input->get('filter_tgl_tempo');
            $lk      = $this->input->get('filter_lokasi');
            $cs      = $this->input->get('filter_nama');
            $sn      = $this->input->get('filter_status');
            $sl      = $this->input->get('filter_sales');
            $stts    = $this->input->get('status');
            $jml     = $this->input->get('jml');

            if(!empty($jml)){
                $jml_hal = $jml;
            }else{
                $jml_hal = $this->db
//                                    ->where('status', '5')
                                    ->where('status_bayar !=', '1')
                                    ->like('pasien', $cs)
                                    ->group_by('tgl_masuk, pasien')
                                    ->order_by('tgl_simpan','desc')
                                    ->get('v_medcheck')->num_rows();
            }
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_pemb.php?tipe=1'.(!empty($cs) ? '&filter_nama='.$cs : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($sp) ? '&filter_periksa='.$sp : '').(isset($by) ? '&filter_bayar='.$by : '').(!empty($jml_hal) ? '&jml='.$jml_hal : ''));
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            if(!empty($hal)){
                   $data['penj'] = $this->db
                                        ->where('status', '5')
                                        ->where('status_bayar !=', '1')
                                        ->like('pasien', $cs)
                                        ->like('DATE(tgl_masuk)', $this->tanggalan->tgl_indo_sys($tg))
                                        ->limit($config['per_page'],$hal)
                                        ->order_by('tgl_simpan','desc')
                                        ->get('v_medcheck')->result();
            }else{
                   $data['penj'] = $this->db
                                        ->where('status', '5')
                                        ->where('status_bayar !=', '1')
                                        ->like('pasien', $cs)
                                        ->like('DATE(tgl_masuk)', $this->tanggalan->tgl_indo_sys($tg))
                                        ->limit($config['per_page'])
//                                        ->group_by('tgl_simpan, tgl_masuk, keluhan, tipe, id_pasien, pasien')
                                        ->order_by('tgl_masuk','desc')
                                        ->get('v_medcheck')->result();
            }

            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            $data['cetak']      = '<button type="button" onclick="window.location.href = \''.base_url('transaksi/cetak_data_penj.php?'.(!empty($nt) ? 'filter_nota='.$nt : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tgl_tempo='.$tp : '').(!empty($cs) ? '&filter_cust='.$cs : '').(!empty($sl) ? '&filter_sales='.$sl : '').(!empty($jml) ? '&jml='.$jml : '')).'\'" class="btn btn-warning"><i class="fa fa-print"></i> Cetak</button>';
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/data_pemb', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function medcheck_batal_list() {
        if (akses::aksesLogin() == TRUE) {
            /* -- Grup hak akses -- */
            $role        = $this->input->get('role');
            $tipe        = $this->input->get('tipe');
            $grup        = $this->ion_auth->get_users_groups()->row();
            $id_user     = $this->ion_auth->user()->row()->id;
            $id_grup     = $this->ion_auth->get_users_groups()->row();
            $id_dokter   = $this->ion_auth->get_users_groups()->row();
            $pengaturan  = $this->db->get('tbl_pengaturan')->row();

            /* -- Blok Filter -- */
            $hal     = $this->input->get('halaman');
            $id      = $this->input->get('id');
            $cs      = $this->input->get('filter_nama');
            $by      = $this->input->get('filter_bayar');
            $tp      = $this->input->get('filter_tipe');
            $tg      = $this->input->get('filter_tgl');
            $sp      = $this->input->get('filter_periksa');
            $jml     = $this->input->get('jml');
            

            $jml_sql = $this->db->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                ->like('pasien', $cs)
                                ->like('tipe', $tp)
                                ->get('v_medcheck_hapus')->num_rows();

            if (!empty($jml)) {
                $jml_hal = $jml;
            } else {
                $jml_hal = $jml_sql;
            }
            /* -- End Blok Filter -- */

            /* -- Form Error -- */
            $data['hasError']                = $this->session->flashdata('form_error');

            /* -- Blok Pagination -- */
            $config['base_url']              = base_url('medcheck/data_hapus.php?tipe=1'.(!empty($cs) ? '&filter_nama='.$cs : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tipe='.$tp : '').(!empty($sp) ? '&filter_periksa='.$sp : '').(isset($by) ? '&filter_bayar='.$by : '').(!empty($jml_hal) ? '&jml='.$jml_hal : ''));
            $config['total_rows']            = $jml_hal;

            $config['query_string_segment']  = 'halaman';
            $config['page_query_string']     = TRUE;
            $config['per_page']              = $pengaturan->jml_item;
            $config['num_links']             = 2;

            $config['first_tag_open']        = '<li class="page-item">';
            $config['first_tag_close']       = '</li>';

            $config['prev_tag_open']         = '<li class="page-item">';
            $config['prev_tag_close']        = '</li>';
            
            $config['num_tag_open']          = '<li class="page-item">';
            $config['num_tag_close']         = '</li>';

            $config['next_tag_open']         = '<li class="page-item">';
            $config['next_tag_close']        = '</li>';
            
            $config['last_tag_open']         = '<li class="page-item">';
            $config['last_tag_close']        = '</li>';
            
            $config['cur_tag_open']          = '<li class="page-item"><a href="#" class="page-link text-dark"><b>';
            $config['cur_tag_close']         = '</b></a></li>';
            
            $config['first_link']            = '&laquo;';
            $config['prev_link']             = '&lsaquo;';
            $config['next_link']             = '&rsaquo;';
            $config['last_link']             = '&raquo;';
            $config['anchor_class']          = 'class="page-link"';
            /* -- End Blok Pagination -- */

            // Jika User dokter, maka pilih rajal dan ranap
            if (!empty($hal)) {
                $data['penj'] = $this->db->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                         ->like('pasien', $cs)
                                         ->like('tipe', $tp)
                                         ->limit($config['per_page'], $hal)
                                         ->order_by('id', 'desc')
                                         ->get('v_medcheck_hapus')->result();
            } else {
                $data['penj'] = $this->db->like('DATE(tgl_simpan)', $this->tanggalan->tgl_indo_sys($tg))
                                         ->like('pasien', $cs)
                                         ->like('tipe', $tp)
                                         ->limit($config['per_page'])
                                         ->order_by('id', 'desc')
                                         ->get('v_medcheck_hapus')->result();
            }

            $this->pagination->initialize($config);

            /* Blok pagination */
            $data['total_rows'] = $config['total_rows'];
            $data['PerPage']    = $config['per_page'];
            $data['pagination'] = $this->pagination->create_links();
            $data['cetak']      = '<button type="button" onclick="window.location.href = \''.base_url('transaksi/cetak_data_penj.php?'.(!empty($nt) ? 'filter_nota='.$nt : '').(!empty($tg) ? '&filter_tgl='.$tg : '').(!empty($tp) ? '&filter_tgl_tempo='.$tp : '').(!empty($cs) ? '&filter_cust='.$cs : '').(!empty($sl) ? '&filter_sales='.$sl : '').(!empty($jml) ? '&jml='.$jml : '')).'\'" class="btn btn-warning"><i class="fa fa-print"></i> Cetak</button>';
            /* --End Blok pagination-- */
            
            /* Sidebar Menu */
            $data['sidebar']    = 'admin-lte-3/includes/medcheck/sidebar_med';
            /* --- Sidebar Menu --- */
            
            /* Load view tampilan */
            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_list_batal', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    

    public function set_instansi() {
        if (akses::aksesLogin() == TRUE) {
            $nama       = $this->input->post('nama');
            $alamat     = $this->input->post('alamat');
            $no_hp      = $this->input->post('no_hp');
            $cp         = $this->input->post('cp');
            $tipe       = $this->input->post('tipe');
            $rute       = $this->input->post('route');
            $idp        = $this->input->post('id_pasien');

            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');
    
            $this->form_validation->set_rules('nama', 'Nama Rekanan', 'required');
    
            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'nama' => form_error('nama_rekanan'),
                );
    
                $this->session->set_flashdata('form_error', $msg_error);
                echo json_encode(['error' => 'Validation failed. Please check the form again.']);
            } else {
                $sql_num = $this->db->get('tbl_m_pelanggan')->num_rows() + 1;
                $kode    = 'MCU-'.sprintf('%03d', $sql_num);

                $data = array(
                    'tgl_simpan' => date('Y-m-d H:i:s'),
                    'tgl_modif'  => date('Y-m-d H:i:s'),
                    'kode'       => $kode,
                    'nama'       => $nama,
                    'alamat'     => $alamat,
                    'no_hp'      => $no_hp,
                    'cp'         => $cp,
                );
    
                try {
                    crud::simpan('tbl_m_pelanggan', $data);
                    echo json_encode(['success' => true, 'message' => 'Data berhasil disimpan.']);
                } catch (Exception $e) {
                    echo json_encode(['success' => false, 'message' => 'Gagal menyimpan data.']);
                }
            }
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function set_gc_simpan() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $nik        = $this->input->post('nik');
            $nama       = $this->input->post('nama');
            $no_hp      = $this->input->post('no_hp');
            $jns_klm    = $this->input->post('jns_klm');
            $tmp_lahir  = $this->input->post('tmp_lahir');
            $tgl_lahir  = $this->input->post('tgl_lahir');
            $alamat     = $this->input->post('alamat');
            $hubungan   = $this->input->post('hubungan');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'     => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);
                redirect(base_url('medcheck/data_pendaftaran.php'));
            } else {
                $sql_dft    = $this->db->where('id', general::dekrip($id))->get('tbl_pendaftaran')->row(); 
                
                $data_pas = array(
                    'id_pendaftaran'    => $sql_dft->id,
                    'id_user'           => $this->ion_auth->user()->row()->id,
                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                    'tgl_masuk'         => date('Y-m-d'),
                    'nik'               => $nik,
                    'nama'              => $nama,
//                    'no_hp'             => $no_hp,
//                    'jns_klm'           => $jns_klm,
//                    'tmp_lahir'         => $tmp_lahir,
//                    'tgl_lahir'         => $this->tanggalan->tgl_indo_sys($tgl_lahir),
//                    'alamat'            => $alamat,
                    'status_hub'        => $hubungan,
                );
                
                $this->db->insert('tbl_pendaftaran_gc', $data_pas);
                $last_id = crud::last_id();
                
                if($this->db->affected_rows() > 0){
                    $this->db->where('id', $sql_dft->id)->update('tbl_pendaftaran', array('status_gc'=>'1'));
                    
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri data persetujuan umum berhasil !");');
                }else{
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri data persetujuan umum gagal !");');
                }
                
                redirect(base_url('medcheck/daftar_gc_ttd.php?dft='.$id.'&id_dft='.general::enkrip($last_id)));
            }
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    
    public function set_gc_update() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_dft     = $this->input->post('id_dft');
            $foto       = $this->input->post('foto');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'     => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);
                redirect(base_url('medcheck/data_pendaftaran.php'));
            } else {
                $sql_dft    = $this->db->where('id', general::dekrip($id_dft))->get('tbl_pendaftaran')->row(); 
                $sql_dft_gc = $this->db->where('id_pendaftaran', $sql_dft->id)->get('tbl_pendaftaran_gc')->row(); 
                
                # Config File Foto Pasien
                $dir_gc           = FCPATH.'/';
                $path             = 'file/gc/'.$sql_dft->id.'/';
                
                # Buat Folder Untuk Foto Pasien
                if(!file_exists($dir_gc.$path)){
                    mkdir($dir_gc.$path, 0777, true);
                }

                # Simpan foto dari kamera ke dalam format file *.png dari base64
                if (!empty($foto)) {
                    $filename           = $path.'ttd_gc_'.$sql_dft->id.'.png';
                    general::base64_to_jpeg($foto, $filename);
                }
                
                                
                $data_pas = array(
                    'file_name' => $filename,
                );
                
                try {
                $this->db->where('id', $sql_dft_gc->id)->update('tbl_pendaftaran_gc', $data_pas);
                $last_id = $sql_dft_gc->id;
                
                    header('Content-Type: application/json');
                    echo json_encode(array(
                        'success' => true,
                        'message' => 'TTD Berhasil disimpan'
                    ));
                    return;
                } catch (Exception $e) {
                    header('Content-Type: application/json');
                    echo json_encode(array(
                        'success' => false,
                        'message' => 'Gagal menyimpan TTD: ' . $e->getMessage()
                    ));
                    return;
                }
            }
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();            
        }
    }
    public function set_medcheck() {
        if (akses::aksesLogin() == TRUE) {
            $pasien     = $this->input->post('id_pasien');
            $dft_id     = $this->input->post('dft_id');
            $ant_id     = $this->input->post('ant_id');
            $dokter     = $this->input->post('dokter');
            $poli       = $this->input->post('poli');
            $keluhan    = $this->input->post('keluhan');
            $ttv        = $this->input->post('ttv');
            $ttv_st     = $this->input->post('ttv_st');
            $ttv_bb     = $this->input->post('ttv_bb');
            $ttv_tb     = $this->input->post('ttv_tb');
            $ttv_td     = $this->input->post('ttv_td');
            $ttv_sst    = $this->input->post('ttv_sistole');
            $ttv_dst    = $this->input->post('ttv_diastole');
            $ttv_ndi    = $this->input->post('ttv_nadi');
            $ttv_lju    = $this->input->post('ttv_laju');
            $ttv_sat    = $this->input->post('ttv_saturasi');
            $ttv_skl    = $this->input->post('ttv_skala');
            $alergi     = $this->input->post('alergi');
            $tipe       = $this->input->post('tipe');
            $kategori   = $this->input->post('kategori');
            $pengaturan = $this->db->get('tbl_pengaturan')->row();
            $pengaturan2= $this->db->where('id', $this->ion_auth->user()->row()->id_app)->get('tbl_pengaturan_cabang')->row();

            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id_pasien', 'Nama Pasien', 'required');
            $this->form_validation->set_rules('tipe', 'Tipe', 'required');
            $this->form_validation->set_rules('poli', 'Klinik', 'required');
            $this->form_validation->set_rules('dokter', 'Dokter', 'required');
            $this->form_validation->set_rules('keluhan', 'Keluhan', 'required');
            $this->form_validation->set_rules('ttv_st', 'ID', 'required');
            $this->form_validation->set_rules('ttv_bb', 'ID', 'required');
            $this->form_validation->set_rules('ttv_tb', 'ID', 'required');
            $this->form_validation->set_rules('ttv_saturasi', 'ID', 'required');
            $this->form_validation->set_rules('ttv_sistole', 'ID', 'required');
            $this->form_validation->set_rules('ttv_diastole', 'ID', 'required');
            $this->form_validation->set_rules('ttv_nadi', 'ID', 'required');
            $this->form_validation->set_rules('ttv_laju', 'ID', 'required');
            $this->form_validation->set_rules('ttv_skala', 'ID', 'required');
            
            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'tipe'          => form_error('tipe'),
                    'pasien'        => form_error('id_pasien'),
                    'poli'          => form_error('poli'),
                    'dokter'        => form_error('dokter'),
                    'keluhan'       => form_error('keluhan'),
                    'ttv_st'        => form_error('ttv_st'),
                    'ttv_bb'        => form_error('ttv_bb'),
                    'ttv_tb'        => form_error('ttv_tb'),
                    'ttv_saturasi'  => form_error('ttv_saturasi'),
                    'ttv_sistole'   => form_error('ttv_sistole'),
                    'ttv_diastole'  => form_error('ttv_diastole'),
                    'ttv_nadi'      => form_error('ttv_nadi'),
                    'ttv_laju'      => form_error('ttv_laju'),
                    'ttv_skala'     => form_error('ttv_skala'),
                ];

                $this->session->set_flashdata('form_error', $msg_error); 
                
                $this->session->set_flashdata('keluhan', $keluhan);
                $this->session->set_flashdata('ttv_st', $ttv_st);
                $this->session->set_flashdata('ttv_bb', $ttv_bb);
                $this->session->set_flashdata('ttv_tb', $ttv_tb);
                $this->session->set_flashdata('ttv_td', $ttv_td);
                $this->session->set_flashdata('ttv_sistole', $ttv_sst);
                $this->session->set_flashdata('ttv_diastole', $ttv_dst);
                $this->session->set_flashdata('ttv_nadi', $ttv_ndi);
                $this->session->set_flashdata('ttv_laju', $ttv_lju);
                $this->session->set_flashdata('ttv_saturasi', $ttv_sat);
                $this->session->set_flashdata('ttv_skala', $ttv_skl);

                redirect(base_url('medcheck/tambah.php'.(!empty($dft_id) ? '?dft_pas='.general::enkrip($pasien).'&dft_id='.general::enkrip($dft_id) : '')));
            } else {
                $sql_dft    = $this->db->where('id', (!empty($dft_id) ? $dft_id : '0'))->get('tbl_pendaftaran')->row();
                $sql_dft_gc = $this->db->where('id_pendaftaran', $sql_dft->id)->get('tbl_pendaftaran_gc');
                $sql_pas    = $this->db->where('id', $pasien)->get('tbl_m_pasien')->row();
                
                $sql_rm     = $this->db->where('MONTH(tgl_simpan)', date('m'))->where('YEAR(tgl_simpan)', date('Y'))->get('tbl_trans_medcheck');
                $str_rm     = $sql_rm->num_rows() + 1;
                $no_rm      = date('ymd').sprintf('%04d', $str_rm);
                
                $sql_no     = $this->db->select_max('id')->get('tbl_trans_medcheck')->row();
                $sql_akun   = $this->db->select('COUNT(id) AS jml')->where('DATE(tgl_simpan)', date('Y-m-d'))->get('tbl_trans_medcheck')->row();
                $str_akun   = $sql_akun->jml + 1;
                $no_akun    = strtoupper(date('Mdy').sprintf('%04d', $str_akun));
                $nomor_id   = $sql_no->id + 1;
                $uuid       = $this->uuid->v4();
                
                $data = [
                    'uuid'         => $uuid,
                    'id_user'      => $this->ion_auth->user()->row()->id,
                    'id_nurse'     => $this->ion_auth->user()->row()->id,
                    'id_pasien'    => (!empty($pasien) ? $pasien : '0'),
                    'id_dokter'    => (!empty($dokter) ? $dokter : '0'),
                    'id_poli'      => (!empty($poli) ? $poli :'0'),
                    'id_dft'       => (!empty($dft_id) ? $dft_id : '0'),
                    'id_ant'       => (!empty($ant_id) ? $ant_id : '0'),
                    'id_referall'  => $sql_dft->id_referall,
                    'tgl_simpan'   => date('Y-m-d H:i:s'),
                    'tgl_masuk'    => date('Y-m-d H:i:s'),
                    'pasien'       => $sql_pas->nama_pgl,
                    'keluhan'      => $keluhan,
                    'ttv_st'       => $ttv_st,
                    'ttv_bb'       => $ttv_bb,
                    'ttv_tb'       => $ttv_tb,
                    'ttv_td'       => $ttv_td,
                    'ttv_sistole'  => $ttv_sst,
                    'ttv_diastole' => $ttv_dst,
                    'ttv_nadi'     => $ttv_ndi,
                    'ttv_laju'     => $ttv_lju,
                    'ttv_saturasi' => $ttv_sat,
                    'ttv_skala'    => $ttv_skl,
                    'alergi'       => $sql_dft->alergi,
                    'tipe'         => (!empty($tipe) ? $tipe : '0'),
                    'no_rm'        => $no_rm,
                    'no_akun'      => $no_akun,
                    'tipe_bayar'   => (!empty($sql_dft->tipe_bayar) ? $sql_dft->tipe_bayar : '0'),
                    'status'       => '1',
                    'status_nota'  => '1',
                ]; 
                
                /* Transaksi Database */
                try {
                    // Get form ID and check for double submission
                    $form_id = $this->input->post('form_id');
                    if (check_form_submitted($form_id)) {
                        throw new Exception("Form sudah disubmit sebelumnya!");
                    }

                    // Set cache lock to prevent concurrent processing
                    $lock_key = 'medcheck_process_lock_' . $pasien . '_' . $dft_id.'_'.$uuid;
                    
                    // Check if cache driver is loaded properly
                    if (!isset($this->cache) || !isset($this->cache->file)) {
                        // Load cache driver if not already loaded
                        $this->load->driver('cache', array('adapter' => 'file'));
                    }
                    
                    $cache_result = $this->cache->file->get($lock_key);
                    
                    if ($cache_result !== FALSE) {
                        $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Proses sedang berlangsung, mohon tunggu...");');
                        redirect(base_url('medcheck/index.php?tipe='.$tipe));
                        return;
                    }
                    
                    // Set lock for 30 seconds
                    $this->cache->file->save($lock_key, TRUE, 30);
                    
                    // Start transaction
                    $this->db->trans_begin();

                    # Masukkan ke tabel medcheck
                    // Check if a record with the same UUID already exists
                    $existing_record = $this->db->where('uuid', $uuid)
                                               ->get('tbl_trans_medcheck')
                                               ->row();
                    
                    if ($existing_record) {
                        throw new Exception("Transaksi dengan UUID yang sama sudah ada dalam database!");
                    }

                $this->db->insert('tbl_trans_medcheck', $data);
                $last_id = crud::last_id();
                
                # Masukkan data dokter jadi satu di tabel raber
                    $data_dokter = [
                    'id_medcheck'   => $last_id,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'id_pasien'     => (!empty($pasien) ? $pasien : '0'),
                    'id_dokter'     => (!empty($dokter) ? $dokter : '0'),
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'keterangan'    => '',
                    'status'        => '1'
                    ];
                
                $this->db->insert('tbl_trans_medcheck_dokter', $data_dokter);
                
                # Masukkan GC ke tabel riwayat berkas
                    $data_file_gc = [
                    'id_medcheck'       => $last_id,
                    'id_pasien'         => (!empty($pasien) ? $pasien : '0'),
                    'id_user'           => $this->ion_auth->user()->row()->id,
                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                    'tgl_masuk'         => date('Y-m-d H:i'),
                    'judul'             => 'SURAT PERSETUJUAN UMUM',
                    'file_name'         => '/surat/print_pdf_gc.php?dft='.general::enkrip($sql_dft_gc->row()->id),
                    'file_ext'          => '.pdf',
                    'file_type'         => 'application/pdf',
                    'status'            => '2',
                    ];
                
                # Jika GC dibuat maka simpan berkas ke tabel berkas
                if($sql_dft_gc->num_rows() > 0){
                    $this->db->insert('tbl_trans_medcheck_file', $data_file_gc);
                }
                
                # Jika tipe medcheck lab atau radiologi
                if($tipe == '1'){                   
                    $nomer      = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_lab')->num_rows() + 1;
                    $no_surat   = sprintf('%03d', $nomer).'/'.$pengaturan->kode_surat.'/'.date('m').'/'.date('Y');
                    $grup       = $this->ion_auth->get_users_groups()->row();
                    $is_farm    = ($grup->name == 'analis' ? '2' : '0');
                    $is_farm_id = ($grup->name == 'analis' ? $this->ion_auth->user()->row()->id : '0');
                    $is_doc_id  = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : '0');
                
                        $data_lab = [
                        'tgl_simpan'    => date('Y-m-d H:i:s'),
                        'tgl_masuk'     => date('Y-m-d H:i:s'),
                        'id_medcheck'   => $last_id,
                        'id_pasien'     => $pasien,
                        'id_user'       => $this->ion_auth->user()->row()->id,
                        'id_analis'     => $is_farm_id,
                        'id_dokter'     => $is_doc_id,
                        'no_lab'        => $no_surat,
                        'status'        => '0',
                        'status_cvd'    => '0',
                        ];
                    
                    # Simpan ke tabel lab
                    $this->db->insert('tbl_trans_medcheck_lab', $data_lab);                
                    } elseif($tipe == '4'){
                    $nomer      = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_rad')->num_rows() + 1;
                    $no_surat   = sprintf('%03d', $nomer).'/'.$pengaturan->kode_rad.'/'.date('m').'/'.date('Y');
                    $grup       = $this->ion_auth->get_users_groups()->row();
                    $is_rad     = ($grup->name == 'radiografer' ? '2' : '0');
                    $is_rad_id  = ($grup->name == 'radiografer' ? $this->ion_auth->user()->row()->id : '0');
                    $is_doc_id  = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : '0');
                   
                        $data_rad = [
                        'tgl_simpan'    => date('Y-m-d H:i:s'),
                        'tgl_masuk'     => date('Y-m-d H:i:s'),
                        'id_medcheck'   => $last_id,
                        'id_pasien'     => $pasien,
                        'id_user'       => $this->ion_auth->user()->row()->id,
                        'id_radiografer'=> $is_rad_id,
                        'id_dokter'     => $is_doc_id,
                        'no_rad'        => $no_surat,
                        'no_sample'     => '-',
                        'status'        => '0',
                        ];
                    
                    # Simpan ke tabel rad
                    $this->db->insert('tbl_trans_medcheck_rad', $data_rad);
                }

                # Update ke tabel pendaftaran
                    $this->db->where('id', $dft_id)->update('tbl_pendaftaran', ['status_akt' => '2', 'file_base64'=>'']);

                # Upload file foto
                $kode   = sprintf('%05d', $sql_pas->kode);
                $no_rm  = strtolower($pengaturan->kode_pasien).$kode;
                $path   = 'file/pasien/'.$no_rm.'/';
                $folder = realpath('./'.$path);

                if (!empty($_FILES['fupload']['name'])) {
                    $config['upload_path']      = $folder;
                    $config['allowed_types']    = 'jpg|png|pdf|jpeg|jfif';
                    $config['remove_spaces']    = TRUE;
                    $config['overwrite']        = TRUE;
                        $config['file_name']        = 'profile_'.$no_rm;
                    $this->load->library('upload', $config);

                    if (!$this->upload->do_upload('fupload')) {
                            // Log error but continue processing
                            throw new Exception('File upload failed: ' . $this->upload->display_errors());
                    } else {
                            $f = $this->upload->data();
                        
                        # Data File
                            $data_file = [
                            'file_name'     => $path.$f['orig_name'],
                            'file_type'     => $f['file_type'],
                            'file_ext'      => $f['file_ext'],
                            ];

                        # Simpan File Gambar ke tabel
                        $this->db->where('id', $sql_pas->id)->update('tbl_m_pasien', $data_file);
                    }
                }
                
                    # Commit transaction if all operations successful
                if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Database transaction failed");
                    }
                    
                    $this->db->trans_commit();
                
                    // Clear the lock
                    if ($this->cache->file) {
                        $this->cache->file->delete($lock_key);
                    }

                    # Buat session jika sudah berhasil commit
                    $this->session->set_userdata('trans_medcheck', $data);

                    # Tampilkan pesan sukses
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data Medical Checkup Sudah disimpan!!");');
                } catch (Exception $e) {
                    # Rollback transaction on error
                    $this->db->trans_rollback();
            
                    // Safely delete cache if it exists
                    if ($this->cache->file) {
                        $this->cache->file->delete($lock_key);
                    }
                    
                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data Medical Checkup gagal disimpan: ' . $e->getMessage() . '");');
                }

                redirect(base_url('medcheck/index.php?tipe='.$tipe));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    
    public function set_pasien() {
        if (akses::aksesLogin() != TRUE) {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
            return;
        }
    
        // Verify POST request
        if ($this->input->method() !== 'post') {
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Invalid request method!");');
            redirect('medcheck/data_pendaftaran.php?filter_tgl=' . date('Y-m-d'));
            return;
        }
    
        $id = $this->input->post('dft');
        $process_token = $this->input->post('process_token');
        
        // Verify process token
        $stored_token = $this->session->userdata('process_token_'.general::dekrip($id));
        if (empty($stored_token) || $stored_token !== $process_token) {
            $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Invalid or expired request!");');
            redirect('medcheck/data_pendaftaran.php?filter_tgl=' . date('Y-m-d'));
            return;
        }
        
        // Remove the token immediately to prevent reuse
        $this->session->unset_userdata('process_token_'.general::dekrip($id));
    
        // Get form ID and check for double submission
        $form_id = $this->input->post('form_id');
        if (check_form_submitted($form_id)) {
            $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Form sudah disubmit sebelumnya!");');
            redirect('medcheck/data_pendaftaran.php?filter_tgl=' . date('Y-m-d'));
            return;
        }
    
        if(empty($id)) {
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("ID pendaftaran tidak ditemukan!");');
            redirect('medcheck/data_pendaftaran.php?filter_tgl=' . date('Y-m-d'));
            return;
        }
    
        // Use cache-based lock with unique request identifier
        $lock_key = 'patient_processing_' . $id . '_' . $process_token;
        $this->load->driver('cache');
        
        if (!$this->cache->file->get($lock_key)) {
            // Set lock for 5 minutes
            $this->cache->file->save($lock_key, true, 300);
            
            $this->db->trans_begin();
            
            try {

                // Data Pengaturan here
                $pengaturan = $this->db->get('tbl_pengaturan')->row();
                $sql_dft    = $this->db->where('id', general::dekrip($id))->get('tbl_pendaftaran')->row();
                $sql_cek    = $this->db->where('nik', $sql_dft->nik)->where('nama', $sql_dft->nama)->where('alamat', $sql_dft->alamat)->get('tbl_m_pasien');
                $sql_num    = $this->db->order_by('id', 'DESC')->limit(1)->get('tbl_m_pasien')->row();
                $num        = $sql_num->id + 1;
                
                $data_pas = [
                    'tgl_simpan'        => $sql_dft->tgl_simpan,
                    'tgl_modif'         => $sql_dft->tgl_simpan,
                    'id_gelar'          => $sql_dft->id_gelar,
                    'id_kategori'       => '1',
                    'id_pekerjaan'      => $sql_dft->id_pekerjaan,
                    'kode_dpn'          => $pengaturan->kode_pasien,
                    'nik'               => $sql_dft->nik,
                    'nama'              => $sql_dft->nama,
                    'nama_pgl'          => $this->general->bersih($sql_dft->nama_pgl),
                    'tmp_lahir'         => $sql_dft->tmp_lahir,
                    'tgl_lahir'         => $sql_dft->tgl_lahir,
                    'jns_klm'           => $sql_dft->jns_klm,
                    'no_hp'             => $sql_dft->kontak,
                    'no_telp'           => $sql_dft->kontak_rmh,
                    'alamat'            => general::bersih($sql_dft->alamat),     // (!empty($sql_dft->alamat) || $sql_dft->alamat != 0 ? $sql_dft->alamat : ''),
                    'alamat_dom'        => $sql_dft->alamat_dom, // (!empty($sql_dft->alamat_dom) || $sql_dft->alamat_dom != 0 ? $sql_dft->alamat_dom : ''),
                    'instansi'          => (!empty($sql_dft->instansi) || $sql_dft->instansi !='-' ? $sql_dft->instansi : ''),
                    'instansi_alamat'   => (!empty($sql_dft->instansi_alamat) || $sql_dft->instansi_alamat !='-' ? $sql_dft->instansi_alamat : ''),                  
                    'alergi'            => $sql_dft->alergi,                  
                    'status'            => '1',
                    'status_pas'        => $sql_dft->status,
                ];
                
                if($sql_dft->status == '2'){
                    // Nek kembar, wajib tendang su
                    if($sql_cek->num_rows() > 0){
                        $pasien_id  = $sql_cek->row()->id;
                        $id_user    = $sql_cek->row()->id_user;
                        $sql_poin   = $this->db->where('id_pasien', $pasien_id)->get('tbl_m_pasien_poin');

                        # Update data pasien
                        $this->db->where('id', $pasien_id)->update('tbl_m_pasien', $data_pas);
                        
                        # cek udah ada param poin belum, kalo belum buat parameternya
                        if($sql_poin->num_rows() == 0){
                            $data_poin = [
                                'id_pasien'     => $pasien_id,
                                'tgl_simpan'    => date('Y-m-d H:i:s'),
                                'jml_poin'      => 0,
                                'jml_poin_nom'  => 0,
                                'status'        => '1',
                            ];

                            $this->db->insert('tbl_m_pasien_poin', $data_poin);
                        }

                        $last_id = $pasien_id;
                    }else{
                        $this->db->insert('tbl_m_pasien', $data_pas);
                        $last_id = crud::last_id();
                                        
                        $data_poin = [
                            'id_pasien'     => $last_id,
                            'tgl_simpan'    => date('Y-m-d H:i:s'),
                            'jml_poin'      => 0,
                            'jml_poin_nom'  => 0,
                            'status'        => '1',
                        ];
                        
                        $this->db->insert('tbl_m_pasien_poin', $data_poin);
                    }
                }else{
                    $sql_pas = $this->db->where('id', $sql_dft->id_pasien)->get('tbl_m_pasien')->row();                    
                    $this->db->where('id', $sql_pas->id)->update('tbl_m_pasien', $data_pas);
                    $last_id = $sql_pas->id;
                }
                
                # Config File Foto Pasien
                $dir                = FCPATH.'/';
                $kode               = sprintf('%05d', $last_id);
                $no_rm              = strtolower($pengaturan->kode_pasien).$kode;
                $path               = 'file/pasien/'.$no_rm.'/';
                
                # Buat Folder Untuk Foto Pasien
                if(!file_exists($dir.$path)){
                    mkdir($dir.$path, 0777, true);
                }
                
                # Simpan foto dari kamera ke dalam format file *.png dari base64
                if (!empty($sql_dft->file_base64)) {
                    $filename           = $path.'profile_'.$kode.'.png';
                    general::base64_to_jpeg($sql_dft->file_base64, $dir.$filename);
                }
                
                # Simpan foto dari kamera ke dalam format file *.png dari base64 KTP / ID PASIEN
                if (!empty($sql_dft->file_base64_id)) {
                    $filename_id        = $path.'ID_'.$kode.'.png';
                    general::base64_to_jpeg($sql_dft->file_base64_id, $dir.$filename_id);
                }
                
                # Integrasi data pasien untuk akses login pasien
                $sql_user       = $this->db->select('id, username')->where('username', $no_rm)->get('tbl_ion_users');
                $sql_user_rw    = $sql_user->row();
                $email          = $no_rm.'@'.$pengaturan->website; # Format Email
                $user           = $no_rm; # Format username pasien menggunakan no rm
                $pass2          = ($sql_dft->tgl_lahir == '0000-00-00' ? $user : $this->tanggalan->tgl_indo8($sql_dft->tgl_lahir)); # Format kata sandi pasien menggunakan tanggal lahir dd-mm-yyyy jika tanggal lahir kosong maka passwordnya sama dengan username
                
                # Cek username tersebut sudah pernah di pakai atau belum
                if($sql_user->num_rows() == 0){
                    $data_user = [
                        'email'         => $email,
                        'first_name'    => $sql_dft->nama,
                        'nama'          => $sql_dft->nama_pgl,
                        'address'       => $sql_dft->alamat,
                        'phone'         => $sql_dft->kontak,
                        'birthdate'     => $sql_dft->tgl_lahir,
                        'file_name'     => (file_exists($filename) ? $filename : ''),
                        'username'      => $no_rm,
                        'tipe'          => '2',
                    ];
                    
                    # Simpan ke modul user
                    $this->ion_auth->register($user, $pass2, $email, $data_user, array('15'));
                    
                    $sql_user_ck = $this->db->select('id, username')->where('username', $user)->get('tbl_ion_users')->row();
                    $id_user = $sql_user_ck->id;
                }else{
                    $data_user = [
                        'email'         => $email,
                        'first_name'    => $sql_dft->nama,
                        'nama'          => $sql_dft->nama_pgl,
                        'address'       => $sql_dft->alamat,
                        'phone'         => $sql_dft->kontak,
                        'birthdate'     => $sql_dft->tgl_lahir,
                        'file_name'     => (file_exists($filename) ? $filename : ''),
                        'username'      => $no_rm,
                        'password'      => $pass2,
                        'tipe'          => '2',
                    ];
                    
                    $this->ion_auth->update($id_user, $data_user);
                    $id_user = $sql_user_rw->id;                    
                }
                
                # Simpan ID User dari tabel ion_users ke tabel pasien
                $data_pas_upd = [
                    'id_user' => $id_user,
                    'kode'    => $kode,
                ];
                
                $this->db->where('id', $last_id)->update('tbl_m_pasien', $data_pas_upd); 

                    
                # Cek File Foto Pasien
                if (!empty($sql_dft->file_base64)) {
                    # Data File
                    $data_file = [
                        'file_name'     => (file_exists($filename) ? $filename : ''),
                        'file_type'     => (file_exists($filename) || file_exists($filename_id) ? 'image/png' : ''),
                        'file_ext'      => (file_exists($filename) || file_exists($filename_id) ? '.png' : ''),
                    ];

                    # Simpan File Gambar ke tabel
                    $this->db->where('id', $last_id)->update('tbl_m_pasien', $data_file);
                    
                    # Hapus gambar pada pendaftaran supaya tidak penuh
                    $this->db->where('id', $sql_dft->id)->update('tbl_pendaftaran', ['file_base64'=>'']);
                }
                    
                # Cek File ID
                if (!empty($sql_dft->file_base64_id)) {
                    # Data File
                    $data_file_id = [
                        'file_name_id'  => (file_exists($filename_id) ? $filename_id : ''),
                    ];

                    # Simpan File Gambar ke tabel
                    $this->db->where('id', $last_id)->update('tbl_m_pasien', $data_file_id);
                    
                    # Hapus gambar pada pendaftaran supaya tidak penuh
                    $this->db->where('id', $sql_dft->id)->update('tbl_pendaftaran', ['file_base64_id'=>'']);
                }
                
                if ($this->db->trans_status() === FALSE) {
                    throw new Exception("Database transaction failed");
                }
                
                $this->db->trans_commit();
                
                // Clear the lock
                $this->cache->file->delete($lock_key);
                
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data pasien sudah disimpan!");');
                redirect(base_url('medcheck/tambah.php?dft_pas='.general::enkrip($last_id).'&dft_id='.general::enkrip($sql_dft->id)));
            } catch (Exception $e) {
                $this->db->trans_rollback();
                $this->cache->file->delete($lock_key);
                
                log_message('error', 'Patient processing error: ' . $e->getMessage());
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data pasien gagal disimpan: ' . $e->getMessage() . '");');
                redirect('medcheck/data_pendaftaran.php?filter_tgl=' . date('Y-m-d'));
            }
        } else {
            $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Proses sedang berlangsung, mohon tunggu...");');
            redirect('medcheck/data_pendaftaran.php?filter_tgl=' . date('Y-m-d'));
        }
    }

    public function set_medcheck_update() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $tgl_periksa= $this->input->post('tgl_periksa');
            $anamnesa   = $this->input->post('anamnesa');
            $diagnosa   = $this->input->post('diagnosa');
            $periksa    = $this->input->post('pemeriksaan');
            $program    = $this->input->post('program');
            $icd        = $this->input->post('icd');
            $icd10      = $this->input->post('icd10');
            $status     = $this->input->post('status');
            $st_priksa  = $this->input->post('status_periksa');
            $keluhan    = $this->input->post('keluhan');
            $ttv        = $this->input->post('ttv');
            $ttv_st     = $this->input->post('ttv_st');
            $ttv_bb     = $this->input->post('ttv_bb');
            $ttv_tb     = $this->input->post('ttv_tb');
            $ttv_td     = $this->input->post('ttv_td');
            $ttv_sst    = $this->input->post('ttv_sistole');
            $ttv_dst    = $this->input->post('ttv_diastole');
            $ttv_ndi    = $this->input->post('ttv_nadi');
            $ttv_lju    = $this->input->post('ttv_laju');
            $ttv_sat    = $this->input->post('ttv_saturasi');
            $ttv_skl    = $this->input->post('ttv_skala');
            $alergi     = $this->input->post('alergi');
            $rute       = $this->input->post('route');
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri data pemeriksaan gagal !");');
                redirect(base_url('medcheck/tambah.php?id='.$id.$rute));
            } else {
                $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                        
                $data = [
                    'tgl_modif'         => date('Y-m-d H:i:s'),
                    'tgl_periksa'       => (!empty($tgl_periksa) ? $tgl_periksa : '0000-00-00 00:00:00'),
                    'keluhan'           => $keluhan,
                    'ttv_st'            => $ttv_st,
                    'ttv_bb'            => $ttv_bb,
                    'ttv_tb'            => $ttv_tb,
                    'ttv_td'            => $ttv_td,
                    'ttv_sistole'       => $ttv_sst,
                    'ttv_diastole'      => $ttv_dst,
                    'ttv_nadi'          => $ttv_ndi,
                    'ttv_laju'          => $ttv_lju,
                    'ttv_saturasi'      => $ttv_sat,
                    'ttv_skala'         => $ttv_skl,
                    'alergi'            => $alergi,
                    'anamnesa'          => $anamnesa,
                    'pemeriksaan'       => $periksa,
                    'diagnosa'          => $diagnosa,
                    'program'           => $program,
                    'status'            => $status,
                    'status_periksa'    => (!empty($st_priksa) ? $st_priksa : '0'),
                    'status_nota'       => '2',
                ];
                
                $this->db->where('id', $sql_medc->id_pasien)->update('tbl_m_pasien', ['alergi' => $alergi]);
                $this->db->where('id', general::dekrip($id))->update('tbl_trans_medcheck', $data);

                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri data pemeriksaan berhasil !");');
                
                if(!empty($rute)){
                    redirect(base_url('medcheck/tambah.php?id='.$id.$rute));
                }else{
                    redirect(base_url('medcheck/index.php?tipe='.$sql_medc->tipe));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_update_penj() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $penjamin   = $this->input->post('platform');
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Validasi gagal, periksa form anda!");');
                redirect(base_url('medcheck/tambah.php'));
            } else {
                $this->db->trans_begin();
                
                try {
                    // Get form ID and check for double submission
                    $form_id = $this->input->post('form_id');
                    if (check_form_submitted($form_id)) {
                        throw new Exception('Terdeteksi double submit, silahkan coba lagi!');
                    }

                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    
                    $sql_medc_det = $this->db->select('id, id_resep, id_item, kode, item, jml, jml_satuan, harga, disk1, disk2, disk3, potongan, subtotal')
                                            ->where('id_medcheck', $sql_medc->id)
                                            ->where('status', '4')
                                            ->get('tbl_trans_medcheck_det');
                    
                    $sql_medc_res_det = $this->db->where('id_medcheck', $sql_medc->id)
                                                ->get('tbl_trans_medcheck_resep_det');
                    
                    $sql_pnjm = $this->db->where('id', $penjamin)
                                        ->get('tbl_m_penjamin')
                                        ->row();
                    
                    $data = [
                        'tgl_modif'  => date('Y-m-d H:i:s'),
                        'tipe_bayar' => $penjamin,
                    ];
                    
                    # cek jika obat sudah di posting ke tabel det
                    if ($sql_medc_det->num_rows() > 0) {
                        foreach ($sql_medc_det->result() as $det) {
                            $sql_item       = $this->db->where('id', $det->id_item)->get('tbl_m_produk')->row();
                            $sql_res_det    = $this->db->where('id_resep', $det->id_resep)
                                                       ->where('id_item', $det->id_item)
                                                       ->get('tbl_trans_medcheck_resep_det')
                                                       ->row();
                            $sql_res_det_rc = $this->db->where('id_resep', $det->id_resep)
                                                       ->get('tbl_trans_medcheck_resep_det_rc')
                                                      ->result();
                        
                            $harga      = $sql_item->harga_jual;
                            $percent    = ($sql_pnjm->persen > 0) ? ($sql_pnjm->persen / 100) : 0;
                            $ass        = ($harga * $sql_pnjm->persen);
                            # Jika penjamin asuransi, maka harga obat di tambah sesuai setelan % pada database
                            $harga_pcs  = ($sql_pnjm->persen != 0 ? $ass : $harga);
                            $harga_tot  = ($sql_item->status_racikan == '1' ? $harga : $harga_pcs);
                            $potongan   = (float)$det->potongan;
                            
                            $disk1      = $harga_tot - ((($det->disk1 > 0 ? $det->disk1 : 0) / 100) * $harga_tot);
                            $disk2      = $disk1 - ((($det->disk2 > 0 ? $det->disk2 : 0) / 100) * $disk1);
                            $disk3      = $disk2 - ((($det->disk3 > 0 ? $det->disk3 : 0) / 100) * $disk2);
                            $subtotal   = ($disk3 - $potongan) * (int)$det->jml;
                            
                            $data_item = [
                                'id_resep'  => $det->id_resep,
                                'id_item'   => $det->id_item,
                                'resep'     => '',
                                'item'      => $det->item,
                                'harga'     => ($sql_item->status_racikan == '1' ? $harga : $harga_tot),
                                'disk1'     => $det->disk1,
                                'disk2'     => $det->disk2,
                                'disk3'     => $det->disk3,
                                'potongan'  => $det->potongan,
                                'subtotal'  => $subtotal,
                            ];
                            
                            foreach ($sql_res_det_rc as $racikan) {
                                $sql_item_rc  = $this->db->where('id', $racikan->id_item)->get('tbl_m_produk')->row();
                                $harga_rc     = $sql_item_rc->harga_jual;
                                $percent_rc   = ($sql_pnjm->persen > 0) ? ($sql_pnjm->persen / 100) : 0;
                                $ass_rc       = $harga_rc * $sql_pnjm->persen;
                                $harga_tot_rc = ($sql_pnjm->persen != 0 ? $ass_rc : $harga_rc);
                            
                                $subtotal_rc  = $harga_tot_rc * (int)$racikan->jml;
                                
                                $data_item_rc = [
                                    'harga'     => $harga_tot_rc,
                                    'subtotal'  => $subtotal_rc,
                                ];
                                
                                # Update isi data di tabel racikan detail beserta perubahan harganya jika ada asuransi
                                $this->db->where('id', $racikan->id)->update('tbl_trans_medcheck_resep_det_rc', $data_item_rc);
                            }
                            
                            # Ambil data detail json dari tabel racikan
                            $sql_res_det_rc2 = $this->db->where('id_resep', $det->id_resep)
                                                       ->get('tbl_trans_medcheck_resep_det_rc')
                                                       ->result();
                            $resep = ($sql_item->status_racikan == '1' ? json_encode($sql_res_det_rc2) : '');
        
                            # Update isi data di tabel resep beserta perubahan harganya jika ada asuransi
                            $this->db->where('id', $sql_res_det->id)->update('tbl_trans_medcheck_resep_det', $data_item);
        
                            # Update isi data di tabel medcheck det beserta perubahan harganya jika ada asuransi
                            $this->db->where('id', $det->id)->update('tbl_trans_medcheck_det', $data_item);
                        }                
                    } else {
                        foreach ($sql_medc_res_det->result() as $det) {
                            $sql_item       = $this->db->where('id', $det->id_item)->get('tbl_m_produk')->row();
                            $sql_res_det_rc = $this->db->where('id_resep_det', $det->id)
                                                      ->get('tbl_trans_medcheck_resep_det_rc')
                                                      ->result();
                        
                            $harga      = $sql_item->harga_jual;
                            $percent    = ($sql_pnjm->persen > 0) ? ($sql_pnjm->persen / 100) : 0;
                            $ass        = ($harga * $sql_pnjm->persen);
                            $harga_pcs  = ($sql_pnjm->persen != 0 ? $ass : $harga);
                            $harga_tot  = ($sql_item->status_racikan == '1' ? $harga : $harga_pcs);
                            $potongan   = $det->potongan;
                            
                            $disk1      = $harga_tot - (($det->disk1 / 100) * $harga_tot);
                            $disk2      = $disk1 - (($det->disk2 / 100) * $disk1);
                            $disk3      = $disk2 - (($det->disk3 / 100) * $disk2);
                            $subtotal   = ($disk3 - $potongan) * (int)$det->jml;
                            
                            $data_item = [
                                'id_resep'  => $det->id_resep,
                                'id_item'   => $det->id_item,
                                'item'      => $det->item,
                                'harga'     => ($sql_item->status_racikan == '1' ? $harga : $harga_tot),
                                'disk1'     => $det->disk1,
                                'disk2'     => $det->disk2,
                                'disk3'     => $det->disk3,
                                'potongan'  => $det->potongan,
                                'subtotal'  => $subtotal,
                            ];
                            
                            foreach ($sql_res_det_rc as $racikan) {
                                $sql_item_rc  = $this->db->where('id', $racikan->id_item)->get('tbl_m_produk')->row();
                                $harga_rc     = $sql_item_rc->harga_jual;
                                $ass_rc       = ($harga_rc * $sql_pnjm->persen);
                                $harga_tot_rc = ($sql_pnjm->persen != 0 ? $ass_rc : $harga_rc);
                            
                                $subtotal_rc = $harga_tot_rc * (int)$racikan->jml;
                                
                                $data_item_rc = [
                                    'item'      => $sql_item_rc->produk,
                                    'harga'     => $harga_tot_rc,
                                    'subtotal'  => $subtotal_rc,
                                ];
                                
                                # Update isi data di tabel racikan detail beserta perubahan harganya jika ada asuransi
                                $this->db->where('id', $racikan->id)->update('tbl_trans_medcheck_resep_det_rc', $data_item_rc);
                            }
                            
                            # Update isi data di tabel resep beserta perubahan harganya jika ada asuransi
                            $this->db->where('id', $det->id)->update('tbl_trans_medcheck_resep_det', $data_item);
                        }
                    }
                    
                    # Update pada tabel medcheck nya, ubah data sesuai penjamin
                    $this->db->where('id', $sql_medc->id)->update('tbl_trans_medcheck', $data);
                    
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Gagal mengubah data penjamin!");');
                    } else {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Perubahan data penjamin berhasil!");');
                    }
                    
                    redirect(base_url('medcheck/tindakan.php?id='.$id));
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Terjadi kesalahan: '.$e->getMessage().'");');
                    redirect(base_url('medcheck/tindakan.php?id='.$id));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    public function set_medcheck_transfer() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $poli_asl   = $this->input->post('poli_asl');
            $poli_7an   = $this->input->post('poli_7an');
            $dokter     = $this->input->post('dokter');
            $tipe       = $this->input->post('tipe');
            $kamar      = $this->input->post('kamar');
            $kamar_nm   = $this->input->post('kamar_nm');
            $catatan    = $this->input->post('catatan');
            $status     = $this->input->post('status');
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('tipe', 'tipe', 'required');
            
            if ($tipe == '3') {
                $this->form_validation->set_rules('kamar', 'Kamar', 'required');
                $this->form_validation->set_rules('kamar_nm', 'Kamar', 'required');
            }

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'        => form_error('id'),
                    'tipe'      => form_error('tipe'),
                    'kamar'     => form_error('kamar'),
                    'kamar_nm'  => form_error('kamar_nm'),
                ];
                
                $err_kamar      = form_error('kamar');
                $err_kamar_nm   = form_error('kamar_nm');
                if (!empty($err_kamar)) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Pilih kelas perawatan !");');
                }
                if (!empty($err_kamar_nm)) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Nama ruang / kamar harus diisi !");');
                }

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/transfer.php?id='.$id));
            } else {                
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_medc_kmr   = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_kamar');
                
                # Hapus berkas transfer sebelumnya
                $this->db->where('id_medcheck', $sql_medc->id)->delete('tbl_trans_medcheck_trf');
                
                if ($sql_medc_kmr->num_rows() > 0) {
                    $kamar2     = $sql_medc_kmr->row()->id_kamar;
                    $sql_kamar2 = $this->db->where('id', $kamar2)->get('tbl_m_kamar')->row();
                    $jml2       = $sql_kamar2->jml - 1;
                    
                    # Update kamar
                    $this->db->where('id', $kamar2)->update('tbl_m_kamar', ['jml' => $jml2]);
                    
                    # Hapus berkas kamar
                    $this->db->where('id_medcheck', $sql_medc->id)->delete('tbl_trans_medcheck_kamar');
                }
                
                $data = [
                    'id_medcheck'           => $sql_medc->id,
                    'id_user'               => $this->ion_auth->user()->row()->id,
                    'id_pasien'             => $sql_medc->id_pasien,
                    'id_dokter'             => (!empty($dokter) ? $dokter : $sql_medc->id_dokter),
                    'id_poli_asal'          => (!empty($poli_asl) ? $poli_asl : 0),
                    'id_poli_tujuan'        => (!empty($poli_7an) ? $poli_7an : 0),
                    'tipe'                  => $tipe,
                    'tgl_simpan'            => date('Y-m-d H:i:s'),
                    'keterangan'            => 'Transfer Pasien '.general::status_rawat($tipe),
                    'keterangan_perawat'    => $catatan,
                    'status'                => '0',
                ];
                
                $data_medc = [
                    'id_poli'   => (!empty($poli_7an) ? $poli_7an : $sql_medc->id_poli),
                    'id_dokter' => (!empty($dokter) ? $dokter : $sql_medc->id_dokter),
                    'tipe'      => $tipe,
                    'tgl_modif' => date('Y-m-d H:i:s'),
                    'tgl_ranap' => ($tipe == '3' ? date('Y-m-d H:i:s') : '0000-00-00 00:00:00'),
                ];
                
                # Cek tipe rawat
                if ($tipe == '3') {
                    $sql_kamar = $this->db->where('id', $kamar)->get('tbl_m_kamar')->row();
                    $jml = $sql_kamar->jml + 1;
                        
                    if ($sql_kamar->jml <= $sql_kamar->jml_max) {                                              
                        $data_kmr_master = [
                            'tgl_modif' => date('Y-m-d H:i:s'),
                            'jml'       => $jml,
                        ];
                        
                        $data_kmr = [
                            'id_medcheck'=> $sql_medc->id,
                            'id_kamar'   => $sql_kamar->id,
                            'id_pasien'  => $sql_medc->id_pasien,
                            'id_user'    => $this->ion_auth->user()->row()->id,
                            'tgl_simpan' => date('Y-m-d H:i:s'),
                            'kamar'      => $kamar_nm,
                            'keterangan' => 'Transfer Pasien',
                            'status'     => '1',
                        ];

                        $this->db->insert('tbl_trans_medcheck_kamar', $data_kmr);

                        # Update tabel kamar
                        $this->db->where('id', $sql_kamar->id)->update('tbl_m_kamar', $data_kmr_master);
                    } else {
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Kamar sudah penuh !");');
                        redirect(base_url('medcheck/transfer.php?id='.general::enkrip($sql_medc->id)));
                    }                  
                }
                                
                # Masukkan data dokter
                $data_dokter = [
                    'id_medcheck'   => $sql_medc->id,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'id_pasien'     => (!empty($sql_medc->id_pasien) ? $sql_medc->id_pasien : '0'),
                    'id_dokter'     => (!empty($dokter) ? $dokter : '0'),
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'keterangan'    => '',
                    'status'        => '1'
                ];
                
                $this->db->where('id_medcheck', $sql_medc->id)->where('status', '1')->update('tbl_trans_medcheck_dokter', $data_dokter);

                # Update data Medcheck
                $this->db->where('id', $sql_medc->id)->update('tbl_trans_medcheck', $data_medc);
                
                # Inputkan data catatan transfer
                $this->db->insert('tbl_trans_medcheck_trf', $data);
                $last_id = $this->db->insert_id();

                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Pasien berhasil di transfer !");');
                
                redirect(base_url('medcheck/transfer.php?id='.general::enkrip($sql_medc->id).'&trf_id='.general::enkrip($last_id)));
            }
        } else {
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_doc() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $dokter     = $this->input->post('dokter');
            $catatan    = $this->input->post('catatan');
            $status     = $this->input->post('status');
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('anamnesa', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
            } else {
                $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_cek    = $this->db->where('id_medcheck', $sql_medc->id)->where('id_dokter', $dokter)->get('tbl_trans_medcheck_dokter');
                
                $data = [
                    'id_medcheck'   => $sql_medc->id,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'id_pasien'     => $sql_medc->id_pasien,
                    'id_dokter'     => $dokter,
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'keterangan'    => $catatan
                ];
                
                # Cek jika sudah ada nama dokter sama dengan dokter utama tendang
                if ($sql_medc->id_dokter == $dokter) {
                    # Tampilkan bahwa sudah ada value kembar
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$this->ion_auth->user($sql_medc->id_dokter)->row()->first_name.' sudah di atur sebagai dokter utama, silahkan memilih nama lain!");');                    
                } else {
                    # Cek jika sudah ada id_medcheck dan nama dokter yang sama silahkan tendang
                    if ($sql_cek->num_rows() > 0) {
                        # Tampilkan bahwa sudah ada value kembar
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$this->ion_auth->user($dokter)->row()->first_name.' sudah tersimpan sebelumnya, silahkan cek pada daftar dokter!");');
                    } else {
                        try {
                        # Transact SQL
                        $this->db->trans_start();

                        # Masukkan ke tabel medcheck_dokter
                        $this->db->insert('tbl_trans_medcheck_dokter', $data);

                        # Cek status transact MySQL
                        if ($this->db->trans_status() === FALSE) {
                            # Rollback jika gagal
                            $this->db->trans_rollback();

                            # Tampilkan pesan error
                                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data rawat bersama gagal disimpan!");');
                        } else {
                            $this->db->trans_complete();

                            # Tampilkan pesan sukses jika sudah berhasil commit
                                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data rawat bersama disimpan!");');
                            }
                        } catch (Exception $e) {
                            # Rollback jika terjadi exception
                            $this->db->trans_rollback();
                            
                            # Tampilkan pesan error
                            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Error: ' . $e->getMessage() . '");');
                        }
                    }
                }
                
                redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->id).'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_doc_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_item    = $this->input->get('id_item');
            $status     = $this->input->get('status');
            
            if(!empty($id)){
                try {
                    # Transact SQL
                    $this->db->trans_start();
                    
                    # Delete data
                    $this->db->where('id', general::dekrip($id_item))->delete('tbl_trans_medcheck_dokter');
                    
                    # Cek status transact MySQL
                    if ($this->db->trans_status() === FALSE) {
                        # Rollback jika gagal
                        $this->db->trans_rollback();
                        
                        # Tampilkan pesan error
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data dokter gagal dihapus!");');
                    } else {
                        $this->db->trans_complete();
                        
                        # Tampilkan pesan sukses jika sudah berhasil commit
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data dokter berhasil dihapus!");');
                    }
                } catch (Exception $e) {
                    # Rollback jika terjadi exception
                    $this->db->trans_rollback();
                    
                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Error: ' . $e->getMessage() . '");');
                }
            }
            
            redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_update_inv() {
        if (akses::aksesLogin() == TRUE) {
            $id = $this->input->get('id');
            
            try {
                if(!empty($id)) {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    $sql_medc_det_sum = $this->db->select('SUM(subtotal) AS subtotal, SUM(diskon) AS diskon, SUM(potongan) AS potongan')
                                               ->where('id_medcheck', $sql_medc->id)
                                               ->get('tbl_trans_medcheck_det')
                                               ->row();
                    
                    $jml_total   = $sql_medc_det_sum->subtotal + $sql_medc_det_sum->potongan;
                    $jml_diskon  = $sql_medc_det_sum->potongan;
                    
                    $data = [
                        'jml_total'    => $jml_total,
                        'jml_diskon'   => $jml_diskon,
                        'jml_subtotal' => $sql_medc_det_sum->subtotal,
                        'jml_gtotal'   => $sql_medc_det_sum->subtotal,
                    ];
                    $this->db->where('id', $sql_medc->id)->update('tbl_trans_medcheck', $data);
                    
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Transaksi berhasil di proses!");');
                    redirect(base_url('medcheck/invoice/bayar.php?id='.$id));
                }
            } catch (Exception $e) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Error: ' . $e->getMessage() . '");');
                redirect(base_url('medcheck'));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_proses(){
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $status     = $this->input->post('status');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('anamnesa', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id));
            } else {
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_medc_det   = $this->db->select('SUM(potongan) AS potongan, SUM(diskon) AS diskon, SUM(subtotal) AS subtotal')->where('id_medcheck', $sql_medc->id)->where('status_pkt', '0')->get('tbl_trans_medcheck_det')->row();   
                $sql_medc_det2  = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_det')->result(); 
                $sql_poin       = $this->db->where('id_pasien', $sql_medc->id_pasien)->get('tbl_m_pasien_poin'); 
                $pengaturan     = $this->db->get('tbl_pengaturan')->row();
                

                $nomer          = $this->db->where('MONTH(tgl_simpan)', date('m'))->where('YEAR(tgl_simpan)', date('Y'))->get('tbl_trans_medcheck')->num_rows() + 1;
                $no_nota        = 'INV/'.date('Y').'/'.date('m').'/'.sprintf('%05d', $nomer);
                
                $jml_total      = $sql_medc_det->subtotal + $sql_medc_det->potongan + $sql_medc_det->diskon;
                $jml_pot        = $sql_medc_det->potongan;
                $jml_diskon     = $sql_medc_det->diskon;
                $diskon         = ($jml_total > 0) ? (($jml_diskon / $jml_total) * 100) : 0;
                $jml_subtotal   = $sql_medc_det->subtotal;
                $ppn            = $pengaturan->ppn;
                $jml_ppn        = $pengaturan->ppn;
                $jml_gtotal     = ceil($sql_medc_det->subtotal);
                
                $data = [
                    'tgl_modif'     => date('Y-m-d H:i:s'),
                    'no_nota'       => $no_nota,
                    'jml_total'     => (float)$jml_total,
                    'jml_diskon'    => (float)$jml_diskon,
                    'diskon'        => ($diskon > 1 ? (float)round($diskon, 2) : '0'),
                    'jml_potongan'  => (float)$jml_pot,
                    'jml_subtotal'  => (float)$jml_subtotal,
                    'jml_gtotal'    => (float)$jml_subtotal,
                    'status'        => '5',
                ];
                
                # Transactional Database
                $this->db->trans_begin();
                
                try {
                    // Get form ID and check for double submission
                    $form_id = $this->input->post('form_id');
                    if (check_form_submitted($form_id)) {
                        throw new Exception('Form sudah disubmit sebelumnya!');
                    }

                    if(empty($sql_medc_det->subtotal)){
                        throw new Exception('Tidak ada item yang di posting');
                    }

                    # Kueri MySQL tulis disini
                    if($sql_medc->status < 5){
                        # Update data nota dll
                        $this->db->where('id', general::dekrip($id))->update('tbl_trans_medcheck', $data);           
                        
                        foreach ($sql_medc_det2 as $medc_det) {
                            $sql_item        = $this->db->where('id', $medc_det->id_item)->get('tbl_m_produk')->row();
                            $sql_item_ref    = $this->db->where('id_produk', $sql_item->id)->get('tbl_m_produk_ref');   
                            $sql_satuan      = $this->db->where('id', $sql_item->id_satuan)->get('tbl_m_satuan')->row();
                            $sql_gudang      = $this->db->where('status', '1')->get('tbl_m_gudang')->row();         # Cek gudang aktif dari gudang utama
        
                            
                            # Item racikan kumpulkan dahulu disini
                            if(!empty($medc_det->resep)) {
                                foreach (json_decode($medc_det->resep) as $rc) {
                                    $sql_item_rc          = $this->db->where('id', $rc->id_item)->get('tbl_m_produk')->row();
                                    $sql_gudang_stok_rc   = $this->db->where('id_gudang', $sql_gudang->id)->where('id_produk', $sql_item_rc->id)->get('tbl_m_produk_stok')->row();


                                    # Cek resep Item stockable atau tidak ? 
                                    if($sql_item_rc->status_subt == '1') {
                                        $jml_akhir_rc         = $sql_item_rc->jml - $rc->jml;
                                        $jml_akhir_rc_stk     = $sql_gudang_stok_rc->jml - $rc->jml;
                                        
                                        # Check if stock is sufficient
                                        if ($jml_akhir_rc_stk < 0) {
                                            $this->db->trans_rollback();
                                            throw new Exception("Stok tidak mencukupi untuk item racikan ".$sql_item_rc->produk.". Stok tersedia: ".$sql_gudang_stok_rc->jml);
                                        }
                                        
                                        $data_item_rc = [
                                            'tgl_modif'  => date('Y-m-d H:i:s'),
                                            'jml'        => $jml_akhir_rc, 
                                        ];
                                        
                                        $data_item_rc_stk = [
                                            'tgl_modif'  => date('Y-m-d H:i:s'),
                                            'jml'        => $jml_akhir_rc_stk,
                                        ];
                                        
                                        $data_stok_trace_rc = [
                                            'tgl_simpan'        => date('Y-m-d H:i:s'),
                                            'tgl_masuk'         => $sql_medc->tgl_masuk,
                                            'id_medcheck'       => $sql_medc->id,
                                            'id_medcheck_det'   => $rc->id, 
                                            'id_gudang'         => $sql_gudang->id, 
                                            'id_item'           => $sql_item_rc->id,
                                            'item'              => $sql_item_rc->produk,
                                            'stok_awal'         => $sql_gudang_stok_rc->jml, 
                                            'jml'               => $rc->jml, 
                                            'stok_akhir'        => $jml_akhir_rc_stk, 
                                            'keterangan'        => 'Racikan',
                                            'status'            => $sql_item_rc->status,
                                        ];
                                        
                                        $data_penj_hist_rc = [
                                            'tgl_simpan'    => date('Y-m-d H:i:s'),
                                            'tgl_masuk'     => $sql_medc->tgl_masuk,
                                            'id_gudang'     => $sql_gudang->id,
                                            'id_pelanggan'  => $sql_medc->id_pasien,
                                            'id_produk'     => $sql_item_rc->id,
                                            'id_user'       => $this->ion_auth->user()->row()->id,
                                            'id_penjualan'  => $sql_medc->id,
                                            'no_nota'       => $no_nota,
                                            'kode'          => $sql_item_rc->kode,
                                            'produk'        => $sql_item_rc->produk,
                                            'keterangan'    => $sql_medc->pasien.' - RACIKAN',
                                            'jml'           => (int)$rc->jml,
                                            'jml_satuan'    => (int)$sql_satuan->jml,
                                            'satuan'        => $sql_satuan->satuanTerkecil,
                                            'nominal'       => (float)$rc->harga,
                                            'status'        => '4'
                                        ];
                                            
                                        # Simpan ke tabel riwayat produk
                                        $this->db->insert('tbl_m_produk_hist', $data_penj_hist_rc);
                                        
                                        # Simpan ke tabel stok produk trace
                                        $this->db->insert('tbl_trans_medcheck_stok', $data_stok_trace_rc);
                                    }
                                }
                            }                      
                            # -- END OF RACIKAN
                            
                            # Cek Item Produk non resep stockable
                            if($sql_item->status_subt == '1') {
                                $sql_gudang_stok = $this->db->select('SUM(jml) AS jml')->where('id_produk', $sql_item->id)->get('tbl_m_produk_stok')->row();
                                $jml_akhir       = $sql_item->jml - $medc_det->jml;
                                $jml_akhir_stk   = $sql_gudang_stok->jml - $medc_det->jml;

                                # Check if stock is sufficient
                                if ($jml_akhir_stk < 0) {
                                    $this->db->trans_rollback();
                                    throw new Exception("Stok tidak mencukupi untuk item ".$medc_det->item.". Stok tersedia: ".$sql_gudang_stok->jml);
                                }
                                                    
                                $data_item = [
                                    'tgl_modif'  => date('Y-m-d H:i:s'),
                                    'jml'        => $jml_akhir,     # ($jml_akhir < 0 ? 0 : (int) $jml_akhir)
                                ];
                                                    
                                $data_item_stk = [
                                    'tgl_modif'  => date('Y-m-d H:i:s'),
                                    'jml'        => $jml_akhir_stk, # ($jml_akhir < 0 ? 0 : (int) $jml_akhir)
                                ];
                                                    
                                $data_stok_trace = [
                                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                                    'tgl_masuk'         => $sql_medc->tgl_masuk,
                                    'id_medcheck'       => $sql_medc->id,
                                    'id_medcheck_det'   => $medc_det->id, 
                                    'id_gudang'         => $sql_gudang->id, 
                                    'id_item'           => $sql_item->id, 
                                    'item'              => $sql_item->produk, 
                                    'stok_awal'         => $sql_gudang_stok->jml, 
                                    'jml'               => $medc_det->jml, 
                                    'stok_akhir'        => $jml_akhir_stk, 
                                    'status'            => $sql_item->status, 
                                ];
                                
                                $data_penj_hist = [
                                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                                    'tgl_masuk'     => $sql_medc->tgl_masuk,
                                    'id_gudang'     => $sql_gudang->id,
                                    'id_pelanggan'  => $sql_medc->id_pasien,
                                    'id_produk'     => $sql_item->id,
                                    'id_user'       => $this->ion_auth->user()->row()->id,
                                    'id_penjualan'  => $sql_medc->id,
                                    'no_nota'       => $no_nota,
                                    'kode'          => $sql_item->kode,
                                    'produk'        => $sql_item->produk,
                                    'keterangan'    => $sql_medc->pasien,
                                    'jml'           => (int)$medc_det->jml,
                                    'jml_satuan'    => (int)$sql_satuan->jml,
                                    'satuan'        => $sql_satuan->satuanTerkecil,
                                    'nominal'       => (float)$medc_det->harga,
                                    'status'        => '4'
                                ];
                                
                                # Simpan ke tabel riwayat produk
                                $this->db->insert('tbl_m_produk_hist', $data_penj_hist);
                                
                                # Simpan ke tabel stok produk trace
                                $this->db->insert('tbl_trans_medcheck_stok', $data_stok_trace);
                            }                      
                            # -- END OF ITEM
                            
                            # Jika punya refrensi item, maka jabarkan dulu
                            if($sql_item_ref->num_rows() > 0) {
                                foreach ($sql_item_ref->result() as $reff) {
                                    $sql_item_rf        = $this->db->where('id', $reff->id_produk_item)->get('tbl_m_produk')->row();
                                    $sql_item_sat_rf    = $this->db->where('id', $reff->id_satuan)->get('tbl_m_satuan')->row();
                                    $sql_gudang_stok    = $this->db->where('id_gudang', $sql_gudang->id)->where('id_produk', $sql_item_rf->id)->get('tbl_m_produk_stok')->row();
                                    $rf_subtot          = $sql_item_rf->harga_jual * $reff->jml;
                                
                                    # Cek apakah stockabel
                                    if($sql_item_rf->status_subt == '1') {
                                        $jml_akhir_reff     = $sql_item_rf->jml - ($reff->jml * $medc_det->jml);
                                        $jml_akhir_reff_stk = $sql_gudang_stok->jml - ($reff->jml * $medc_det->jml);
                                
                                        // Check if stock is sufficient
                                        if ($jml_akhir_reff_stk < 0) {
                                            // Rollback transaction
                                            $this->db->trans_rollback();
                                            
                                            // Throw exception with error message
                                            throw new Exception("Stok tidak mencukupi untuk item referensi {$sql_item_rf->produk}. Stok tersedia: {$sql_gudang_stok->jml}");
                                        }

                                        $data_item_reff = [
                                            'tgl_modif'  => date('Y-m-d H:i:s'),
                                            'jml'        => $jml_akhir_reff
                                        ];
                                
                                        $data_item_reff_stk = [
                                            'tgl_modif'  => date('Y-m-d H:i:s'),
                                            'jml'        => $jml_akhir_reff_stk
                                        ];
                                        
                                        $data_stok_trace_rf = [
                                            'tgl_simpan'        => date('Y-m-d H:i:s'),
                                            'tgl_masuk'         => $sql_medc->tgl_masuk,
                                            'id_medcheck'       => $sql_medc->id,
                                            'id_medcheck_det'   => $medc_det->id, 
                                            'id_gudang'         => $sql_gudang_stok->id_gudang, 
                                            'id_item'           => $sql_item_rf->id,
                                            'item'              => $sql_item_rf->produk, 
                                            'stok_awal'         => $sql_gudang_stok->jml, 
                                            'jml'               => ($reff->jml * $medc_det->jml), 
                                            'stok_akhir'        => $jml_akhir_reff_stk,
                                            'keterangan'        => 'Reff',
                                            'status'            => $sql_item_rf->status,
                                        ];
                                                                        
                                        $data_penj_hist_rf = [
                                            'tgl_simpan'    => date('Y-m-d H:i:s'),
                                            'tgl_masuk'     => $sql_medc->tgl_masuk,
                                            'id_gudang'     => $sql_gudang->id,
                                            'id_pelanggan'  => $sql_medc->id_pasien,
                                            'id_produk'     => $sql_item_rf->id,
                                            'id_user'       => $this->ion_auth->user()->row()->id,
                                            'id_penjualan'  => $sql_medc->id,
                                            'no_nota'       => $no_nota,
                                            'kode'          => $sql_item_rf->kode,
                                            'produk'        => $sql_item_rf->produk,
                                            'keterangan'    => $sql_medc->pasien.' - REFERENCE ITEM',
                                            'jml'           => (int)($reff->jml * $medc_det->jml),
                                            'jml_satuan'    => (int)$sql_satuan->jml,
                                            'satuan'        => $sql_satuan->satuanTerkecil,
                                            'nominal'       => (float)$medc_det->harga,
                                            'status'        => '4'
                                        ];
                                        
                                        $data_det = [
                                            'tgl_simpan'    => date('Y-m-d H:i:s'),
                                            'tgl_modif'     => date('Y-m-d H:i:s'),
                                            'tgl_masuk'     => $sql_medc->tgl_masuk,
                                            'id_medcheck'   => (int)$sql_medc->id,
                                            'id_item'       => (int)$sql_item_rf->id,
                                            'id_item_kat'   => (int)$sql_item_rf->id_kategori,
                                            'id_item_sat'   => (int)$sql_item_rf->id_satuan,
                                            'id_user'       => (int)$this->ion_auth->user()->row()->id,
                                            'id_dokter'     => (int)$sql_medc->id_dokter,
                                            'kode'          => $sql_item_rf->kode,
                                            'item'          => $sql_item_rf->produk,
                                            'jml'           => (int)$reff->jml,
                                            'jml_satuan'    => $sql_item_sat_rf->jml, 
                                            'harga'         => $sql_item_rf->harga,
                                            'subtotal'      => $rf_subtot,
                                            'satuan'        => $sql_item_sat_rf->satuanBesar,
                                            'status'        => (!empty($status_itm) ? $status_itm : $sql_item->status),
                                            'status_pkt'    => '1',
                                        ];  
                                        
                                        # Simpan te tabel riwayat produk
                                        $this->db->insert('tbl_trans_medcheck_det', $data_det);
                                        
                                        # Simpan te tabel riwayat produk
                                        $this->db->insert('tbl_m_produk_hist', $data_penj_hist_rf);
                                
                                        # Simpan ke tabel stok produk trace
                                        $this->db->insert('tbl_trans_medcheck_stok', $data_stok_trace_rf);
                                    }
                                }
                            }
                            
                            # Kalau remun tidak kosong, maka lakukan simpan
                            # Remun untuk menghitung pendapatan dokter                        
                            if($sql_item->remun_tipe > 0) {
                                # Cek Remun (lab atau radiologi)
                                if($sql_item->status == '5') {
                                    $sql_rad    = $this->db->where('id', $medc_det->id_rad)->get('tbl_trans_medcheck_rad')->row();
                                    $dokter     = (!empty($sql_rad->id_dokter) ? $sql_rad->id_dokter : $medc_det->id_dokter); 
                                } else {
                                    $dokter     = $medc_det->id_dokter; 
                                }
                                
                                $sql_cek_remun = $this->db
                                                    ->where('id_medcheck', $sql_medc->id)
                                                    ->where('id_medcheck_det', $medc_det->id)
                                                    ->where('id_dokter', $medc_det->id_dokter)
                                                    ->where('id_item', $sql_item->id)
                                                    ->get('tbl_trans_medcheck_remun');
                                
                                # Tentukan remun tipenya dan hitung total remunnya
                                $remun      = ($sql_item->remun_tipe == '2' ? $sql_item->remun_nom : (($sql_item->remun_perc / 100) * $medc_det->harga));
                                $remun_tot  = $remun * $medc_det->jml;
                                
                                $data_remun = [
                                    'id_medcheck'       => (int)$sql_medc->id,
                                    'id_medcheck_det'   => (int)$medc_det->id,
                                    'id_dokter'         => (int)$dokter,
                                    'id_item'           => (int)$sql_item->id,
                                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                                    'item'              => $sql_item->produk,
                                    'harga'             => (float)$medc_det->harga,
                                    'jml'               => (float)$medc_det->jml,
                                    'remun_perc'        => (float)$sql_item->remun_perc,
                                    'remun_nom'         => (float)$sql_item->remun_nom,
                                    'remun_tipe'        => (int)$sql_item->remun_tipe,
                                    'remun_subtotal'    => (float)$remun_tot,
                                ];

                                # Cek jika ada tidak ada value kembar
                                if($sql_cek_remun->num_rows() == 0) {
                                    # Simpan ke tabel Remun
                                    $this->db->insert('tbl_trans_medcheck_remun', $data_remun);
                                }
                            }
                            
                            # Kalau apresiasi tidak kosong, maka lakukan simpan
                            # Apresiasi untuk menghitung pendapatan dari lab
                            if($sql_item->apres_tipe > 0) {
                                # Cek Apresiasi asas (lab atau radiologi)
                                if(!empty($medc_det->id_rad)) {
                                    $sql_rad    = $this->db->where('id', $medc_det->id_rad)->get('tbl_trans_medcheck_rad')->row();
                                    $dokter     = (!empty($sql_rad->id_dokter_kirim) ? $sql_rad->id_dokter_kirim : $medc_det->id_dokter); 
                                } elseif(!empty($medc_det->id_lab)) {
                                    $sql_lab    = $this->db->where('id', $medc_det->id_lab)->get('tbl_trans_medcheck_lab')->row();
                                    $dokter     = (!empty($sql_lab->id_dokter) ? $sql_lab->id_dokter : $medc_det->id_dokter);                                
                                } else {
                                    $dokter     = $medc_det->id_dokter; 
                                }
                                
                                
                                $sql_cek_apres = $this->db
                                                    ->where('id_medcheck', $sql_medc->id)
                                                    ->where('id_medcheck_det', $medc_det->id)
                                                    ->where('id_dokter', $medc_det->id_dokter)
                                                    ->where('id_item', $sql_item->id)
                                                    ->get('tbl_trans_medcheck_apres');
                                
                                # Tentukan apresiasi tipenya dan hitung total remunnya
                                $apres      = ($sql_item->apres_tipe == '2' ? $sql_item->apres_nom : (($sql_item->apres_perc / 100) * $medc_det->harga));
                                $apres_tot  = $apres * $medc_det->jml;
                                
                                $data_apres = [
                                    'id_medcheck'       => (int)$sql_medc->id,
                                    'id_medcheck_det'   => (int)$medc_det->id,
                                    'id_dokter'         => (int)$dokter,
                                    'id_item'           => (int)$sql_item->id,
                                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                                    'item'              => $sql_item->produk,
                                    'harga'             => (float)$medc_det->harga,
                                    'jml'               => (float)$medc_det->jml,
                                    'apres_perc'        => (float)$sql_item->apres_perc,
                                    'apres_nom'         => (float)$sql_item->apres_nom,
                                    'apres_tipe'        => (int)$sql_item->apres_tipe,
                                    'apres_subtotal'    => (float)$apres_tot,
                                ];
                                
                                # Cek jika ada tidak ada value kembar
                                if($sql_cek_apres->num_rows() == 0) {
                                    # Simpan ke tabel Apres
                                    $this->db->insert('tbl_trans_medcheck_apres', $data_apres);
                                }
                            }
                        }
                        
                        # Setelah semua proses tersimpan, saat nya mengurangi stok
                        # Ambil data dari tabel tracer stok sementara
                        $sql_medc_stok = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_stok')->result();
                        
                        foreach ($sql_medc_stok as $stok){
                            # Ambil data stok dari item dari gudang dan item terkait
                            $sql_gudang_stok = $this->db->where('id_gudang', $stok->id_gudang)
                                                        ->where('id_produk', $stok->id_item)
                                                        ->get('tbl_m_produk_stok')
                                                        ->row();
                            
                            # Hitung ulang secara live, stok saat ini dikurangi stok yang keluar
                            $stok_akhir = $sql_gudang_stok->jml - $stok->jml;

                            # Check if stock is sufficient
                            if ($stok_akhir < 0) {
                                $this->db->trans_rollback();
                                throw new Exception("Stok tidak mencukupi untuk item ".$stok->item.". Stok tersedia: {$sql_gudang_stok->jml}");
                            }
                            
                            # Kumpulkan informasi pengurangan stok disini
                            $data_stok = [
                                'tgl_modif' => date('Y-m-d H:i:s'),
                                'jml'       => $stok_akhir
                            ];
                            
                            # Simpan stok akhir ke tabel gudang,update stok nya
                            $this->db->where('id', $sql_gudang_stok->id)->update('tbl_m_produk_stok', $data_stok);
                            
                            # Kumpulkan informasi pengurangan stok pada tabel tracer stok disini
                            $data_stok_trace = [
                                'stok_awal'     => $sql_gudang_stok->jml,
                                'stok_akhir'    => $stok_akhir
                            ];
                            
                            # Update pada tabel tracer stok nya
                            $this->db->where('id', $stok->id)->update('tbl_trans_medcheck_stok', $data_stok_trace);
                            
                            # Sinkronkan stok atas dan bawah, kemudian jumlahkan dengan sum dan catat sementara
                            $stok_glob = $this->db->select_sum('jml')
                                                ->where('id_produk', $stok->id_item)
                                                ->get('tbl_m_produk_stok')
                                                ->row();
                            
                            # Stok atas bawah yang sinkron, catat disini
                            $data_stok_glob = [
                                'tgl_modif' => date('Y-m-d H:i:s'),
                                'jml'       => $stok_glob->jml
                            ];
                            
                            # Simpan stok akhir global ke tabel master item utama
                            $this->db->where('id', $stok->id_item)->update('tbl_m_produk', $data_stok_glob);
                        }

                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Transaksi berhasil di proses!");');
                    }else{
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Transaksi sudah pernah di proses!");');
                    }
                    
                    # Poin Pasien
                    if($sql_poin->num_rows() == 0){
                                $data_poin = [
                                    'id_pasien'     => $sql_medc->id_pasien,
                                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                                    'tgl_modif'     => date('Y-m-d H:i:s'),
                                    'jml_poin'      => 0,
                                    'jml_poin_nom'  => 0,
                                    'status'        => 1,
                                ];
                        
                        $this->db->insert('tbl_m_pasien_poin', $data_poin);
                    }
                    
                    if ($this->db->trans_status() === FALSE) {
                        # Rollback transaction if any query failed
                        $this->db->trans_rollback();

                        // Return JSON response for failure
                        header('Content-Type: application/json');
                        echo json_encode(['status' => 'error', 'message' => 'Transaksi gagal di proses: Database error']);
                        exit;
                    } else {
                        # Commit the transaction if all queries were executed successfully
                        $this->db->trans_commit();

                        // Return JSON response for success
                        header('Content-Type: application/json');
                        echo json_encode(['status' => 'success', 'message' => 'Transaksi berhasil di proses']);
                        exit;
                    }
                } catch (Exception $e) {
                    # Rollback
                    $this->db->trans_rollback();
                    
                    // Return JSON response for exception
                    header('Content-Type: application/json');
                    echo json_encode(['status' => 'error', 'message' => '<b>Transaksi gagal:</b><br/>' . $e->getMessage()]);
                    exit;
                }            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login', '<div class="alert alert-danger">Authentifikasi gagal, silahkan login ulang!!</div>');
            redirect();
        }
    }
    public function set_medcheck_proses_batal(){
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $status     = $this->input->post('status');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('anamnesa', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id));
            } else {
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_medc_det   = $this->db->select('SUM(potongan) AS potongan, SUM(diskon) AS diskon, SUM(subtotal) AS subtotal')->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_det')->row();   
                $sql_medc_det2  = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_det')->result(); 
                $pengaturan     = $this->db->get('tbl_pengaturan')->row();
                
                $jml_total      = $sql_medc_det->subtotal + $sql_medc_det->potongan + $sql_medc_det->diskon;
                
                $data = [
                    'tgl_modif'     => date('Y-m-d H:i:s'),
                    'jml_total'     => $jml_total,
                    'jml_potongan'  => 0,
                    'jml_diskon'    => 0,
                    'diskon'        => 0,
                    'jml_subtotal'  => 0,
                    'jml_gtotal'    => 0,
                    'status'        => '2',
                ];
                
                try {
                    # Begin transaction
                    $this->db->trans_begin();
                
                # Update data nota dll
                $this->db->where('id', general::dekrip($id))->update('tbl_trans_medcheck', $data);         
                  
                foreach ($sql_medc_det2 as $medc_det){
                      $sql_item        = $this->db->where('id', $medc_det->id_item)->get('tbl_m_produk')->row();
                      $sql_item_ref    = $this->db->where('id_produk', $sql_item->id)->get('tbl_m_produk_ref');   
                      $sql_satuan      = $this->db->where('id', $sql_item->id_satuan)->get('tbl_m_satuan')->row();
                      $sql_gudang      = $this->db->where('status', '1')->get('tbl_m_gudang')->row();    // Cek gudang aktif dari gudang utama

                      
                      # Item racikan kumpulkan dahulu disini
                      if(!empty($medc_det->resep)){                          
                          foreach (json_decode($medc_det->resep) as $rc){
                              $sql_item_rc          = $this->db->where('id', $rc->id_item)->get('tbl_m_produk')->row();
                                  $sql_gudang_stok_rc   = $this->db->where('id_gudang', $sql_gudang->id)->where('id_produk', $sql_item_rc->id)->get('tbl_m_produk_stok')->row();
                              
                              # Cek resep Item stockable atau tidak ? 
                              if($sql_item_rc->status_subt == '1'){
                                  $jml_akhir_rc         = $sql_item_rc->jml + $rc->jml;
                                  $jml_akhir_stk        = $sql_gudang_stok_rc->jml + $rc->jml;
                                  
                                      $data_item_rc = [
                                      'tgl_modif'  => date('Y-m-d H:i:s'),
                                      'jml'        => ($jml_akhir_rc < 0 ? 0 : (int) $jml_akhir_rc)
                                      ];
                                  
                                  # Hapus ke tabel riwayat produk
                                  $this->db->where('id_penjualan', $sql_medc->id)->where('id_produk', $sql_item_rc->id)->delete('tbl_m_produk_hist');
                                  
                              }
                          }
                      }                      
                      # -- END OF RACIKAN
                      
                      # Cek Item Produk non resep stockable
                      if($sql_item->status_subt == '1'){
                            $sql_gudang_stok = $this->db->where('id_gudang', $sql_gudang->id)->where('id_produk', $sql_item->id)->get('tbl_m_produk_stok')->row();
                            $jml_akhir       = $sql_item->jml + $medc_det->jml;
                            $jml_akhir_stk   = $sql_gudang_stok->jml + $medc_det->jml;
                                                
                                $data_item = [
                                'tgl_modif'  => date('Y-m-d H:i'),
                                'jml'        => ($jml_akhir < 0 ? 0 : (int) $jml_akhir)
                                ];
                                                
                                $data_item_stk  = [
                                'tgl_modif'  => date('Y-m-d H:i'),
                                'jml'        => ($jml_akhir_stk < 0 ? 0 : (int) $jml_akhir_stk)
                                ];
                            
                            # Hapus ke tabel riwayat produk
                            $this->db->where('id_penjualan', $sql_medc->id)->where('id_produk', $sql_item->id)->delete('tbl_m_produk_hist');
                      }                      
                      # -- END OF ITEM
                      
                      # Jika punya refrensi item, maka jabarkan dulu
                        if($sql_item_ref->num_rows() > 0){
                            foreach ($sql_item_ref->result() as $reff){
                                $sql_item_rf      = $this->db->where('id', $reff->id_produk_item)->get('tbl_m_produk')->row();
                                $sql_gudang_stok  = $this->db->where('id_gudang', $sql_gudang->id)->where('id_produk', $sql_item_rf->id)->get('tbl_m_produk_stok')->row();
                              
                                # Cek apakah stockabel
                                if($sql_item_rf->status_subt == '1'){
                                    $jml_akhir_reff   = $sql_item_rf->jml + ($reff->jml * $medc_det->jml);
                              
                                        $data_item_reff = [
                                        'tgl_modif'  => date('Y-m-d H:i:s'),
                                        'jml'        => $jml_akhir_reff
                                        ];
                                    
                                    # Hapus te tabel riwayat produk
                                    $this->db->where('id_penjualan', $sql_medc->id)->where('id_produk', $sql_item_rf->id)->delete('tbl_m_produk_hist');
                                }
                            }
                        }
                }
                
                # Ambil data dari tabel trace
                $sql_medc_stok = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_stok')->result();
                
                foreach ($sql_medc_stok as $stok){
                    $sql_gudang_stok    = $this->db->where('id_gudang', $stok->id_gudang)->where('id_produk', $stok->id_item)->get('tbl_m_produk_stok')->row();
                    $stok_akhir         = $sql_gudang_stok->jml + $stok->jml;
                    
                        $data_stok = [
                        'tgl_modif' => date('Y-m-d H:i:s'),
                        'jml'       => $stok_akhir
                        ];
                    
                    # Simpan stok akhir ke tabel gudang
                    $this->db->where('id', $sql_gudang_stok->id)->update('tbl_m_produk_stok', $data_stok);
                    $stok_glob = $this->db->select_sum('jml')->where('id_produk', $stok->id_item)->get('tbl_m_produk_stok')->row();
                    
                        $data_stok_glob = [
                        'tgl_modif' => date('Y-m-d H:i:s'),
                        'jml'       => $stok_glob->jml
                        ];
                    
                    # Simpan stok akhir global ke tabel master item
                    $this->db->where('id', $stok->id_item)->update('tbl_m_produk', $data_stok_glob);
                }
                
                # Hapus catatan riwayat stok
                $this->db->where('id_medcheck', $sql_medc->id)->delete('tbl_trans_medcheck_stok');
                
                # Hapus Remun
                $this->db->where('id_medcheck', $sql_medc->id)->delete('tbl_trans_medcheck_remun');
                
                # Hapus Apres
                $this->db->where('id_medcheck', $sql_medc->id)->delete('tbl_trans_medcheck_apres'); 
                
                # Hapus Paket
                $this->db->where('id_medcheck', $sql_medc->id)->where('status_pkt', '1')->delete('tbl_trans_medcheck_det'); 
                
                    # Complete transaction
                if ($this->db->trans_status() === FALSE) {
                        # Rollback transaction
                    $this->db->trans_rollback();
                        throw new Exception("Terjadi kesalahan dalam proses pembatalan transaksi");
                    } else {
                        # Commit transaction
                    $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Transaksi berhasil dibatalkan!");');
                    }
                     
                } catch (Exception $e) {
                    # Ensure rollback if exception occurs
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Transaksi gagal dibatalkan: ' . $e->getMessage() . '");');
                }
                
                redirect(base_url('medcheck/tindakan.php?id='.general::enkrip($sql_medc->id)));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    public function set_medcheck_proses_farm() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_resep   = $this->input->post('id_resep');
            $status     = $this->input->post('status');
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('anamnesa', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id));
            } else {
                try {
                    // Get form ID and check for double submission
                    $form_id = $this->input->post('form_id');
                    if (check_form_submitted($form_id)) {
                        throw new Exception('Form sudah disubmit sebelumnya!');
                    }
                    
                    $sql_medc        = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
                    $sql_medc_resep  = $this->db->where('id_medcheck', general::dekrip($id))->where('id_resep', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep_det');
                
                    // Cek Barang Form
                    if($sql_medc_resep->num_rows() > 0){
                        # Begin transaction
                        $this->db->trans_begin();
                    
                        # Delete Resep
                        $this->db->where('id_resep', general::dekrip($id_resep))->delete('tbl_trans_medcheck_det');
                        
                        foreach ($sql_medc_resep->result() as $cart){
                            $sql_racikan    = $this->db->select('SUM(subtotal) AS harga')->where('id_resep_det', $cart->id)->get('tbl_trans_medcheck_resep_det_rc')->row();
                            $sql_racikan_det= $this->db->where('id_resep_det', $cart->id)->get('tbl_trans_medcheck_resep_det_rc');
                            $harga          = $cart->harga;
                            $subtotal       = ($cart->jml * $cart->harga);
                            
                                $data_res_det = [
                                    'id_medcheck'   => (int)$cart->id_medcheck,
                                    'id_resep'      => (int)$cart->id_resep,
                                    'id_item'       => (int)$cart->id_item,
                                    'id_item_kat'   => (int)$cart->id_item_kat,
                                    'id_item_sat'   => (int)$cart->id_item_sat,
                                    'id_user'       => (int)$cart->id_user,
                                    'tgl_simpan'    => $cart->tgl_simpan,
                                    'tgl_modif'     => date('Y-m-d H:i:s'),
                                    'kode'          => $cart->kode,
                                    'item'          => $cart->item,
                                    'dosis'         => $cart->dosis,
                                    'dosis_ket'     => $cart->dosis_ket,
                                    'keterangan'    => $cart->keterangan,
                                    'harga'         => (float)$harga,
                                    'jml'           => (float)$cart->jml,
                                    'jml_satuan'    => (int)$cart->jml_satuan,
                                    'subtotal'      => (float)$subtotal,
                                    'satuan'        => $cart->satuan,
                                    'status_pj'     => $cart->status_pj,
                                    'status'        => '4',
                                ];
                            
                            # Simpan Resep
                            $this->db->insert('tbl_trans_medcheck_det', $data_res_det);
                            
                            # Obat racikan
                            if($sql_racikan_det->num_rows() > 0){
                                foreach ($sql_racikan_det->result() as $rc){
                                        $data_rc_det = [
                                            'id_medcheck'       => (int)$rc->id_medcheck,
                                            'id_resep'          => (int)$rc->id_resep,
                                            'id_resep_det'      => (int)$cart->id,
                                            'id_resep_det_rc'   => (int)$rc->id,
                                            'id_item'           => (int)$rc->id_item,
                                            'id_item_kat'       => (int)$rc->id_item_kat,
                                            'id_item_sat'       => (int)$rc->id_item_sat,
                                            'id_user'           => (int)$rc->id_user,
                                            'tgl_simpan'        => $rc->tgl_simpan,
                                            'tgl_modif'         => date('Y-m-d H:i:s'),
                                            'kode'              => $rc->kode,
                                            'item'              => $rc->item,
                                            'dosis'             => $rc->dosis,
                                            'dosis_ket'         => $rc->dosis_ket,
                                            'resep'             => $rc->resep,
                                            'harga'             => (float)$rc->harga,
                                            'jml'               => (float)$rc->jml,
                                            'jml_satuan'        => (int)$rc->jml_satuan,
                                            'subtotal'          => (float)$rc->subtotal,
                                            'satuan'            => $rc->satuan,
                                            'status_pj'         => $rc->status_pj,
                                            'status'            => '4',
                                            'status_rc'         => '1',
                                        ];
                                    
                                    $this->db->insert('tbl_trans_medcheck_det', $data_rc_det);
                                }
                            }
                        }

                        # Update Resep
                        $this->db->where('id', general::dekrip($id_resep))->update('tbl_trans_medcheck_resep', ['tgl_keluar'=>date('Y-m-d H:i:s'),'status'=>'4']);
                        $this->db->where('id', $sql_medc->row()->id)->update('tbl_trans_medcheck', ['tgl_resep_klr'=>date('Y-m-d H:i:s')]);
                        
                        # Check transaction status
                        if ($this->db->trans_status() === FALSE) {
                            $this->db->trans_rollback();
                            throw new Exception("Terjadi kesalahan saat memproses resep");
                        } else {
                            $this->db->trans_commit();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.success("Resep berhasil di proses");');
                        }
                    } else {
                        throw new Exception("Data resep tidak ditemukan");
                    }
                } catch (Exception $e) {
                    // Rollback transaction if it's active
                    if ($this->db->trans_status() !== FALSE) {
                        $this->db->trans_rollback();
                    }
                    
                    // Set error message
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                }
                
                redirect(base_url('medcheck/tambah.php?act=res_input&id='.$id.'&id_resep='.$id_resep.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_proses_farm_batal() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_resep   = $this->input->post('id_resep');
            $status     = $this->input->post('status');
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'        => form_error('id'),
                );

                $this->session->set_flashdata('anamnesa', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id));
            } else {
                $sql_medc_resep  = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_resep_det');
                
                // Cek Barang Form
                if($sql_medc_resep->num_rows() > 0){
                    crud::delete('tbl_trans_medcheck_det','id_resep', general::dekrip($id_resep));
//                    $del = $this->db->where('id_resep', general::dekrip($id_resep))->get('tbl_trans_medcheck_det');

                    crud::update('tbl_trans_medcheck_resep', 'id', general::dekrip($id_resep), array('tgl_keluar'=>'0000-00-00 00:00:00','status'=>'2'));
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Resep berhasil di batalkan");');
                }
                
                redirect(base_url('medcheck/tambah.php?act=res_input&id='.$id.'&id_resep='.$id_resep.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    

    public function set_medcheck_bayar() {
        if (akses::aksesLogin() == TRUE) {
            $no_nota        = general::dekrip($this->input->post('no_nota'));
            $tgl_byr        = explode('/',$this->input->post('tgl_bayar'));
            $metode_byr     = $this->input->post('metode_bayar');
            $bank           = $this->input->post('bank');
            $no_kartu       = $this->input->post('no_kartu');
            $jm_gttl        = str_replace('.', '', $this->input->post('jml_gtotal'));
            $disc           = $this->input->post('diskon');
            $jml_diskon     = str_replace('.', '', $this->input->post('jml_diskon'));
            $jm_byr         = str_replace('.', '', $this->input->post('jml_bayar'));
            $jml_biaya      = str_replace('.', '', $this->input->post('jml_biaya'));
            $jml_dp         = str_replace('.', '', $this->input->post('jml_total_dp'));
            $jml_ongkir     = str_replace('.', '', $this->input->post('jml_ongkir'));
            $jml_pot_poin   = str_replace('.', '', $this->input->post('potongan_poin'));

            $pengaturan = $this->db->get('tbl_pengaturan')->row();
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('no_nota', 'ID Transaksi', 'required');
            $this->form_validation->set_rules('jml_bayar', 'Jml Bayar', 'required');
            $this->form_validation->set_rules('metode_bayar', 'Metode Pembayaran', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'no_nota' => form_error('no_nota'),
                    'bayar'   => form_error('jml_bayar'),
                    'metode'  => form_error('metode_bayar'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/invoice/bayar.php?id='.general::enkrip($no_nota)));
            } else {
                $jml_bayar      = (float)$jm_byr + (float)$jml_dp;
                $jml_gtotal     = (float)$jm_gttl + (float)$jml_dp + (float)$jml_ongkir;
                
                $tgl_bayar      = date('Y-m-d');
                $sql_cek        = $this->db->where('id', $no_nota)->get('tbl_trans_medcheck')->row();
                $sql_cek_plat   = $this->db->where('id_medcheck', $sql_cek->id)->get('v_medcheck_plat')->num_rows();
                $sql_plat       = $this->db->where('id', $metode_byr)->get('tbl_m_platform')->row();
                $sql_medc_det   = $this->db->where('id_medcheck', $sql_cek->id)->get('tbl_trans_medcheck_det');
                $sql_medc_det_sm= $this->db->select('SUM(potongan_poin) as potongan_poin')->where('id_medcheck', $sql_cek->id)->get('tbl_trans_medcheck_det')->row();
                $sql_poin       = $this->db->where('id_pasien', $sql_cek->id_pasien)->get('tbl_m_pasien_poin')->row();
                
                # Jml Sisa Poin
                $jml_gtot_poin  = (float)$sql_poin->jml_poin_nom - (float)$jml_pot_poin;
                
                $jml_kurang     = $jml_gtotal - $jml_bayar;
                $jml_kembali    = $jml_bayar - $jml_gtotal;
                $diskon         = number_format((((float)$sql_cek->jml_total - $jml_gtotal) / (float)$sql_cek->jml_total) * 100, 2);
                $jml_tot_disk   = (float)$sql_cek->jml_total - $jml_gtotal;
                $ppn            = ($sql_cek->status_ppn == '1' ? (float)$sql_cek->ppn : 0.0);
                $jml_ppn        = ($sql_cek->status_ppn == '1' ? ($ppn / 100) * $jml_gtotal : 0.0);
                $gtotal         = ($sql_cek->status_ppn == '1' ? $jml_gtotal + $jml_ppn : $jml_gtotal);
                
                # Jml Poin
                $jml_poin       = $jml_gtotal / (float)$pengaturan->jml_poin_nom;
                $jml_poin_nom   = floor($jml_poin) * (float)$pengaturan->jml_poin;
                
                // Simpan platform pembayaran
                $data_platform = [
                    'tgl_simpan'  => $tgl_bayar.' '.date('H:i:s'),
                    'id_platform' => $metode_byr,
                    'id_medcheck' => $no_nota,
                    'no_nota'     => $sql_cek->no_nota,
                    'platform'    => (!empty($bank) ? $bank : '-'),
                    'keterangan'  => (!empty($no_kartu) ? $no_kartu : ''),
                    'nominal'     => (float)$jml_bayar,
                ];
                
                // Begin transaction
                $this->db->trans_begin();
                
                    /* Kalo pembayaran kurang */
                    if($sql_cek->status_bayar > 1){
                    $jml_tot_bayar  = (float)$sql_cek->jml_bayar + $jml_bayar;
                    $jml_tot_biaya  = (float)$sql_cek->jml_biaya + (float)$jml_biaya;
                    $jml_tot_gtot   = (float)$sql_cek->jml_gtotal + (float)$jml_biaya;
                    $jml_sisa_bayar = (float)$sql_cek->jml_kurang - $jml_bayar;
                    $jml_sisa_kmbli = $jml_tot_bayar - (float)$sql_cek->jml_gtotal;
    
                        if($jml_sisa_bayar <= 0){
                        $trans = [
                                'id_kasir'          => $this->ion_auth->user()->row()->id,
                                'tgl_bayar'         => $tgl_bayar.' '.date('H:i:s'),
                                'tgl_modif'         => date('Y-m-d H:i:s'),
                                'jml_ongkir'        => (float)$jml_ongkir,
                                'jml_potongan_poin' => (float)$jml_pot_poin,
                                'jml_gtotal'        => (float)$jml_tot_gtot,
                                'jml_bayar'         => $jml_tot_bayar,
                                'jml_kurang'        => (int)($jml_sisa_bayar < 0 ? 0 : $jml_sisa_bayar),
                                'jml_kembali'       => (int)($jml_sisa_kmbli < 0 ? 0 : $jml_sisa_kmbli),
                                'jml_poin'          => floor($jml_poin),
                                'jml_poin_nom'      => (float)$jml_poin_nom,
                                'status_bayar'      => '1',
                                'status_nota'       => '3',
                                'metode'            => $metode_byr,
                        ];
                            
                            # Update ketersediaan kamar jika rawat inap
                            if($sql_cek->tipe == '3'){
                                $sql_medc_kamar = $this->db->where('id_medcheck', $sql_cek->id)->get('tbl_trans_medcheck_kamar')->row();
                                $sql_kamar      = $this->db->where('id', $sql_medc_kamar->id_kamar)->get('tbl_m_kamar')->row();
                            $jml            = (int)$sql_kamar->jml - 1;
                                
                            $trans_kamar = [
                                    'tgl_modif' => date('Y-m-d H:i:s'),
                                    'jml'       => $jml
                            ];
                                
                                # Update jumlah kamar terpakainya
                                $this->db->where('id', $sql_kamar->id)->update('tbl_m_kamar', $trans_kamar);
                                
                                # Update status kamar terpakai menjadi inaktif
                            $this->db->where('id_medcheck', $sql_cek->id)->update('tbl_trans_medcheck_kamar', ['status' => '0']);
                            }
    
                            # Update Nota Penjualan grand total perhitungan
                            $this->db->where('id', $no_nota)->update('tbl_trans_medcheck', $trans);
                            
                            # POIN AKAN BERTAMBAH KETIKA TIPE BAYAR UMUM
                        if($sql_cek->tipe_bayar == '1' || $sql_cek->tipe_bayar == '0'){
                                # Hitung ulang data poin
                            $poin           = (float)$jml_pot_poin / (float)$pengaturan->jml_poin;
                            $poin_sisa      = ((float)$sql_poin->jml_poin - floor($poin)) + floor($jml_poin);
                            $poin_sisa_tot  = $poin_sisa * (float)$pengaturan->jml_poin;

                            $data_poin = [
                                    'tgl_modif'     => date('Y-m-d H:i:s'),
                                    'jml_poin'      => floor($poin_sisa),
                                    'jml_poin_nom'  => (float)$poin_sisa_tot,                        
                            ];

                                $this->db->where('id', $sql_poin->id)->update('tbl_m_pasien_poin', $data_poin);
                            }
                            
                            # Simpan ke platfom pembayaran
                            $this->db->insert('tbl_trans_medcheck_plat', $data_platform);
                            
                        if ($this->db->trans_status() === FALSE) {
                            $this->db->trans_rollback();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Transaksi gagal dibayar");');
                            redirect(base_url('medcheck/invoice/bayar.php?id='.general::enkrip($no_nota).'#jml_bayar'));
                        } else {
                            $this->db->trans_commit();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.success("Transaksi berhasil dibayar");');
                            redirect(base_url('medcheck/invoice/detail.php?id='.general::enkrip($no_nota).'#jml_bayar')); 
                        }
                        }else{
                        $trans = [
                                'tgl_bayar'    => $tgl_bayar.' '.date('H:i:s'),
                                'tgl_modif'    => date('Y-m-d H:i:s'),
                                'jml_ongkir'   => (float)$jml_ongkir,
                                'jml_gtotal'   => (float)$jml_tot_gtot,
                                'jml_bayar'    => $jml_tot_bayar,
                                'jml_kurang'   => (int)$jml_sisa_bayar,
                                'jml_poin'     => floor($jml_poin),
                                'jml_poin_nom' => (float)$jml_poin_nom,
                                'metode'       => $metode_byr,
                         ];
    
                             # update nota
                             $this->db->where('id', $no_nota)->update('tbl_trans_medcheck', $trans);
                            
                             # Simpan ke platfom pembayaran
                             $this->db->insert('tbl_trans_medcheck_plat', $data_platform);
                             
                         if ($this->db->trans_status() === FALSE) {
                            $this->db->trans_rollback();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Transaksi gagal dibayar");');
                         } else {
                            $this->db->trans_commit();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.success("Transaksi berhasil dibayar");');
                         }
                             redirect(base_url('medcheck/invoice/bayar.php?id='.general::enkrip($no_nota).'#jml_bayar'));
                        }
                    }else{
                        /* Cek Pembayaran jika kurang, otomatis menjadi DP */
                        if($jml_bayar < $jml_gtotal){
                        $trans = [
                                'tgl_bayar'    => $tgl_bayar.' '.date('H:i:s'),
                                'tgl_modif'    => date('Y-m-d H:i:s'),
                                'jml_ongkir'   => (float)$jml_ongkir,
                                'jml_gtotal'   => (float)$gtotal,
                                'jml_bayar'    => (float)$jml_bayar,
                                'jml_kurang'   => (int)$jml_kurang,
                                'jml_poin'     => floor($jml_poin),
                                'jml_poin_nom' => (float)$jml_poin_nom,
                                'status_bayar' => '2',
                                'metode'	   => $metode_byr,
                         ];
    
                             # update nota
                             $this->db->where('id', $no_nota)->update('tbl_trans_medcheck', $trans);
    
                             # Simpan ke platfom pembayaran
                             $this->db->insert('tbl_trans_medcheck_plat', $data_platform);
    
                         if ($this->db->trans_status() === FALSE) {
                            $this->db->trans_rollback();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Transaksi gagal dibayar");');
                         } else {
                            $this->db->trans_commit();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.success("Pembayaran DP berhasil");');
                         }
                             redirect(base_url('medcheck/invoice/bayar.php?id='.general::enkrip($no_nota).'#jml_bayar'));
                        }else{                            
                            /* Jika jumlah pembayaran lunas */
                        $trans = [
                                'id_kasir'          => $this->ion_auth->user()->row()->id,
                                'tgl_bayar'         => $tgl_bayar.' '.date('H:i:s'),
                                'tgl_keluar'        => date('Y-m-d H:i:s'),
                                'jml_potongan_poin' => (float)$jml_pot_poin,
                                'jml_subtotal'      => (float)$jml_gtotal,
                                'jml_gtotal'        => (float)$gtotal,
                                'jml_bayar'         => (float)$jml_bayar,
                                'jml_kembali'       => (float)$jml_kembali,
                                'jml_poin'          => (!empty($jml_poin) ? floor($jml_poin) : 0),
                                'jml_poin_nom'      => (!empty($jml_poin_nom) ? (float)$jml_poin_nom : 0),
                                'status_bayar'      => '1',
                                'status_nota'       => '3',
                            'metode' 	        => $metode_byr,
                         ];
                            
                            # Update ketersediaan kamar jika rawat inap
                            if($sql_cek->tipe == '3'){
                                $sql_medc_kamar = $this->db->where('id_medcheck', $sql_cek->id)->get('tbl_trans_medcheck_kamar')->row();
                                $sql_kamar      = $this->db->where('id', $sql_medc_kamar->id_kamar)->get('tbl_m_kamar')->row();
                            $jml            = (int)$sql_kamar->jml - 1;
                                
                            $trans_kamar = [
                                    'tgl_modif' => date('Y-m-d H:i:s'),
                                    'jml'       => $jml
                            ];
                                
                                # Update jumlah kamar terpakainya
                                $this->db->where('id', $sql_kamar->id)->update('tbl_m_kamar', $trans_kamar);
                                
                                # Update status kamar terpakai menjadi inaktif
                            $this->db->where('id_medcheck', $sql_cek->id)->update('tbl_trans_medcheck_kamar', ['status' => '0']);
                            }
                                
                            # Update nota
                            $this->db->where('id', $no_nota)->update('tbl_trans_medcheck', $trans);
    
                            # Simpan ke platfom pembayaran
                            $this->db->insert('tbl_trans_medcheck_plat', $data_platform);
                                                
                            # POIN AKAN BERTAMBAH KETIKA TIPE BAYAR UMUM
                        if($sql_cek->tipe_bayar == '1' || $sql_cek->tipe_bayar == '0'){
                                # Hitung ulang data poin
                            $poin           = (float)$jml_pot_poin / (float)$pengaturan->jml_poin;
                            $poin_sisa      = ((float)$sql_poin->jml_poin - floor($poin)) + floor($jml_poin);
                            $poin_sisa_tot  = $poin_sisa * (float)$pengaturan->jml_poin;

                            $data_poin = [
                                    'tgl_modif'     => date('Y-m-d H:i:s'),
                                    'jml_poin'      => floor($poin_sisa),
                                    'jml_poin_nom'  => (float)$poin_sisa_tot,                        
                            ];

                                $this->db->where('id', $sql_poin->id)->update('tbl_m_pasien_poin', $data_poin);
                            }
                            
                            # Hitung poin ditiap item
                            $sql_medc_det_poin  = $this->db->where('id_medcheck', $sql_cek->id)->where('status_pkt', '0')->get('tbl_trans_medcheck_det');
                            $jml_item           = $sql_medc_det_poin->num_rows();
                        $poin_item          = (float)$jml_pot_poin / $jml_item;
                            
                            foreach ($sql_medc_det_poin->result() as $det){
                            $subtotal = (float)$det->subtotal - $poin_item;
                                
                            $data_det = [
                                    'tgl_modif'     => date('Y-m-d H:i:s'),
                                    'potongan_poin' => $poin_item,
                                    'subtotal'      => $subtotal
                            ];
                                
                                $this->db->where('id', $det->id)->update('tbl_trans_medcheck_det', $data_det);
                            }
                             
                        if ($this->db->trans_status() === FALSE) {
                            $this->db->trans_rollback();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Transaksi gagal dibayar");');
                            redirect(base_url('medcheck/invoice/bayar.php?id='.general::enkrip($no_nota).'#jml_bayar'));
                        } else {
                            $this->db->trans_commit();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.success("Transaksi berhasil dibayar");');
                            redirect(base_url('medcheck/invoice/detail.php?id='.general::enkrip($no_nota)));
                        }
                        }
                    }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_bayar_batal() {
        if (akses::aksesLogin() == TRUE) {
            $no_nota    = general::dekrip($this->input->post('no_nota'));
            $id         = $this->input->post('id');
            $tgl_byr    = explode('/', $this->input->post('tgl_bayar'));
            $metode_byr = $this->input->post('metode_bayar');
            $bank       = $this->input->post('bank');
            $no_kartu   = $this->input->post('no_kartu');

            $pengaturan = $this->db->get('tbl_pengaturan')->row();
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID Transaksi', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                redirect(base_url('medcheck/tindakan.php?id=' . $id));
            } else {
                $tgl_bayar      = date('Y-m-d');
                $sql_cek        = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_medc_det   = $this->db->where('id_medcheck', $sql_cek->id)->get('tbl_trans_medcheck_det');
                $sql_medc_file  = $this->db->where('id_medcheck', $sql_cek->id)->where('status', '3')->get('tbl_trans_medcheck_file');
                $sql_poin       = $this->db->where('id_pasien', $sql_cek->id_pasien)->get('tbl_m_pasien_poin')->row();
                
                // Simpan platform pembayaran
                $data = [
                    'jml_ongkir'    => 0,
                    'jml_bayar'     => 0,
                    'jml_kurang'    => 0,
                    'jml_kembali'   => 0,
                    'status_bayar'  => '0',
                ];
                
                # Transactional Database
                $this->db->trans_start();
                
                # Hapus Platform Pembayaran
                $this->db->where('id_medcheck', $sql_cek->id)->delete('tbl_trans_medcheck_plat');
                
                # Hapus File Bukti Bayar
                foreach ($sql_medc_file->result() as $file) {
                    if (file_exists($file->file_name)) {
                        unlink($file->file_name);
                    }
                    
                    $this->db->where('id', $file->id)->delete('tbl_trans_medcheck_file');
                }
                                
                # Update jumlah bayar dll
                $this->db->where('id', $sql_cek->id)->update('tbl_trans_medcheck', $data);
                
                # Hitung ulang data poin
                $poin           = $sql_cek->jml_potongan_poin / $pengaturan->jml_poin;
                $poin_sisa      = ($sql_poin->jml_poin - floor($sql_cek->jml_poin)) + floor($poin);
                $poin_sisa_tot  = $poin_sisa * $pengaturan->jml_poin;

                $data_poin = [
                    'tgl_modif'     => date('Y-m-d H:i:s'),
                    'jml_poin'      => floor($poin_sisa),
                    'jml_poin_nom'  => (float) $poin_sisa_tot,
                ];

                $this->db->where('id', $sql_poin->id)->update('tbl_m_pasien_poin', $data_poin);
                
                foreach ($sql_medc_det->result() as $det) {
                    $disk1      = $det->harga - (($det->disk1 / 100) * $det->harga);
                    $disk2      = $disk1 - (($det->disk2 / 100) * $disk1);
                    $disk3      = $disk2 - (($det->disk3 / 100) * $disk2);
                    $diskon     = $det->harga - $disk3;
                    $subtotal   = ($disk3 - $det->potongan) * (int)$det->jml;

                    $data_det = [
                        'potongan_poin' => 0,
                        'subtotal'      => $subtotal
                    ];

                    $this->db->where('id', $det->id)->update('tbl_trans_medcheck_det', $data_det);
                }

                # Trans Complete
                $this->db->trans_complete();
                
                # Kirim pesan gagal atau sukses
                if ($this->db->trans_status() === FALSE) {
                    # Rollback
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Transaksi gagal di proses!!");');
                } else {
                    # Complete
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Transaksi berhasil di proses!!");');
                }

                redirect(base_url('medcheck/tindakan.php?id=' . general::enkrip($sql_cek->id)));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_lab() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $status = $this->input->get('status');
            
            if (!empty($id)) {
                try {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck'); 
                    
                    if ($sql_medc->num_rows() > 0) {
                        $pengaturan = $this->db->get('tbl_pengaturan')->row();
                        
                        $nomer      = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_lab')->num_rows() + 1;
                        $no_surat   = sprintf('%03d', $nomer).'/'.$pengaturan->kode_surat.'/'.date('m').'/'.date('Y');
                        $grup       = $this->ion_auth->get_users_groups()->row();
                        $is_farm    = ($grup->name == 'analis' ? '2' : '0');
                        $is_farm_id = ($grup->name == 'analis' ? $this->ion_auth->user()->row()->id : '0');
                        $is_doc_id  = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : '0');
                        
                        $data = [
                            'tgl_simpan'    => date('Y-m-d H:i:s'),
                            'tgl_masuk'     => date('Y-m-d H:i:s'),
                            'id_medcheck'   => $sql_medc->row()->id,
                            'id_pasien'     => $sql_medc->row()->id_pasien,
                            'id_user'       => $this->ion_auth->user()->row()->id,
                            'id_analis'     => $is_farm_id,
                            'id_dokter'     => $is_doc_id,
                            'no_lab'        => $no_surat,
                            'status'        => '0',
                            'status_cvd'    => '0',
                        ];
                        
                        $this->db->insert('tbl_trans_medcheck_lab', $data);
                        $last_id = $this->db->insert_id();
                        
                        $this->db->where('id', $sql_medc->row()->id)->update('tbl_trans_medcheck', ['tgl_periksa_lab' => date('Y-m-d H:i:s')]);
                        
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data permintaan lab berhasil dibuat");');
                        redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->row()->id).'&id_lab='.general::enkrip($last_id).'&status='.$status));
                    } else {
                        throw new Exception("Data medcheck tidak ditemukan");
                    }
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck'));
                }
            } else {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("ID tidak valid");');
                redirect(base_url('medcheck'));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_lab_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_lab     = $this->input->post('id_lab');
            $tgl_masuk  = $this->input->post('tgl_masuk');
            $no_sample  = $this->input->post('no_sampel');
            $dokter     = $this->input->post('dokter');
            $ket        = $this->input->post('keterangan');
            $status     = $this->input->post('status');
            $is_cvd     = $this->input->post('status_cvd');
            $is_normal  = $this->input->post('status_normal');
            $is_duplo   = $this->input->post('duplo');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('no_sampel', 'No Sample', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'        => form_error('id'),
                    'no_sampel' => form_error('no_sampel'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act.'&id_lab='.$id_lab));
            } else {
                try {
                    $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                    $pengaturan     = $this->db->get('tbl_pengaturan')->row();
                    
                    $data = [
                        'tgl_masuk'     => $this->tanggalan->tgl_indo_sys($tgl_masuk).' '.date('H:i:s'),
                        'tgl_modif'     => date('Y-m-d H:i:s'),
                        'id_dokter'     => $dokter,
                        'no_sample'     => $no_sample,
                        'status_cvd'    => $is_cvd,
                        'ket'           => $ket,
                        'status'        => '1',
                        'status_normal' => (!empty($is_normal) ? $is_normal : '0'),
                        'status_duplo'  => (!empty($is_duplo) ? $is_duplo : '0'),
                    ];
                    
                    $this->db->where('id', general::dekrip($id_lab))->update('tbl_trans_medcheck_lab', $data);
                    
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data berhasil di update");');
                    redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_lab_upd_hsl() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $status     = $this->input->post('status');
            $hasil      = $_POST['hasil_lab'];
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('anamnesa', $msg_error);
                redirect(base_url('medcheck/tambah.php?id='.$id.'status='.$status));
            } else {
                $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                
                # Start Transaction
                $this->db->trans_begin();
                
                try {
                    foreach ($hasil as $key => $hsl) {
                        $item_id = general::dekrip($key);
                        
                        $data_lab = [
                            'id_analis' => $this->ion_auth->user()->row()->id,
                            'tgl_modif' => date('Y-m-d H:i:s'),
                            'hasil_lab' => $hsl,
                        ];
                        
                        $this->db->where('id', $item_id)->update('tbl_trans_medcheck_det', $data_lab);
                    }
                    
                    $this->db->where('id', $sql_medc->id)->update('tbl_trans_medcheck', [
                        'tgl_periksa_lab_keluar' => date('Y-m-d H:i:s')
                    ]);
                    
                    # Check transaction status
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception("Gagal menyimpan hasil lab!");
                    }
                    
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Hasil lab berhasil disimpan");');
                    redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_lab_print() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_lab     = $this->input->post('id_lab');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('anamnesa', $msg_error);
                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
            } else {
                $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                
                // Reset status cetak untuk semua item lab pada medcheck ini
                $this->db->where('status', '3')
                         ->where('id_medcheck', $sql_medc->id)
                         ->update('tbl_trans_medcheck_det', ['status_ctk' => '0']);
                
                $this->session->unset_userdata('lab_print');
                
                $cetak = [];
                foreach ($_POST['print'] as $key => $print) {
                    $cetak[] = [
                        'id'            => $key,
                        'id_lab'        => $_POST['print_lab'][$key],
                        'id_lab_hsl'    => $_POST['print_lab_hsl'][$key],
                        'id_kat'        => $_POST['print_kat'][$key],
                        'value'         => $_POST['print'][$key],
                    ];
                    
                    $this->db->where('id', $key)
                             ->update('tbl_trans_medcheck_det', ['status_ctk' => $_POST['print'][$key]]);
                }
                
                $this->session->set_userdata('lab_print', $cetak);
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Hasil lab berhasil disimpan");');
                redirect(base_url('medcheck/surat/cetak_pdf_lab.php?id='.$id.'&id_lab='.$id_lab));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_lab_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;
            
            $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
            
            if($sql_medc->num_rows() > 0){
                $this->session->set_flashdata('medcheck', '<div class="alert alert-success">Transaksi berhasil dihapus</div>');
//                crud::delete('tbl_trans_medcheck_det', 'id_lab', general::dekrip($item_id));
//                crud::delete('tbl_trans_medcheck_lab', 'id', general::dekrip($item_id));
                
                /* Transaksi Database */
                $this->db->trans_begin();

                # Hapus ke tabel medcheck det
                $this->db->where('id_lab', general::dekrip($item_id))->delete('tbl_trans_medcheck_det');
                $this->db->where('id_lab', general::dekrip($item_id))->delete('tbl_trans_medcheck_lab_hsl');
                
                # Hapus ke tabel medcheck lab
                $this->db->where('id', general::dekrip($item_id))->delete('tbl_trans_medcheck_lab');

                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();

                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck', '<div class="alert alert-danger">Data lab gagal dihapus !!</div>');
                } else {
                    $this->db->trans_commit();

                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck', '<div class="alert alert-success">Data lab berhasil dihapus !!</div>');
                }
            }

            redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_lab_spiro() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $status = $this->input->get('status');
            
            if (!empty($id)) {
                try {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
                    
                    if ($sql_medc->num_rows() > 0) {
                        $sql_pasien = $this->db->where('id', $sql_medc->row()->id_pasien)->get('tbl_m_pasien')->row(); 
                        $pengaturan = $this->db->get('tbl_pengaturan')->row();
                        
                        $nomer      = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_lab_spiro')->num_rows() + 1;
                        $no_surat   = sprintf('%03d', $nomer).'/'.$pengaturan->kode_surat.'/'.date('m').'/'.date('Y');
                        $grup       = $this->ion_auth->get_users_groups()->row();
                        $is_farm    = ($grup->name == 'analis' ? '2' : '0');
                        $is_farm_id = ($grup->name == 'analis' ? $this->ion_auth->user()->row()->id : '0');
                        $is_doc_id  = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : '0');
                        
                        $data = [
                            'tgl_simpan'    => date('Y-m-d H:i:s'),
                            'tgl_masuk'     => date('Y-m-d H:i:s'),
                            'id_medcheck'   => $sql_medc->row()->id,
                            'id_pasien'     => $sql_medc->row()->id_pasien,
                            'id_user'       => $this->ion_auth->user()->row()->id,
                            'id_analis'     => $is_farm_id,
                            'id_dokter'     => $is_doc_id,
                            'no_lab'        => $no_surat,
                            'status'        => '0',
                        ];
                        
                        # Start Transaction
                        $this->db->trans_begin();
                        
                        # Insert spirometri record
                        $this->db->insert('tbl_trans_medcheck_lab_spiro', $data);
                        $last_id = $this->db->insert_id();
                        
                        # Insert file record for spirogram
                        $data_file_ekg = [
                            'id_medcheck'       => $sql_medc->row()->id,
                            'id_pasien'         => $sql_medc->row()->id_pasien,
                            'id_user'           => $this->ion_auth->user()->row()->id,
                            'id_berkas'         => $last_id,
                            'tgl_simpan'        => date('Y-m-d H:i:s'),
                            'tgl_masuk'         => date('Y-m-d H:i'),
                            'judul'             => 'HASIL ANALISA SPIROGRAM ('.$no_surat.')',
                            'keterangan'        => $sql_pasien->nama_pgl,
                            'file_name'         => '/medcheck/surat/cetak_pdf_lab_spiro.php?id='.general::enkrip($sql_medc->row()->id).'&id_lab='.general::enkrip($last_id),
                            'file_ext'          => '.pdf',
                            'file_type'         => 'application/pdf',
                            'status'            => '2',
                        ];
                        $this->db->insert('tbl_trans_medcheck_file', $data_file_ekg);
                        
                        # Check transaction status
                        if ($this->db->trans_status() === FALSE) {
                            $this->db->trans_rollback();
                            throw new Exception("Gagal membuat permintaan spirometri");
                        }
                        
                        $this->db->trans_commit();
                        
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Permintaan spirometri sudah dibuat!");');
                        redirect(base_url('medcheck/tambah.php?act=pen_spirometri&id='.general::enkrip($sql_medc->row()->id).'&id_lab='.general::enkrip($last_id).'&status='.$status));
                    } else {
                        throw new Exception("Data medcheck tidak ditemukan");
                    }
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck'));
                }
            } else {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("ID tidak valid");');
                redirect(base_url('medcheck'));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_lab_spiro_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_lab     = $this->input->post('id_lab_spiro');
            $tgl_masuk  = $this->input->post('tgl_masuk');
            $no_sample  = $this->input->post('no_sampel');
            $dokter     = $this->input->post('dokter');
            $keluhan    = $this->input->post('keluhan');
            $riwayat    = $this->input->post('riwayat');
            $anjuran    = $this->input->post('anjuran');
            $ref        = $this->input->post('ref');
            $tb         = $this->input->post('tb');
            $bb         = $this->input->post('bb');
            $imt        = $this->input->post('imt');
            $status     = $this->input->post('status');
            $is_rokok   = $this->input->post('status_rokok');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('no_sampel', 'No Sample', 'required');
            $this->form_validation->set_rules('dokter', 'dokter', 'required');
            $this->form_validation->set_rules('status_rokok', 'Rokok', 'required');
            $this->form_validation->set_rules('tb', 'TB', 'required');
            $this->form_validation->set_rules('bb', 'BB', 'required');
            $this->form_validation->set_rules('imt', 'IMT', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'            => form_error('id'),
                    'no_sampel'     => form_error('no_sampel'),
                    'dokter'        => form_error('dokter'),
                    'status_rokok'  => form_error('status_rokok'),
                    'tb'            => form_error('tb'),
                    'bb'            => form_error('bb'),
                    'imt'           => form_error('imt'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Validasi form gagal!");');

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act.'&id_lab='.$id_lab));
            } else {
                # Begin transaction
                $this->db->trans_begin();
                
                try {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    
                    if (!$sql_medc) {
                        throw new Exception("Data medcheck tidak ditemukan");
                    }
                    
                    $data = [
                        'tgl_masuk'     => $this->tanggalan->tgl_indo_sys($tgl_masuk).' '.date('H:i:s'),
                        'tgl_modif'     => date('Y-m-d H:i:s'),
                        'id_dokter'     => $dokter,
                        'no_sample'     => $no_sample,
                        'keluhan'       => $keluhan,
                        'riwayat'       => $riwayat,
                        'ref'           => $ref,
                        'tb'            => $tb,
                        'bb'            => $bb,
                        'imt'           => $imt,
                        'anjuran'       => (!empty($anjuran) ? $anjuran : ''),
                        'status'        => '1',
                        'status_rokok'  => $is_rokok
                    ];
                
                    # Update spirometri record
                    $this->db->where('id', general::dekrip($id_lab))->update('tbl_trans_medcheck_lab_spiro', $data);
                    
                    # Check transaction status
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception("Gagal menyimpan data spirometri");
                    }
                    
                    # Commit transaction
                    $this->db->trans_commit();
                    
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Spirometri berhasil disimpan!");');
                    redirect(base_url('medcheck/tambah.php?act=pen_spirometri_surat&id='.$id.'&status='.$status.'&id_lab='.$id_lab));
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act.'&id_lab='.$id_lab));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_lab_spiro_upd_hsl() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_spiro   = $this->input->post('id_spiro');
            $tgl_masuk  = $this->input->post('tgl_masuk');
            $ket        = $this->input->post('ket');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('id_spiro', 'ID Spiro', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'       => form_error('id'),
                    'id_spiro' => form_error('id_spiro'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&status='.$status.'&id_lab='.$id_spiro.'&err='));
            } else { 
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_spiro = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_lab_spiro')->row(); 
                $hasil          = $_POST['hsl_ukur'];
                
                /* Transaksi Database */
                $this->db->query('SET autocommit = 0;');
                $this->db->trans_start();
                
                $data_spiro = [
                    'tgl_modif'   => date('Y-m-d H:i:s'),
                    'ket'         => $ket,
                ];
                
                # Update masukkan hasil pemeriksaan
                $this->db->where('id', $sql_medc_spiro->id)->update('tbl_trans_medcheck_lab_spiro', $data_spiro);
                
                # Hapus dahulu data yang sudah ada di tabel hasil
                $this->db->where('id_lab_spiro', $sql_medc_spiro->id)->delete('tbl_trans_medcheck_lab_spiro_hsl');
                
                # Ambil data kategori spirometri
                foreach ($hasil as $key => $spiro){
                    $spiro_id   = general::dekrip($key);
                    $sql_spiro  = $this->db->where('id', $spiro_id)->get('tbl_m_kategori_spiro')->row();
                    
                    $data = [
                        'tgl_simpan'        => $sql_medc_spiro->tgl_masuk,
                        'tgl_modif'         => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_lab_spiro'      => $sql_medc_spiro->id,
                        'id_lab_spiro_kat'  => $sql_spiro->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $sql_spiro->kategori,
                        'item_value'        => $hasil[$key],
                        'item_value2'       => $_POST['hsl_pred'][$key],
                        'item_value3'       => $_POST['hsl_pred2'][$key],
                    ];

                    # Masukkan ke tabel hasil spirometri
                    $this->db->insert('tbl_trans_medcheck_lab_spiro_hsl', $data);
                }
                
                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();

                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Spirometri gagal disimpan !");');
                } else {
                    $this->db->trans_complete();
                    
                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Spirometri berhasil disimpan !");');
                }
                
                $this->db->query('SET autocommit = 1;');
                
                redirect(base_url('medcheck/tambah.php?act=pen_spirometri_input&id='.$id.'&status='.$status.'&id_lab='.$id_spiro));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_lab_spiro_hps_hsl() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_lab     = $this->input->get('id_lab');
            $id_item    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $act        = $this->input->get('act');
            
            try {
                if(!empty($id_item)){
                    $result = $this->db->where('id', general::dekrip($id_item))->delete('tbl_trans_medcheck_lab_spiro_hsl');
                    if (!$result) {
                        throw new Exception("Gagal menghapus data spirometri!");
                    }
                    $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Spirometri berhasil dihapus !");');
                } else {
                    throw new Exception("ID item tidak valid!");
                }
            } catch (Exception $e) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
            }
            
            redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&status='.$status.'&id_lab='.$id_lab));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    } 

    public function set_medcheck_lab_hapus_spiro() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $act        = $this->input->get('act');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;
            
            try {
                $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
                
                if ($sql_medc->num_rows() <= 0) {
                    throw new Exception("Data medcheck tidak ditemukan");
                }
                
                $sql_medc_spiro = $this->db->where('id', general::dekrip($item_id))->get('tbl_trans_medcheck_lab_spiro')->row();
                
                if (!$sql_medc_spiro) {
                    throw new Exception("Data spirometri tidak ditemukan");
                }
                
                /* Transaksi Database */
                $this->db->trans_begin();
                
                # Hapus ke tabel medcheck berkas spiro
                $this->db->where('id_berkas', $sql_medc_spiro->id)->delete('tbl_trans_medcheck_file');
                
                # Hapus ke tabel medcheck spiro
                $this->db->where('id', general::dekrip($item_id))->delete('tbl_trans_medcheck_lab_spiro');

                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();
                    throw new Exception("Spirometri gagal dihapus!");
                }
                
                $this->db->trans_commit();
                # Tampilkan pesan sukses jika sudah berhasil commit
                $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Spirometri sudah dihapus!");');
            } catch (Exception $e) {
                if ($this->db->trans_status() === FALSE) {
                    $this->db->trans_rollback();
                }
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
            }

            redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
public function set_medcheck_lab_adm_save() {
        header('Content-Type: application/json');
        
   if (akses::aksesLogin() == TRUE) {
       try {
           $this->db->trans_begin();
           
           // Sanitize and get POST data
           $id_medcheck    = $this->security->xss_clean($this->input->post('id_medcheck'));
           $id_pasien      = $this->security->xss_clean($this->input->post('id_pasien')); 
           $tgl_masuk      = $this->security->xss_clean($this->input->post('tgl_masuk'));
           $dokter         = $this->security->xss_clean($this->input->post('dokter'));
           $dokter_kirim   = $this->security->xss_clean($this->input->post('dokter_kirim'));
           $no_sample      = $this->security->xss_clean($this->input->post('no_sample'));
           $hasil          = $this->security->xss_clean($this->input->post('hasil'));
           $status         = $this->security->xss_clean($this->input->post('status'));
           
           // Validate required data
           if (empty($id_medcheck) || empty($id_pasien) || empty($tgl_masuk)) {
               throw new Exception('Data tidak lengkap');
           }
           
           // Decrypt IDs
           $id_medcheck_dec = general::dekrip($id_medcheck);
           $id_pasien_dec   = general::dekrip($id_pasien);
           
           // Format date
           $tgl_masuk_formatted = $this->tanggalan->tgl_indo_sys($tgl_masuk);
           
           // Get patient info
           $sql_pasien = $this->db->where('id', $id_pasien_dec)
                                 ->get('tbl_m_pasien')
                                 ->row();
                                 
           if (!$sql_pasien) {
               throw new Exception('Data pasien tidak ditemukan');
           }
           
                // Prepare data for insert
                $data = [
                    'id_medcheck'     => $id_medcheck_dec,
                    'id_dokter'       => $dokter,
                    'id_dokter_kirim' => $dokter_kirim,
                    'id_user'         => $this->ion_auth->user()->row()->id,
                    'tgl_simpan'      => date('Y-m-d H:i:s'),
                    'tgl_masuk'       => $tgl_masuk_formatted,
                    'no_sample'       => $no_sample,
                    'hasil'           => $hasil
                ];
                
                // Handle file upload
                if (!empty($_FILES['file_audiometri']['name'])) {
           // Setup file paths
           $kode_pasien = preg_replace('/[^A-Za-z0-9\-]/', '', 
               strtolower($sql_pasien->kode_dpn . $sql_pasien->kode)
           );
           
           $base_path = './file/pasien/' . $kode_pasien;
           $upload_path = $base_path . '/audiometri';
           
           // Create directories if needed
           if (!is_dir($base_path)) {
               mkdir($base_path, 0777, true);
           }
           if (!is_dir($upload_path)) {
               mkdir($upload_path, 0777, true);
           }
           
           // Configure upload
           $config = [
               'upload_path'   => $upload_path,
               'allowed_types' => 'pdf|jpg|jpeg|png',
               'max_size'      => 5120,
               'file_name'     => 'audiometri_' . date('YmdHis'),
               'remove_spaces' => TRUE,
               'overwrite'     => TRUE
           ];
           
           $this->load->library('upload');
           $this->upload->initialize($config);
           
           if (!$this->upload->do_upload('file_audiometri')) {
               throw new Exception($this->upload->display_errors('', ''));
           }
           
           $upload_data = $this->upload->data();
                    $data['nama_file'] = $upload_data['file_name'];
                } else {
                    throw new Exception('File hasil audiometri wajib diunggah');
                }
                
                // Insert data into database
                $insert_result = $this->db->insert('tbl_trans_medcheck_lab_audiometri', $data);
                
                if (!$insert_result || $this->db->trans_status() === FALSE) {
               throw new Exception('Gagal menyimpan data audiometri');
           }
           
                // If everything is successful, commit the transaction
           $this->db->trans_commit();
                
                echo json_encode([
                    'status' => 'success',
                    'message' => 'Data audiometri berhasil disimpan',
                    'redirect' => base_url('medcheck/tambah.php?act=pen_adm&id=' . $id_medcheck . '&status=' . $status)
                ]);
           
       } catch (Exception $e) {
           $this->db->trans_rollback();
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                echo json_encode([
                    'status' => 'error',
                    'message' => $e->getMessage()
                ]);
            }
   } else {
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            echo json_encode([
                'status' => 'error',
                'message' => 'Authentifikasi gagal, silahkan login ulang!'
            ]);
   }
}
    
    public function set_medcheck_lab_adm_delete() {
        if (akses::aksesLogin() == TRUE) {
            try {
                $this->db->trans_begin();

                // Get and clean parameters
                $id_medcheck = $this->security->xss_clean($this->input->get('id'));
                $item_id = $this->security->xss_clean($this->input->get('item_id'));
                $status = $this->security->xss_clean($this->input->get('status'));

                // Decrypt IDs
                $id_medcheck_dec = general::dekrip($item_id);

                // Get file info before delete
                $audiometri = $this->db->where('id', $id_medcheck_dec)->get('tbl_trans_medcheck_lab_audiometri')->row();

                if ($audiometri) {
                    // Get patient info for file path
                    $sql_medc = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
                    $sql_pasien = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row();
                    $kode_pasien = strtolower($sql_pasien->kode_dpn . $sql_pasien->kode);

                    // Delete physical file
                    $file_path = './file/pasien/' . $kode_pasien . '/audiometri/' . $audiometri->nama_file;
                    if (file_exists($file_path)) {
                        unlink($file_path);
                    }

                    // Delete database record
                    $this->db->where('id', $id_medcheck_dec)->delete('tbl_trans_medcheck_lab_audiometri');

                    if ($this->db->affected_rows() > 0) {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('form_error', '<div class="alert alert-success">Data audiometri berhasil dihapus</div>');
                    } else {
                        throw new Exception('Gagal menghapus data');
                    }
                } else {
                    throw new Exception('Data tidak ditemukan');
                }
            } catch (Exception $e) {
                $this->db->trans_rollback();
                $this->session->set_flashdata('form_error', '<div class="alert alert-danger">' . $e->getMessage() . '</div>');
            }

            // Redirect back with status parameter using base_url()
            redirect(base_url('medcheck/tambah.php?act=pen_adm&id=' . $id_medcheck . '&status=' . $status));
        } else {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_lab_ekg() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $status = $this->input->get('status');
            
            try {
                if (!empty($id)) {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
                    
                    if ($sql_medc->num_rows() > 0) {
                        $sql_pasien = $this->db->where('id', $sql_medc->row()->id_pasien)->get('tbl_m_pasien')->row(); 
                        $pengaturan = $this->db->get('tbl_pengaturan')->row();
                       
                        $nomer      = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_lab_ekg')->num_rows() + 1;
                        $no_surat   = sprintf('%03d', $nomer).'/'.$pengaturan->kode_surat.'/'.date('m').'/'.date('Y');
                        $grup       = $this->ion_auth->get_users_groups()->row();
                        $is_farm    = ($grup->name == 'analis' ? '2' : '0');
                        $is_farm_id = ($grup->name == 'analis' ? $this->ion_auth->user()->row()->id : '0');
                        $is_doc_id  = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : '0');
                       
                        $data = [
                            'tgl_simpan'    => date('Y-m-d H:i:s'),
                            'tgl_masuk'     => date('Y-m-d H:i:s'),
                            'id_medcheck'   => $sql_medc->row()->id,
                            'id_pasien'     => $sql_medc->row()->id_pasien,
                            'id_user'       => $this->ion_auth->user()->row()->id,
                            'id_analis'     => $is_farm_id,
                            'id_dokter'     => $is_doc_id,
                            'no_lab'        => $no_surat,
                            'status'        => '0',
                        ];
                
                        # Start Transaction
                        $this->db->trans_begin();
                        
                        # Insert EKG record
                        $this->db->insert('tbl_trans_medcheck_lab_ekg', $data);
                        $last_id = $this->db->insert_id();
                    
                        # Insert file record for EKG
                        $data_file_ekg = [
                            'id_medcheck'       => $sql_medc->row()->id,
                            'id_pasien'         => $sql_medc->row()->id_pasien,
                            'id_user'           => $this->ion_auth->user()->row()->id,
                            'id_berkas'         => $last_id,
                            'tgl_simpan'        => date('Y-m-d H:i:s'),
                            'tgl_masuk'         => date('Y-m-d H:i'),
                            'judul'             => 'HASIL PEMBACAAN EKG',
                            'keterangan'        => $sql_pasien->nama_pgl,
                            'file_name'         => '/medcheck/surat/cetak_pdf_lab_ekg.php?id='.general::enkrip($sql_medc->row()->id).'&id_lab='.general::enkrip($last_id).'&status='.$status,
                            'file_ext'          => '.pdf',
                            'file_type'         => 'application/pdf',
                            'status'            => '2',
                        ];
                        $this->db->insert('tbl_trans_medcheck_file', $data_file_ekg);
                    
                        # Check transaction status
                        if ($this->db->trans_status() === FALSE) {
                            $this->db->trans_rollback();
                            throw new Exception("Gagal membuat permintaan EKG");
                        }
                        
                        $this->db->trans_commit();
                        
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Permintaan EKG sudah dibuat!");');
                        redirect(base_url('medcheck/tambah.php?act=pen_ekg&id='.general::enkrip($sql_medc->row()->id).'&id_lab='.general::enkrip($last_id).'&status='.$status));
                    } else {
                        throw new Exception("Data medcheck tidak ditemukan");
                    }
                } else {
                    throw new Exception("ID tidak valid");
                }
            } catch (Exception $e) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                redirect(base_url('medcheck'));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_lab_ekg_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_lab     = $this->input->post('id_lab_spiro');
            $tgl_masuk  = $this->input->post('tgl_masuk');
            $no_sample  = $this->input->post('no_sampel');
            $dokter     = $this->input->post('dokter');
            $hsl_irama  = $this->input->post('hsl_irama');
            $hsl_frek   = $this->input->post('hsl_frek');
            $hsl_axis   = $this->input->post('hsl_axis');
            $hsl_pos    = $this->input->post('hsl_pos');
            $hsl_zona   = $this->input->post('hsl_zona');
            $hsl_gelp   = $this->input->post('hsl_gelp');
            $hsl_int    = $this->input->post('hsl_int');
            $hsl_qrs    = $this->input->post('hsl_qrs');
            $hsl_st     = $this->input->post('hsl_st');
            $hsl_gelt   = $this->input->post('hsl_gelt');
            $hsl_gelu   = $this->input->post('hsl_gelu');
            $hsl_lain   = $this->input->post('hsl_lain');
            $kesimpulan = $this->input->post('kesimpulan');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
//            $this->form_validation->set_rules('no_sampel', 'No Sample', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act.'&id_lab='.$id_lab));
            } else {
                try {
                    $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                    $pengaturan     = $this->db->get('tbl_pengaturan')->row();
                    
                    $data = [
                        'tgl_masuk'     => (!empty($tgl_simpan) ? $this->tanggalan->tgl_indo_sys($tgl_masuk) : date('Y-m-d')).' '.date('H:i:s'),
                        'tgl_modif'     => date('Y-m-d H:i:s'),
                        'id_dokter'     => $dokter,
                        'hsl_irama'     => $hsl_irama,
                        'hsl_frek'      => $hsl_frek,
                        'hsl_axis'      => $hsl_axis,
                        'hsl_pos'       => $hsl_pos,
                        'hsl_zona'      => $hsl_zona,
                        'hsl_gelp'      => $hsl_gelp,
                        'hsl_int'       => $hsl_int,
                        'hsl_qrs'       => $hsl_qrs,
                        'hsl_st'        => $hsl_st,
                        'hsl_gelt'      => $hsl_gelt,
                        'hsl_gelu'      => $hsl_gelu,
                        'hsl_lain'      => $hsl_lain,
                        'kesimpulan'    => $kesimpulan,
                        'status'        => '1'
                    ];
                    
                    # Masukkan ke tabel lab spirometri
                    $this->db->where('id', general::dekrip($id_lab))->update('tbl_trans_medcheck_lab_ekg', $data);
                    
                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("EKG berhasil disimpan !");');
                    
                    redirect(base_url('medcheck/tambah.php?act=pen_ekg_input&id='.$id.'&status='.$status.'&id_lab='.$id_lab));
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?act=pen_ekg_input&id='.$id.'&status='.$status.'&id_lab='.$id_lab));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    public function set_medcheck_lab_ekg_file() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_lab     = $this->input->post('id_lab_ekg');
            $tgl_masuk  = $this->input->post('tgl_masuk');
            $no_sample  = $this->input->post('no_sampel');
            $dokter     = $this->input->post('dokter');
            $judul      = $this->input->post('judul');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
//            $this->form_validation->set_rules('no_sampel', 'No Sample', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?act=pen_ekg_upload&id='.$id.'&status='.$status.'&id_lab='.$id_lab));
            } else {
                $pengaturan     = $this->db->get('tbl_pengaturan')->row();
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_pasien     = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row();
                $no_rm          = strtolower($sql_pasien->kode_dpn).$sql_pasien->kode;
                $folder         = realpath('./file/pasien/'.$no_rm);
                
                try {
                    if (!empty($_FILES['fupload']['name'])) {
                        // Check if folder exists, create if not
                        if (!is_dir($folder)) {
                            mkdir($folder, 0777, true);
                        }
                        
                        $config = [
                            'upload_path'      => $folder,
                            'allowed_types'    => 'jpg|png|jpeg',
                            'remove_spaces'    => TRUE,
                            'overwrite'        => TRUE,
                            'file_name'        => 'medc_'.$sql_medc->no_rm.'_ekg'.sprintf('%05d', rand(1,256))
                        ];
                        
                        $this->load->library('upload', $config);
                        
                        if (!$this->upload->do_upload('fupload')) {
                            throw new Exception($this->upload->display_errors());
                        }
                        
                        $f = $this->upload->data();
                        
                        $this->load->library('image_lib');
                        $configer = [
                            'image_library'   => 'gd2',
                            'source_image'    => $f['full_path'],
                            'width'           => 2048,
                        ];
                        
                        $this->image_lib->clear();
                        $this->image_lib->initialize($configer);
                        $this->image_lib->resize();
                        $this->image_lib->rotate();
                    } else {
                        throw new Exception("No file uploaded");
                    }
                    
                    $data_ekg = [
                        'id_medcheck'       => $sql_medc->id,
                        'id_lab_ekg'        => general::dekrip($id_lab),
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'tgl_modif'         => date('Y-m-d H:i:s'),
                        'judul'             => $judul,
                        'file_name'         => $f['orig_name'],
                        'file_name_orig'    => $f['client_name'],
                        'file_ext'          => $f['file_ext'],
                        'file_type'         => $f['file_type'],
                    ];
                
                    # Masukkan ke tabel lab ekg file
                    $this->db->insert('tbl_trans_medcheck_lab_ekg_file', $data_ekg);
                
                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("EKG berhasil diupload !");');
                
                    redirect(base_url('medcheck/tambah.php?act=pen_ekg_upload&id='.$id.'&status='.$status.'&id_lab='.$id_lab));
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?act=pen_ekg_upload&id='.$id.'&status='.$status.'&id_lab='.$id_lab));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_lab_hapus_ekg() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $act        = $this->input->get('act');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;

            $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
            $sql_medc_ekg   = $this->db->where('id', general::dekrip($item_id))->get('tbl_trans_medcheck_lab_ekg')->row();
            
            if($sql_medc->num_rows() > 0){
                /* Transaksi Database */
                $this->db->trans_begin();
                
                # Hapus ke tabel medcheck berkas ekg
                $this->db->where('id_berkas', $sql_medc_ekg->id)->delete('tbl_trans_medcheck_file');
                
                # Hapus ke tabel medcheck ekg
                $this->db->where('id', general::dekrip($item_id))->delete('tbl_trans_medcheck_lab_ekg');

                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();

                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Permintaan ekg gagal dihapus !");');
                } else {
                    $this->db->trans_commit();

                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Permintaan ekg sudah dihapus !");');
                }
            }

            redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_lab_finish() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $act        = $this->input->get('act');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;
            
            $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
            
            if($sql_medc->num_rows() > 0){
                /* Transaksi Database */
                $this->db->trans_begin();
                
                # Update data lab
                $this->db->where('id', general::dekrip($item_id))->update('tbl_trans_medcheck_lab', array('tgl_modif' => date('Y-m-d H:i:s'),'tgl_keluar' => date('Y-m-d H:i:s'),'status'  => '2'));
                $this->db->where('id', $sql_medc->row()->id)->update('tbl_trans_medcheck', array('tgl_periksa_lab_keluar' => date('Y-m-d H:i:s')));

                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();

                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Pemeriksaan laboratorium gagal diselesaikan !");');
                } else {
                    $this->db->trans_commit();

                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Pemeriksaan laboratorium berhasil diselesaikan !");');
                }
            }

            redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_lab='.$item_id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_lab_batal() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $act        = $this->input->get('act');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;
            
            $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
            
            if($sql_medc->num_rows() > 0){
                /* Transaksi Database */
                $this->db->trans_begin();
                
                # Update data lab
                $this->db->where('id', general::dekrip($item_id))->update('tbl_trans_medcheck_lab', array('tgl_keluar'=>'0000-00-00 00:00:00','status'  => '0'));

                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();

                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Pemeriksaan laboratorium gagal dibatalkan !");');
                } else {
                    $this->db->trans_commit();

                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Pemeriksaan laboratorium berhasil dibatalkan !");');
                }
            }

            redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_lab='.$item_id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_rad() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $status = $this->input->get('status');
            
            try {
                if(empty($id)) {
                    throw new Exception("ID tidak boleh kosong");
                }
                
                $sql_doc_rad= $this->db->where('id', '271')->get('v_master_dokter')->row(); 
                $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck'); 
                
                if($sql_medc->num_rows() == 0) {
                    throw new Exception("Data medcheck tidak ditemukan");
                }
                
                $pengaturan = $this->db->get('tbl_pengaturan')->row();
                   
                $nomer      = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_rad')->num_rows() + 1;
                $no_surat   = sprintf('%03d', $nomer).'/'.$pengaturan->kode_rad.'/'.date('m').'/'.date('Y');
                $grup       = $this->ion_auth->get_users_groups()->row();
                $is_rad     = ($grup->name == 'radiografer' ? '2' : '0');
                $is_rad_id  = ($grup->name == 'radiografer' ? $this->ion_auth->user()->row()->id : '0');
                $is_doc_id  = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : $sql_doc_rad->id_user);
               
                $data = [
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'tgl_masuk'     => date('Y-m-d H:i:s'),
                    'id_medcheck'   => $sql_medc->row()->id,
                    'id_pasien'     => $sql_medc->row()->id_pasien,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'id_radiografer'=> $is_rad_id,
                    'id_dokter'     => $is_doc_id,
                    'no_rad'        => $no_surat,
                    'no_sample'     => '-',
                    'status'        => '0',
                ];
                
                $this->db->trans_begin();
                
                $this->db->insert('tbl_trans_medcheck_rad', $data);
                $last_id = $this->db->insert_id();
                
                $this->db->where('id', general::dekrip($id))->update('tbl_trans_medcheck', ['tgl_periksa_rad' => date('Y-m-d H:i:s')]);
                
                if ($this->db->trans_status() === FALSE) {
                    $this->db->trans_rollback();
                    throw new Exception("Gagal menyimpan data radiologi");
                } else {
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data permintaan radiologi berhasil dibuat")');
                }
                    
                    redirect(base_url('medcheck/tambah.php?act='.($grup->name == 'dokter' ? 'rad_input' : 'rad_surat').'&id='.general::enkrip($sql_medc->row()->id).'&id_rad='.general::enkrip($last_id).'&status='.$status));
            } catch (Exception $e) {
                if ($this->db->trans_status() === FALSE) {
                    $this->db->trans_rollback();
                }
                
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'")');
                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_rad_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_rad     = $this->input->post('id_rad');
            $id_user    = $this->input->post('id_user');
            $status     = $this->input->post('status');
            $status_rad = $this->input->post('status_rad');
            $no_sample  = $this->input->post('no_sampel');
            $dokter     = $this->input->post('dokter');
            $dokter_rad = $this->input->post('dokter_kirim');
            $dokter_nm  = $this->input->post('dokter_kirim_nm');
            $tipe_dr    = $this->input->post('tipe_dokter');
            $kesan      = $this->input->post('kesan');
            $route      = $this->input->post('route');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
//            $this->form_validation->set_rules('tipe_dokter', 'Tipe Dokter', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'            => form_error('id'),
//                    'tipe_dokter'   => form_error('tipe_dokter'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?act=rad_surat&id='.$id.'&id_rad='.$id_rad.'&status='.$status));
            } else {
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_medc_rad   = $this->db->where('id', general::dekrip($id_rad))->get('tbl_trans_medcheck_rad')->row();

                $data = [
                    'tgl_modif'         => date('Y-m-d H:i:s'),
                    'tgl_keluar'        => ($status_rad == '4' ? date('Y-m-d H:i:s') : '0000-00-00 00:00:00'),
                    'id_dokter'         => $dokter,
                    'id_dokter_kirim'   => $dokter_rad,
                    'id_radiografer'    => (!empty($id_user) ? $id_user : $this->ion_auth->user()->row()->id),
                    'dokter_kirim'      => $dokter_nm,
                    'no_sample'         => $no_sample,
                    'ket'               => $kesan,
                    'status'            => $status_rad,
                    'status_dokter_krm' => $tipe_dr,
                ];
                
                $this->db->where('id', $sql_medc_rad->id)->update('tbl_trans_medcheck_rad', $data);
                
                if($status_rad == '4'){
                    $this->db->where('id', $sql_medc->id)->update('tbl_trans_medcheck', ['tgl_periksa_rad_keluar' => date('Y-m-d H:i:s')]);
                }
                
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data radiologi berhasil disimpan");');
                redirect(base_url('medcheck/tambah.php?act=rad_surat&id='.$id.'&id_rad='.general::enkrip($sql_medc_rad->id).'&status='.$status.(!empty($route) ? '&route='.$route : '')));                
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_rad_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;
            
            $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
            
            if($sql_medc->num_rows() > 0){
                try {
                /* Transaksi Database */
                $this->db->trans_begin();

                # Hapus ke tabel medcheck det
                $this->db->where('id_rad', general::dekrip($item_id))->delete('tbl_trans_medcheck_det');
                $this->db->where('id_rad', general::dekrip($item_id))->delete('tbl_trans_medcheck_rad_det');
                $this->db->where('id_rad', general::dekrip($item_id))->delete('tbl_trans_medcheck_rad_file');
                
                # Hapus ke tabel medcheck lab
                $this->db->where('id', general::dekrip($item_id))->delete('tbl_trans_medcheck_rad');

                    # Commit jika semua query berhasil
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();
                        throw new Exception("Gagal menghapus data radiologi");
                } else {
                    $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data radiologi berhasil dihapus");');
                    }
                } catch (Exception $e) {
                    # Pastikan rollback jika ada exception
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                }
            }

            redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_mcu() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $status = $this->input->get('status');
            
            try {
                if (!empty($id)) {
                    $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck'); 
                    $pengaturan = $this->db->get('tbl_pengaturan')->row();
                       
                    $nomer      = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_mcu')->num_rows() + 1;
                    $no_surat   = sprintf('%03d', $nomer).'/MCU/'.date('m').'/'.date('Y');
                    $grup       = $this->ion_auth->get_users_groups()->row();
                    $is_doc_id  = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : '0');
                   
                    $data = [
                        'tgl_simpan'    => date('Y-m-d H:i:s'),
                        'tgl_masuk'     => date('Y-m-d H:i:s'),
                        'id_medcheck'   => $sql_medc->row()->id,
                        'id_pasien'     => $sql_medc->row()->id_pasien,
                        'id_user'       => $this->ion_auth->user()->row()->id,
                        'id_dokter'     => $is_doc_id,
                        'no_mcu'        => $no_surat,
                        'no_sample'     => '-',
                        'status'        => '0',
                    ];
                    
                    if ($sql_medc->num_rows() > 0) {
                        $this->session->set_flashdata('medcheck', '<div class="alert alert-success">Data permintaan mcu di buat</div>');
                        crud::simpan('tbl_trans_medcheck_mcu', $data);
                        $last_id = crud::last_id();
                        
                        redirect(base_url('medcheck/tambah.php?act='.($grup->name == 'dokter' ? 'mcu_input' : 'mcu_surat').'&id='.general::enkrip($sql_medc->row()->id).'&id_mcu='.general::enkrip($last_id).'&status='.$status));
                    } else {
                        redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->row()->id).'&status='.$status));
                    }
                } else {
                    throw new Exception("ID tidak valid");
                }
            } catch (Exception $e) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                redirect(base_url('medcheck'));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_mcu_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_mcu     = $this->input->post('id_mcu');
            $id_user    = $this->input->post('id_user');
            $status     = $this->input->post('status');
            $status_mcu = $this->input->post('status_mcu');
            $no_sample  = $this->input->post('no_sampel');
            $dokter     = $this->input->post('dokter');
            $dokter_mcu = $this->input->post('dokter_kirim');
            $dokter_nm  = $this->input->post('dokter_kirim_nm');
            $tipe_dr    = $this->input->post('tipe_dokter');
            $kesan      = $this->input->post('kesan');
            $route      = $this->input->post('route');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
//            $this->form_validation->set_rules('tipe_dokter', 'Tipe Dokter', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'            => form_error('id'),
//                    'tipe_dokter'   => form_error('tipe_dokter'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?act=mcu_surat&id='.$id.'&id_mcu='.$id_mcu.'&status='.$status));
            } else {
                try {
                    $sql_medc_mcu = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_mcu')->row();
                    
                    if (!$sql_medc_mcu) {
                        throw new Exception("Data MCU tidak ditemukan");
                    }

                    $data = [
                        'tgl_modif'         => date('Y-m-d H:i:s'),
                        'id_dokter'         => $dokter,
                        'id_dokter_kirim'   => $dokter_mcu,
                        'id_mcuiografer'    => (!empty($id_user) ? $id_user : $this->ion_auth->user()->row()->id),
                        'dokter_kirim'      => $dokter_nm,
                        'no_sample'         => $no_sample,
                        'ket'               => $kesan,
                        'status'            => $status_mcu,
                        'status_dokter_krm' => $tipe_dr,
                    ];
                    
                    $this->db->trans_begin();
                    
                    $this->db->where('id', $sql_medc_mcu->id)->update('tbl_trans_medcheck_mcu', $data);
                    
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception("Gagal menyimpan data MCU");
                    } else {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data MCU berhasil disimpan")');
                    }
                    
                    redirect(base_url('medcheck/tambah.php?act=mcu_surat&id='.$id.'&id_mcu='.general::enkrip($sql_medc_mcu->id).'&status='.$status.(!empty($route) ? '&route='.$route : '')));
                } catch (Exception $e) {
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                    }
                    
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'")');
                    redirect(base_url('medcheck/tambah.php?act=mcu_surat&id='.$id.'&id_mcu='.$id_mcu.'&status='.$status));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_mcu_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;
            
            $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
            
            if($sql_medc->num_rows() > 0){
                $this->session->set_flashdata('medcheck', '<div class="alert alert-success">Transaksi berhasil dihapus</div>');
                
                /* Transaksi Database */
                $this->db->trans_begin();

                # Hapus ke tabel medcheck det
//                $this->db->where('id_mcu', general::dekrip($item_id))->delete('tbl_trans_medcheck_det');
                $this->db->where('id_mcu', general::dekrip($item_id))->delete('tbl_trans_medcheck_mcu_det');
                
                # Hapus ke tabel medcheck lab
                $this->db->where('id', general::dekrip($item_id))->delete('tbl_trans_medcheck_mcu');

                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();

                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck', '<div class="alert alert-danger">Data lab gagal dihapus !!</div>');
                } else {
                    $this->db->trans_commit();

                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck', '<div class="alert alert-success">Data lab berhasil dihapus !!</div>');
                }
            }

            redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_resep() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $status = $this->input->get('status');
            
            if(!empty($id)){
                // Start Transaction
                $this->db->trans_begin();
                
                try {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
                    
                    if($sql_medc->num_rows() > 0) {
                $pengaturan = $this->db->get('tbl_pengaturan')->row();
    
                $nomer      = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_resep')->num_rows() + 1;
                $no_surat   = sprintf('%03d', $nomer).'/'.$pengaturan->kode_resep.'/'.date('m').'/'.date('Y');
                $grup       = $this->ion_auth->get_users_groups()->row();
                $is_farm    = ($grup->name == 'farmasi' ? '2' : '0');
                $is_farm_id = ($grup->name == 'farmasi' ? $this->ion_auth->user()->row()->id : '0');                
                        $is_doc_id  = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : $sql_medc->row()->id_dokter);
               
                        $data = [
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'id_medcheck'   => $sql_medc->row()->id,
                    'id_pasien'     => $sql_medc->row()->id_pasien,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'id_farmasi'    => $is_farm_id,
                    'id_dokter'     => $is_doc_id,
                    'no_resep'      => $no_surat,
                    'status'        => $is_farm,
                        ];
                        
                        # Insert resep record
                        $this->db->insert('tbl_trans_medcheck_resep', $data);
                        $last_id = $this->db->insert_id();
                        
                        # Update medcheck record
                        $this->db->where('id', $sql_medc->row()->id)->update('tbl_trans_medcheck', ['tgl_resep_msk' => date('Y-m-d H:i:s')]);
                        
                        # Check transaction status
                        if ($this->db->trans_status() === FALSE) {
                            $this->db->trans_rollback();
                            throw new Exception("Gagal menyimpan data resep");
                        }
                        
                        $this->db->trans_commit();
                        
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data resep berhasil disimpan");');
                    redirect(base_url('medcheck/tambah.php?act=res_input&id='.general::enkrip($sql_medc->row()->id).'&id_resep='.general::enkrip($last_id).'&status='.$status));
                    } else {
                        throw new Exception("Data medcheck tidak ditemukan");
                    }
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck'));
                }
        } else {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("ID tidak valid");');
                redirect(base_url('medcheck'));
            }
        } else {
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_resep_copy() {
        if (akses::aksesLogin() == TRUE) {
            $id       = $this->input->post('id');
            $id_medc  = $this->input->post('id_medc');
            $id_resep = $this->input->post('id_resep');
            $petugas  = $this->input->post('petugas');
            $foto     = $this->input->post('foto');
            $status   = $this->input->post('status');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('id', $msg_error);
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Validasi form gagal!");');

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
            } else {
                try {
                    // Start transaction
                    $this->db->trans_begin();
                    
                    $sql_medc   = $this->db->where('id', general::dekrip($id_medc))->get('tbl_trans_medcheck')->row(); 
                    $pengaturan = $this->db->get('tbl_pengaturan')->row();
        
                    $nomer    = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_resep')->num_rows() + 1;
                    $no_surat = sprintf('%03d', $nomer).'/'.$pengaturan->kode_resep.'/'.date('m').'/'.date('Y');
                    
                    $grup    = $this->ion_auth->get_users_groups()->row();
                    $is_farm = ($grup->name == 'farmasi' ? '2' : '0');
                    
                    $data = [
                        'tgl_simpan'  => date('Y-m-d H:i:s'),
                        'id_medcheck' => $sql_medc->id,
                        'id_pasien'   => $sql_medc->id_pasien,
                        'id_user'     => $this->ion_auth->user()->row()->id,
                        'id_farmasi'  => $this->ion_auth->user()->row()->id,
                        'id_dokter'   => $sql_medc->id_dokter,
                        'no_resep'    => $no_surat,
                        'status'      => $is_farm,
                    ];
                    
                    $this->db->insert('tbl_trans_medcheck_resep', $data);
                    $last_id = $this->db->insert_id();
                    
                    // Check transaction status
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception("Gagal menyimpan resep");
                    }
                    
                    $this->db->trans_commit();
                    
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Resep berhasil di copy!");');
                    redirect(base_url('medcheck/tambah.php?act=res_input_copy&id='.$id.'&id_resep='.$id_resep.'&status='.$status));  
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
                }
            }
        } else {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    # Menandai resep obat pulang rawat inap
    public function set_medcheck_resep_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_rsp     = $this->input->get('id_resep');
            $status     = $this->input->get('status');
            $status_plg = $this->input->get('status_plg');
            
            if(!empty($id) AND !empty($id_rsp)){
                $sql_res_ck = $this->db->where('id_medcheck', general::dekrip($id))->where('status_plg', '1')->get('tbl_trans_medcheck_resep'); 
                $sql_res    = $this->db->where('id', general::dekrip($id_rsp))->get('tbl_trans_medcheck_resep')->row(); 
                $pengaturan = $this->db->get('tbl_pengaturan')->row();
               
                $data = [
                    'tgl_modif'  => date('Y-m-d H:i:s'),
                    'status_plg' => $status_plg,
                ];
                
                if($sql_res_ck->num_rows() == 1 AND $sql_res_ck->row()->status_plg == $status_plg){
                    $res = $sql_res_ck->row();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Resep pulang hanya bisa di simpan 1 kali, silahkan batalkan resep sebelumnya !");');
                }else{                
                    $this->db->trans_start();
                    
                    # Simpan data ke dalam database
                    $this->db->where('id', $sql_res->id)->update('tbl_trans_medcheck_resep', $data);
                    
                    # Simpan data ke dalam database
                    $this->db->where('id', general::dekrip($id))->update('tbl_trans_medcheck', ['tgl_ranap_keluar' => date('Y-m-d H:i:s')]);
                    
                    $this->db->trans_complete();
                
                    if($status_plg == '0'){
                        $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Resep ['.$sql_res->no_resep.'] sudah dibatalkan sebagai resep pulang.");');
                    }else{
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Resep ['.$sql_res->no_resep.'] sudah set sebagai resep pulang dan akan tampil pada resume medis pasien.");');
                    }
                }
                
                redirect(base_url('medcheck/tambah.php?act=res_input&id='.$id.'&id_resep='.general::enkrip($sql_res->id).'&status='.$status));
            }else{
                $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
                redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->row()->id).'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_resep_upd_ttd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_resep   = $this->input->post('id_resep');
            $petugas    = $this->input->post('petugas');
            $foto       = $this->input->post('foto');
            $status     = $this->input->post('status_res');
            
            $this->form_validation->set_error_delimiters('', '');
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $response = [
                    'success' => false,
                    'message' => form_error('id')
                ];
                echo json_encode($response);
                return;
            } else {
                try {
                    $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                    $sql_pas    = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row();
                    
                    # Config File Foto Pasien
                    $kode       = sprintf('%05d', $sql_pas->kode);
                    $no_rm      = strtolower($sql_pas->kode_dpn.$sql_pas->kode);
                    $path       = 'file/pasien/'.$no_rm.'/';
                    $filename   = '';
                    
                    # Buat Folder Untuk Foto Pasien jika belum ada
                    if (!empty($foto)) {
                        $dir_pasien = FCPATH.'/';
                        if(!file_exists($dir_pasien.$path)){
                            mkdir($dir_pasien.$path, 0777, true);
                        }
                        
                        # Simpan foto dari kamera ke dalam format file *.png dari base64
                        $filename = $path.'ttd_resep_'.$kode.'.png';
                        general::base64_to_jpeg($foto, $filename);
                    }
                    
                    $data = [
                        'tgl_ttd'       => date('Y-m-d H:i:s'),
                        'tgl_resep_trm' => date('Y-m-d H:i:s'),
                        'id_farmasi'    => $petugas,
                        'ttd_obat'      => $filename,
                        'status_resep'  => $status
                    ];
                    
                    # Simpan data ke dalam database
                    $this->db->where('id', $sql_medc->id)->update('tbl_trans_medcheck', $data);
                    
                    $response = [
                        'success' => true,
                        'message' => 'Tanda tangan resep berhasil disimpan'
                    ];
                } catch (Exception $e) {
                    log_message('error', 'Error in set_medcheck_resep_upd_ttd: '.$e->getMessage());
                    $response = [
                        'success' => false,
                        'message' => 'Terjadi kesalahan: '.$e->getMessage()
                    ];
                }
                
                // Set content type header before sending response
                header('Content-Type: application/json');
                echo json_encode($response);
            }
        } else {
            $response = [
                'success' => false,
                'message' => 'Authentifikasi gagal, silahkan login ulang!'
            ];
            echo json_encode($response);
        }
    }

    public function set_medcheck_resep_proses() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_resep   = $this->input->post('id_resep');
            $status     = $this->input->post('status');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'        => form_error('id'),
                );

                $this->session->set_flashdata('id', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'status='.$status));
            } else {
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_res   = $this->db->where('id', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep')->row();  
                $pengaturan     = $this->db->get('tbl_pengaturan')->row();
                
                foreach ($this->cart->contents() as $cart){
                    $sql_item       = $this->db->where('id', $cart['options']['id_item'])->get('tbl_m_produk')->row();
                                       
                    $data[] = array(
                        'id_medcheck'   => (int)$sql_medc->id,
                        'id_resep'      => (int)general::dekrip($id_resep),
                        'id_item'       => (int)$cart['options']['id_item'],
                        'id_item_kat'   => (int)$cart['options']['id_item_kat'],
                        'id_item_sat'   => (int)$cart['options']['id_item_sat'],
                        'kode'          => $sql_item->kode,
                        'item'          => $sql_item->produk,
                        'dosis'         => $cart['options']['dos_jml1'].' '.$cart['options']['dos_sat'].' Tiap '.$cart['options']['dos_jml2'].' '.$cart['options']['dos_wkt'],
                        'dosis_ket'     => $cart['options']['dos_ket'],
                        'harga'         => $cart['options']['harga'],
                        'jml'           => (int)$cart['qty'],
                        'jml_satuan'    => '1',
                        'satuan'        => $cart['options']['satuan'],
                        'status'        => (int)$status,
                    );
                    
                    $data_resep = array(
                        'id_medcheck'   => (int)$sql_medc->id,
                        'id_resep'      => (int)general::dekrip($id_resep),
                        'id_item'       => (int)$cart['options']['id_item'],
                        'id_item_kat'   => (int)$cart['options']['id_item_kat'],
                        'id_item_sat'   => (int)$cart['options']['id_item_sat'],
                        'id_user'       => $this->ion_auth->user()->row()->id,
                        'tgl_simpan'    => $cart['options']['tgl_simpan'],
                        'tgl_modif'     => date('Y-m-d H:i:s'),
                        'kode'          => $sql_item->kode,
                        'item'          => $sql_item->produk,
                        'dosis'         => $cart['options']['dos_jml1'].' '.$cart['options']['dos_sat'].' Tiap '.$cart['options']['dos_jml2'].' '.$cart['options']['dos_wkt'],
                        'dosis_ket'     => $cart['options']['dos_ket'],
                        'harga'         => $cart['options']['harga'],
                        'jml'           => (int)$cart['qty'],
                        'jml_satuan'    => '1',
                        'satuan'        => $cart['options']['satuan'],
                        'status'        => (int)$status,
                        'status_resep'  => '',
                    );
                    
                    // Simpan ke tabel resep
                    crud::simpan('tbl_trans_medcheck_resep_det', $data_resep);
                }
                
                // Convert ke json biar gampang
                $item = json_encode($data);
                
                // Simpan ke database
                crud::update('tbl_trans_medcheck_resep', 'id', $sql_medc_res->id, array('item'=>$item, 'status'=>'1'));
                
                // Hapus cart session ci
                $this->cart->destroy();
                
                // Balikin ke halaman semula
                redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->id).'&status='.$status));
                
//                echo '<pre>';
//                print_r(json_decode($item));
//                echo '</pre>';
//                
//                echo '<pre>';
//                print_r($this->cart->contents());
//                echo '</pre>';    
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    public function set_medcheck_resep_status() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_resep   = $this->input->post('id_resep');
            $id_farmasi = $this->input->post('id_farmasi');
            $msg        = $this->input->post('msg');
            $status     = $this->input->post('status');
            $status_res = $this->input->post('status_res');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('id_resep', 'ID Resep', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'        => form_error('id'),
                    'id_resep'  => form_error('id_resep'),
                ];

                $this->session->set_flashdata('resep', $msg_error);

                redirect(base_url('medcheck/tambah.php?act=res_input&id='.$id.'&id_resep='.$id_resep.'&status='.$status));
            } else {
                try {
                    // Start transaction
                    $this->db->trans_begin();
                    
                // Set status diproses oleh farmasi atau tidak
                    $data = [
                    'tgl_modif'   => date('Y-m-d H:i:s'),
                    'tgl_masuk'   => ($status_res == '2' ? date('Y-m-d H:i:s') : '0000-00-00 00:00:00'),
                    'id_farmasi'  => general::dekrip($id_farmasi),
                    'status'      => $status_res,
                    ];
                    
                    $this->db->where('id', general::dekrip($id_resep))->update('tbl_trans_medcheck_resep', $data);
                    // Check if transaction successful
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception("Database transaction failed");
                    } else {
                        $this->db->trans_commit();
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("'.$msg.'")');
                    }
                    
                    redirect(base_url('medcheck/tambah.php?act=res_input&id='.$id.'&id_resep='.$id_resep.'&status='.$status));
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Terjadi kesalahan: ' . $e->getMessage() . '")');
                redirect(base_url('medcheck/tambah.php?act=res_input&id='.$id.'&id_resep='.$id_resep.'&status='.$status));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_resep_farm() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_resep   = $this->input->post('id_resep');
            $id_produk  = $this->input->post('id_produk');
            $status     = $this->input->post('status');
            $status_res = $this->input->post('status_res');
            
            if(!empty($id_resep)){
                $sql_resep      = $this->db->where('id', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep')->row();
                $sql_resep_det  = $this->db->where('id_resep', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep_det')->result();
                $item           = json_decode($sql_resep->item);
                
                foreach ($sql_resep_det as $cart){
                    $id_item = general::dekrip($id_produk);

                    $subtotal       = $cart->jml * $cart->harga;                    
                    $data_res_det = array(
                        'id_medcheck'   => (int)$cart->id_medcheck,
                        'id_resep'      => (int)general::dekrip($id_resep),
                        'id_item'       => (int)$cart->id_item,
                        'id_item_kat'   => (int)$cart->id_item_kat,
                        'id_item_sat'   => (int)$cart->id_item_sat,
                        'id_user'       => (int)$cart->id_user,
                        'tgl_simpan'    => $cart->tgl_simpan,
                        'tgl_modif'     => date('Y-m-d H:i:s'),
                        'kode'          => $cart->kode,
                        'item'          => $cart->item,
                        'dosis'         => $cart->dosis,
                        'dosis_ket'     => $cart->dosis_ket,
                        'keterangan'    => $cart->keterangan,
                        'harga'         => (float)$cart->harga,
                        'jml'           => (int)$cart->jml,
                        'jml_satuan'    => (int)$cart->jml_satuan,
                        'subtotal'      => (float)$subtotal,
                        'satuan'        => $cart->satuan,
                        'status'        => '4',
//                        'status'        => (int)$cart->status,
                    );
                    
                    crud::simpan('tbl_trans_medcheck_det', $data_res_det);
     
                    if($cart->id_item == $id_item){
                        crud::simpan('tbl_trans_medcheck_det', (array)$cart);
                        $last_id = crud::last_id();
                    }
                    
                    $farmasi = array(
                        'tgl_modif'     => date('Y-m-d H:i:s'),
                        'tgl_keluar'    => ($status == '4' ? date('Y-m-d H:i:s') : '0000-00-00 00:00:00'),
                        'id_farmasi'    => $this->ion_auth->user()->row()->id,
                        'status'        => $status
                    );
                    
                    crud::update('tbl_trans_medcheck_resep', 'id', (int)general::dekrip($id_resep), $farmasi);
                }
                
                redirect(base_url('medcheck/resep/tambah.php?id='.$id.'&id_resep='.general::enkrip($sql_resep->id).'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_resep_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;
            
            $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
            
            if($sql_medc->num_rows() > 0){
                $this->session->set_flashdata('medcheck', '<div class="alert alert-success">Transaksi berhasil dihapus</div>');
                
                /* Transaksi Database */
                $this->db->trans_start();

                # Update ke tabel resep
                $this->db->where('id_resep', general::dekrip($item_id))->delete('tbl_trans_medcheck_resep_det');
                $this->db->where('id_resep', general::dekrip($item_id))->delete('tbl_trans_medcheck_det');
                $this->db->where('id', general::dekrip($item_id))->delete('tbl_trans_medcheck_resep');
                
                $this->db->trans_complete();
            }
            
            redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }    

    # Pemeriksaan Penunjang
    public function set_medcheck_pen_hrv() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $status = $this->input->get('status');
            
            if(!empty($id)) {
                // Start Transaction
                $this->db->trans_begin();
                
                try {
                $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck'); 
                    
                    if($sql_medc->num_rows() > 0) {
                $sql_pasien = $this->db->where('id', $sql_medc->row()->id_pasien)->get('tbl_m_pasien')->row(); 
                $pengaturan = $this->db->get('tbl_pengaturan')->row();
                   
                $nomer      = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_pen_hrv')->num_rows() + 1;
                $no_surat   = sprintf('%03d', $nomer).'/'.$pengaturan->kode_surat.'/'.date('m').'/'.date('Y');
                $grup       = $this->ion_auth->get_users_groups()->row();
                $is_farm_id = ($grup->name == 'analis' ? $this->ion_auth->user()->row()->id : '0');
                $is_doc_id  = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : '0');
               
                        $data = [
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'tgl_masuk'     => date('Y-m-d H:i:s'),
                    'id_medcheck'   => $sql_medc->row()->id,
                    'id_pasien'     => $sql_medc->row()->id_pasien,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'id_analis'     => $is_farm_id,
                    'id_dokter'     => $is_doc_id,
                    'no_lab'        => $no_surat,
                    'status'        => '0',
                        ];
                
                    $this->db->insert('tbl_trans_medcheck_pen_hrv', $data);
                    $last_id = crud::last_id();
                    
                    # Masukkan HRV ke tabel riwayat berkas
                        $data_file_ekg = [
                        'id_medcheck'       => $sql_medc->row()->id,
                        'id_pasien'         => $sql_medc->row()->id_pasien,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'id_berkas'         => $last_id,
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'tgl_masuk'         => date('Y-m-d H:i'),
                        'judul'             => 'HASIL PEMBACAAN HRV',
                        'keterangan'        => $sql_pasien->nama_pgl,
                        'file_name'         => '/medcheck/surat/cetak_pdf_pen_hrv.php?id='.general::enkrip($sql_medc->row()->id).'&id_pen='.general::enkrip($last_id).'&status='.$status,
                        'file_ext'          => '.pdf',
                        'file_type'         => 'application/pdf',
                        'status'            => '2',
                        ];
                    $this->db->insert('tbl_trans_medcheck_file', $data_file_ekg);
                    
                        # Cek status transact MySQL
                        if ($this->db->trans_status() === FALSE) {
                            # Rollback jika gagal
                            $this->db->trans_rollback();
                            throw new Exception("Gagal menyimpan data HRV");
                        } else {
                            $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Permintaan HRV sudah dibuat !");');
                    redirect(base_url('medcheck/tambah.php?act=pen_hrv&id='.general::enkrip($sql_medc->row()->id).'&id_pen='.general::enkrip($last_id).'&status='.$status));
                        }
                    } else {
                        $this->db->trans_rollback();
                        redirect(base_url('medcheck/tambah.php'));
                    }
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Terjadi kesalahan: '.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php'));
                }
            } else {
                redirect(base_url('medcheck/tambah.php'));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_pen_hrv_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_pen     = $this->input->post('id_pen');
            $tgl_masuk  = $this->input->post('tgl_masuk');
            $no_sample  = $this->input->post('no_sampel');
            $dokter     = $this->input->post('dokter');
            $hsl_mhr    = $this->input->post('hsl_mhr');
            $hsl_sdnn   = $this->input->post('hsl_sdnn');
            $hsl_rmssd  = $this->input->post('hsl_rmssd');
            $hsl_psi    = $this->input->post('hsl_psi');
            $hsl_lhhf   = $this->input->post('hsl_lhhf');
            $hsl_eb     = $this->input->post('hsl_eb');
            $hsl_ans    = $this->input->post('hsl_ans');
            $hsl_pi     = $this->input->post('hsl_pi');
            $hsl_es     = $this->input->post('hsl_es');
            $hsl_rrv    = $this->input->post('hsl_rrv');
            $ket        = $this->input->post('ket');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                // Start Transaction
                $this->db->trans_begin();
                
                try {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                    
                    $data = [
                        'tgl_masuk'     => (!empty($tgl_masuk) ? $this->tanggalan->tgl_indo_sys($tgl_masuk) : date('Y-m-d')).' '.date('H:i:s'),
                    'tgl_modif'     => date('Y-m-d H:i:s'),
                    'id_dokter'     => $dokter,
                    'hsl_mhr'       => $hsl_mhr,
                    'hsl_sdnn'      => $hsl_sdnn,
                    'hsl_rmssd'     => $hsl_rmssd,
                    'hsl_psi'       => $hsl_psi,
                    'hsl_lhhf'      => $hsl_lhhf,
                    'hsl_eb'        => $hsl_eb,
                    'hsl_ans'       => $hsl_ans,
                    'hsl_pi'        => $hsl_pi,
                    'hsl_es'        => $hsl_es,
                    'hsl_rrv'       => $hsl_rrv,
                    'keterangan'    => $ket,
                    'status'        => '1'
                    ];
                
                    # Update tabel hrv
                $this->db->where('id', general::dekrip($id_pen))->update('tbl_trans_medcheck_pen_hrv', $data);
                    
                    # Check transaction status
                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Gagal menyimpan data HRV!");
                    }
                    
                    $this->db->trans_commit();
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Penunjang HRV berhasil disimpan !");');
                
                redirect(base_url('medcheck/tambah.php?act=pen_hrv_input&id='.$id.'&status='.$status.'&id_pen='.$id_pen));
                
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?act=pen_hrv_input&id='.$id.'&status='.$status.'&id_pen='.$id_pen));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_pen_hrv_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $act        = $this->input->get('act');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;

            $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
            $sql_medc_hrv   = $this->db->where('id', general::dekrip($item_id))->get('tbl_trans_medcheck_pen_hrv')->row();
            
            if($sql_medc->num_rows() > 0){
                /* Transaksi Database */
                $this->db->trans_begin();
                
                # Hapus ke tabel medcheck berkas ekg
//                $this->db->where('id_berkas', $sql_medc_hrv->id)->delete('tbl_trans_medcheck_file');
                
                # Hapus ke tabel medcheck ekg
                $this->db->where('id', general::dekrip($item_id))->delete('tbl_trans_medcheck_pen_hrv');

                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();

                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Permintaan hrv gagal dihapus !");');
                } else {
                    $this->db->trans_commit();

                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck_toast', 'toastr.warning("Permintaan hrv sudah dihapus !");');
                }
            }

            redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_surat() {
        if (akses::aksesLogin() == TRUE) {
            $id             = $this->input->post('id');
            $status         = $this->input->post('status');
            $tgl_masuk      = $this->input->post('tgl_masuk');
            $tgl_keluar     = $this->input->post('tgl_keluar');
            $tgl_kontrol    = $this->input->post('tgl_kontrol');
            $tgl_lahir      = $this->input->post('tgl_lahir');
            $wkt_lahir      = $this->input->post('wkt_lahir');
            $nm_lahir       = $this->input->post('nm_lahir');
            $nm_ayah        = $this->input->post('nm_ayah');
            $nm_ibu         = $this->input->post('nm_ibu');
            $jns_klm        = $this->input->post('jns_klm');
            $hasil          = $this->input->post('hasil');
            $dokter         = $this->input->post('dokter');
            $tb             = $this->input->post('tb');
            $td             = $this->input->post('td');
            $bb             = $this->input->post('bb');
            $bw             = $this->input->post('bw');
            $bw_ket         = $this->input->post('bw_ket');
            $tipe_surat     = $this->input->post('tipe_surat');
            $sembuh         = $this->input->post('sembuh');
            $mati_tgl       = $this->input->post('mati_tgl');
            $mati_wkt       = $this->input->post('mati_wkt');
            $mati_tmp       = $this->input->post('mati_tmp');
            $mati_pny       = $this->input->post('mati_penyebab');
            $ruj_dokter     = $this->input->post('ruj_dokter');
            $ruj_faskes     = $this->input->post('ruj_faskes');
            $ruj_keluhan    = $this->input->post('ruj_keluhan');
            $ruj_diagnos    = $this->input->post('ruj_diagnosa');
            $ruj_terapi     = $this->input->post('ruj_terapi');
            $cvd_tg_prks    = $this->input->post('cvd_tgl_periksa');
            $cvd_tg_awal    = $this->input->post('cvd_tgl_awal');
            $cvd_tg_akhr    = $this->input->post('cvd_tgl_akhir');
            $vks_nama       = $this->input->post('vks_nama');
            $vks_tg_prks    = $this->input->post('vks_tgl_periksa');
            $nza_tg_prks    = $this->input->post('napza_tgl_periksa');
            $nza_hasil      = $this->input->post('napza_hasil');
            $hml_tipe       = $this->input->post('hml_tipe');
            $hml_tipe_flt   = $this->input->post('hml_tipe_terbang');
            $hml_periksa    = $this->input->post('hml_periksa');
            $hml_tgl_awal   = $this->input->post('hml_tgl_awal');
            $hml_tgl_akhir  = $this->input->post('hml_tgl_akhir');
            $trb_tipe_flt   = $this->input->post('trb_tipe_terbang');
            $trb_periksa    = $this->input->post('trb_periksa');
            $trb_tgl_awal   = $this->input->post('trb_tgl_awal');
            $trb_tgl_akhir  = $this->input->post('trb_tgl_akhir');
            $tht_tgl                = $this->input->post('tht_tgl');
            $tht_lt_kanan           = $this->input->post('tht_lt_kanan');
            $tht_lt_kiri            = $this->input->post('tht_lt_kiri');
            $tht_membran_kanan      = $this->input->post('tht_membran_kanan');
            $tht_membran_kiri       = $this->input->post('tht_membran_kiri');
            $tht_mukosa_kanan       = $this->input->post('tht_mukosa_kanan');
            $tht_mukosa_kiri        = $this->input->post('tht_mukosa_kiri');
            $tht_konka_kanan        = $this->input->post('tht_konka_kanan');
            $tht_konka_kiri         = $this->input->post('tht_konka_kiri');
            $tht_timpa_kanan        = $this->input->post('tht_timpa_kanan');
            $tht_timpa_kiri         = $this->input->post('tht_timpa_kiri');
            $tht_tonsil_tg          = $this->input->post('tht_tonsil_tg');
            $tht_mukosa_tg          = $this->input->post('tht_mukosa_tg');
            $tht_faring_tg          = $this->input->post('tht_faring_tg');
            $tht_kesimpulan         = $this->input->post('tht_kesimpulan');
            $tht_audio              = $this->input->post('tht_audio');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'        => form_error('id'),
                );

                $this->session->set_flashdata('anamnesa', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'status='.$status));
            } else {
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $pengaturan     = $this->db->get('tbl_pengaturan')->row();
                
                switch ($tipe_surat){
                    case '1';
                        $str_tipe   = $pengaturan->kode_surat_sht;
                        break;
                    
                    case '2';
                        $str_tipe   = $pengaturan->kode_surat_skt;
                        break;
                    
                    case '3';
                        $str_tipe   = $pengaturan->kode_surat_rnp;
                        break;
                    
                    case '4';
                        $str_tipe   = $pengaturan->kode_surat_kntrl;
                        break;
                    
                    case '5';
                        $str_tipe   = $pengaturan->kode_surat_lahir;
                        break;
                    
                    case '6';
                        $str_tipe   = $pengaturan->kode_surat_mati;
                        break;
                    
                    case '7';
                        $str_tipe   = $pengaturan->kode_surat_covid;
                        break;
                    
                    case '8';
                        $str_tipe   = $pengaturan->kode_surat_rujukan;
                        break;
                    
                    case '9';
                        $str_tipe   = $pengaturan->kode_surat;
                        break;
                    
                    case '10';
                        $str_tipe   = $pengaturan->kode_surat_hamil;
                        break;
                    
                    case '11';
                        $str_tipe   = $pengaturan->kode_surat_cvd;
                        break;
                    
                    case '12';
                        $str_tipe   = $pengaturan->kode_surat_cvd;
                        break;
                    
                    case '13';
                        $str_tipe   = $pengaturan->kode_periksa;
                        break;
                    
                    case '15';
                        $str_tipe   = $pengaturan->kode_surat_tht;
                        break;
                }
                
                $nomer          = $this->db->where('tipe', $tipe_surat)->where('MONTH(tgl_simpan)', date('m'))->where('YEAR(tgl_simpan)', date('Y'))->get('tbl_trans_medcheck_surat')->num_rows() + 1;
                $no_surat       = sprintf('%03d', $nomer).'/'.$str_tipe.'/'.date('m').'/'.date('Y');
                $tgl_awal       = date_create($this->tanggalan->tgl_indo_sys($tgl_masuk));
                $tgl_akhir      = date_create($this->tanggalan->tgl_indo_sys($tgl_keluar));
                $diff           = date_diff($tgl_awal, $tgl_akhir);
                $hari           = $diff->format("%d%");
                $jml_hari       = ($tgl_awal == $tgl_akhir ? '1' : ($hari > 1 ? $hari + 1 : '2'));
                
                $data = array(
                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                    'tgl_masuk'         => (!empty($tgl_masuk) ? $this->tanggalan->tgl_indo_sys($tgl_masuk) : date('Y-m-d')),
                    'tgl_keluar'        => (!empty($tgl_keluar) ? $this->tanggalan->tgl_indo_sys($tgl_keluar) : '0000-00-00'),
                    'tgl_kontrol'       => (!empty($tgl_kontrol) ? $this->tanggalan->tgl_indo_sys($tgl_kontrol) : '0000-00-00'),
                    'id_medcheck'       => $sql_medc->id,
                    'id_dokter'         => (!empty($dokter) ? $dokter : $sql_medc->id_dokter),
                    'id_pasien'         => $sql_medc->id_pasien,
                    'id_user'           => $this->ion_auth->user()->row()->id,
                    'no_surat'          => $no_surat,
                    'lahir_tgl'         => (!empty($tgl_lahir) ? $this->tanggalan->tgl_indo_sys($tgl_lahir).' '.$wkt_lahir : '0000-00-00'),
                    'lahir_nm'          => $nm_lahir,
                    'lahir_nm_ayah'     => $nm_ayah,
                    'lahir_nm_ibu'      => $nm_ibu,
                    'jns_klm'           => (!empty($jns_klm) ? $jns_klm : 'L'),
                    'mati_tgl'          => (!empty($mati_tgl) ? $this->tanggalan->tgl_indo_sys($mati_tgl).' '.$mati_wkt : '0000-00-00 00:00:00'),
                    'mati_tmp'          => $mati_tmp,
                    'mati_penyebab'     => $mati_pny,
                    'ruj_dokter'        => $ruj_dokter,
                    'ruj_faskes'        => $ruj_faskes,
                    'ruj_keluhan'       => $ruj_keluhan,
                    'ruj_diagnosa'      => $ruj_diagnos,
                    'ruj_terapi'        => $ruj_terapi,
                    'cvd_tgl_periksa'   => (!empty($cvd_tg_akhr) ? $this->tanggalan->tgl_indo_sys($cvd_tg_akhr) : '0000-00-00'),
                    'cvd_tgl_awal'      => (!empty($cvd_tg_awal) ? $this->tanggalan->tgl_indo_sys($cvd_tg_awal) : '0000-00-00'),
                    'cvd_tgl_akhir'     => (!empty($cvd_tg_akhr) ? $this->tanggalan->tgl_indo_sys($cvd_tg_akhr) : '0000-00-00'),
                    'vks_tgl_periksa'   => (!empty($vks_tg_prks) ? $this->tanggalan->tgl_indo_sys($vks_tg_prks) : '0000-00-00'),
                    'nza_tgl_periksa'   => (!empty($nza_tg_prks) ? $this->tanggalan->tgl_indo_sys($nza_tg_prks) : '0000-00-00'),
                    'nza_status'        => (!empty($nza_hasil) ? $nza_hasil : '0'),
                    'hml_periksa'       => (!empty($hml_periksa) ? $hml_periksa : '0'),
                    'hml_tipe_ijin'     => (!empty($hml_tipe) ? $hml_tipe : '0'),
                    'hml_tipe_terbang'  => (!empty($hml_tipe_flt) ? $hml_tipe_flt : '0'),
                    'hml_tgl_awal'      => (!empty($hml_tgl_awal) ? $this->tanggalan->tgl_indo_sys($hml_tgl_awal) : '0000-00-00'),
                    'hml_tgl_akhir'     => (!empty($hml_tgl_akhir) ? $this->tanggalan->tgl_indo_sys($hml_tgl_akhir) : '0000-00-00'),
                    'trb_periksa'       => (!empty($trb_periksa) ? $trb_periksa : '0'),
                    'trb_tipe_terbang'  => (!empty($trb_tipe_flt) ? $trb_tipe_flt : '0'),
                    'trb_tgl_awal'      => (!empty($trb_tgl_awal) ? $this->tanggalan->tgl_indo_sys($trb_tgl_awal) : '0000-00-00'),
                    'trb_tgl_akhir'     => (!empty($trb_tgl_akhir) ? $this->tanggalan->tgl_indo_sys($trb_tgl_akhir) : '0000-00-00'),
                    'tht_lt_kanan'      => $tht_lt_kanan,
                    'tht_lt_kiri'       => $tht_lt_kiri,
                    'tht_membran_kanan'     => $tht_membran_kanan,
                    'tht_membran_kiri'      => $tht_membran_kiri,
                    'tht_mukosa_kanan'      => $tht_mukosa_kanan,
                    'tht_mukosa_kiri'       => $tht_mukosa_kiri,
                    'tht_konka_kanan'       => $tht_konka_kanan,
                    'tht_konka_kiri'        => $tht_konka_kiri,
                    'tht_timpa_kanan'       => $tht_timpa_kanan,
                    'tht_timpa_kiri'        => $tht_timpa_kiri,
                    'tht_tonsil_tg'         => $tht_tonsil_tg,
                    'tht_mukosa_tg'         => $tht_mukosa_tg,
                    'tht_faring_tg'         => $tht_faring_tg,
                    'tht_kesimpulan'        => $tht_kesimpulan,
                    'tht_audio'             => $tht_audio,
                    'tb'                => (float)general::format_angka_db($tb),
                    'td'                => $td,
                    'bb'                => (float)general::format_angka_db($bb),
                    'bw'                => ($bw == '+' ? '+' : '-'),
                    'bw_ket'            => (!empty($bw_ket) ? $bw_ket : ''),
                    'jml_hari'          => (float)$jml_hari,
                    'hasil'             => (!empty($hasil) ? $hasil : '0'),
                    'keterangan'        => (!empty($vks_nama) ? $vks_nama : ''),
                    'tipe'              => $tipe_surat,
                    'status_sembuh'     => (!empty($sembuh) ? $sembuh : '0'),
                );
                
                # Simpan data surat kedalam tabel
                $this->db->insert('tbl_trans_medcheck_surat', $data);
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Surat '.general::tipe_surat($tipe_surat).' berhasil disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->id).'&status='.$status));
                
//                echo '<pre>';
//                print_r($data);
//                echo '</pre>';
//
//                $this->session->set_flashdata('medcheck', '<div class="alert alert-success">Data surat berhasil disimpan</div>');
//                crud::simpan('tbl_trans_medcheck_surat', $data);             
//                redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->id).'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_surat_update() {
        if (akses::aksesLogin() == TRUE) {
            $id             = $this->input->post('id');
            $id_surat       = $this->input->post('id_surat');
            $status         = $this->input->post('status');
            $tgl_masuk      = $this->input->post('tgl_masuk');
            $tgl_keluar     = $this->input->post('tgl_keluar');
            $tgl_kontrol    = $this->input->post('tgl_kontrol');
            $tgl_lahir      = $this->input->post('tgl_lahir');
            $wkt_lahir      = $this->input->post('wkt_lahir');
            $nm_lahir       = $this->input->post('nm_lahir');
            $nm_ayah        = $this->input->post('nm_ayah');
            $nm_ibu         = $this->input->post('nm_ibu');
            $jns_klm        = $this->input->post('jns_klm');
            $hasil          = $this->input->post('hasil');
            $dokter         = $this->input->post('dokter');
            $tb             = $this->input->post('tb');
            $td             = $this->input->post('td');
            $bb             = $this->input->post('bb');
            $bw             = $this->input->post('bw');
            $bw_ket         = $this->input->post('bw_ket');
            $tipe_surat     = $this->input->post('tipe_surat');
            $sembuh         = $this->input->post('sembuh');
            $mati_tgl       = $this->input->post('mati_tgl');
            $mati_wkt       = $this->input->post('mati_wkt');
            $mati_tmp       = $this->input->post('mati_tmp');
            $mati_pny       = $this->input->post('mati_penyebab');
            $ruj_dokter     = $this->input->post('ruj_dokter');
            $ruj_faskes     = $this->input->post('ruj_faskes');
            $ruj_keluhan    = $this->input->post('ruj_keluhan');
            $ruj_diagnos    = $this->input->post('ruj_diagnosa');
            $ruj_terapi     = $this->input->post('ruj_terapi');
            $cvd_tg_prks    = $this->input->post('cvd_tgl_periksa');
            $cvd_tg_awal    = $this->input->post('cvd_tgl_awal');
            $cvd_tg_akhr    = $this->input->post('cvd_tgl_akhir');
            $vks_nama       = $this->input->post('vks_nama');
            $vks_tg_prks    = $this->input->post('vks_tgl_periksa');
            $nza_tg_prks    = $this->input->post('napza_tgl_periksa');
            $nza_hasil      = $this->input->post('napza_hasil');
            $hml_tipe       = $this->input->post('hml_tipe');
            $hml_tipe_flt   = $this->input->post('hml_tipe_terbang');
            $hml_periksa    = $this->input->post('hml_periksa');
            $hml_tgl_awal   = $this->input->post('hml_tgl_awal');
            $hml_tgl_akhir  = $this->input->post('hml_tgl_akhir');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('anamnesa', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'status='.$status));
            } else {
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $pengaturan     = $this->db->get('tbl_pengaturan')->row();
                
                switch ($tipe_surat){
                    case '1';
                        $str_tipe   = $pengaturan->kode_surat_sht;
                        break;
                    
                    case '2';
                        $str_tipe   = $pengaturan->kode_surat_skt;
                        break;
                    
                    case '3';
                        $str_tipe   = $pengaturan->kode_surat_rnp;
                        break;
                    
                    case '4';
                        $str_tipe   = $pengaturan->kode_surat_kntrl;
                        break;
                    
                    case '5';
                        $str_tipe   = $pengaturan->kode_surat_lahir;
                        break;
                    
                    case '6';
                        $str_tipe   = $pengaturan->kode_surat_mati;
                        break;
                    
                    case '7';
                        $str_tipe   = $pengaturan->kode_surat_covid;
                        break;
                    
                    case '8';
                        $str_tipe   = $pengaturan->kode_surat_rujukan;
                        break;
                    
                    case '9';
                        $str_tipe   = $pengaturan->kode_surat;
                        break;
                    
                    case '10';
                        $str_tipe   = $pengaturan->kode_surat_hamil;
                        break;
                    
                    case '11';
                        $str_tipe   = $pengaturan->kode_surat_cvd;
                        break;
                    
                    case '12';
                        $str_tipe   = $pengaturan->kode_surat_cvd;
                        break;
                    
                    case '13';
                        $str_tipe   = $pengaturan->kode_periksa;
                        break;
                }
                                
                $nomer          = $this->db->where('tipe', $tipe_surat)->where('MONTH(tgl_simpan)', date('m'))->where('YEAR(tgl_simpan)', date('Y'))->get('tbl_trans_medcheck_surat')->num_rows() + 1;
                $no_surat       = sprintf('%03d', $nomer).'/'.$str_tipe.'/'.date('m').'/'.date('Y');
                $tgl_awal       = date_create($this->tanggalan->tgl_indo_sys($tgl_masuk));
                $tgl_akhir      = date_create($this->tanggalan->tgl_indo_sys($tgl_keluar));
                
                // Prevent division by zero by ensuring both dates are valid
                if ($tgl_awal && $tgl_akhir) {
                    $diff       = date_diff($tgl_awal, $tgl_akhir);
                    $hari       = $diff->format("%d");
                    $jml_hari   = ($tgl_awal == $tgl_akhir ? '1' : ($hari > 1 ? $hari + 1 : '2'));
                } else {
                    // Default value if dates are invalid
                    $jml_hari   = '1';
                }
                
                $data = [
                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                    'tgl_masuk'         => (!empty($tgl_masuk) ? $this->tanggalan->tgl_indo_sys($tgl_masuk) : date('Y-m-d')),
                    'tgl_keluar'        => (!empty($tgl_keluar) ? $this->tanggalan->tgl_indo_sys($tgl_keluar) : '0000-00-00'),
                    'tgl_kontrol'       => (!empty($tgl_kontrol) ? $this->tanggalan->tgl_indo_sys($tgl_kontrol) : '0000-00-00'),
                    'id_medcheck'       => $sql_medc->id,
                    'id_dokter'         => $sql_medc->id_dokter,
                    'id_pasien'         => $sql_medc->id_pasien,
                    'id_user'           => $this->ion_auth->user()->row()->id,
                    'no_surat'          => $no_surat,
                    'lahir_tgl'         => (!empty($tgl_lahir) ? $this->tanggalan->tgl_indo_sys($tgl_lahir).' '.$wkt_lahir : '0000-00-00'),
                    'lahir_nm'          => $nm_lahir,
                    'lahir_nm_ayah'     => $nm_ayah,
                    'lahir_nm_ibu'      => $nm_ibu,
                    'jns_klm'           => (!empty($jns_klm) ? $jns_klm : 'L'),
                    'mati_tgl'          => (!empty($mati_tgl) ? $this->tanggalan->tgl_indo_sys($mati_tgl).' '.$mati_wkt : '0000-00-00 00:00:00'),
                    'mati_tmp'          => $mati_tmp,
                    'mati_penyebab'     => $mati_pny,
                    'ruj_dokter'        => $ruj_dokter,
                    'ruj_faskes'        => $ruj_faskes,
                    'ruj_keluhan'       => $ruj_keluhan,
                    'ruj_diagnosa'      => $ruj_diagnos,
                    'ruj_terapi'        => $ruj_terapi,
                    'cvd_tgl_periksa'   => (!empty($cvd_tg_akhr) ? $this->tanggalan->tgl_indo_sys($cvd_tg_akhr) : '0000-00-00'),
                    'cvd_tgl_awal'      => (!empty($cvd_tg_awal) ? $this->tanggalan->tgl_indo_sys($cvd_tg_awal) : '0000-00-00'),
                    'cvd_tgl_akhir'     => (!empty($cvd_tg_akhr) ? $this->tanggalan->tgl_indo_sys($cvd_tg_akhr) : '0000-00-00'),
                    'vks_tgl_periksa'   => (!empty($vks_tg_prks) ? $this->tanggalan->tgl_indo_sys($vks_tg_prks) : '0000-00-00'),
                    'nza_tgl_periksa'   => (!empty($nza_tg_prks) ? $this->tanggalan->tgl_indo_sys($nza_tg_prks) : '0000-00-00'),
                    'nza_status'        => (!empty($nza_hasil) ? $nza_hasil : '0'),
                    'hml_periksa'       => (!empty($hml_periksa) ? $hml_periksa : '0'),
                    'hml_tipe_ijin'     => (!empty($hml_tipe) ? $hml_tipe : '0'),
                    'hml_tipe_terbang'  => (!empty($hml_tipe_flt) ? $hml_tipe_flt : '0'),
                    'hml_tgl_awal'      => (!empty($hml_tgl_awal) ? $this->tanggalan->tgl_indo_sys($hml_tgl_awal) : '0000-00-00'),
                    'hml_tgl_akhir'     => (!empty($hml_tgl_akhir) ? $this->tanggalan->tgl_indo_sys($hml_tgl_akhir) : '0000-00-00'),
                    'tb'                => (float)general::format_angka_db($tb),
                    'td'                => $td,
                    'bb'                => (float)general::format_angka_db($bb),
                    'bw'                => ($bw == '+' ? '+' : '-'),
                    'bw_ket'            => (!empty($bw_ket) ? $bw_ket : ''),
                    'jml_hari'          => (float)$jml_hari,
                    'hasil'             => (!empty($hasil) ? $hasil : '0'),
                    'keterangan'        => (!empty($vks_nama) ? $vks_nama : ''),
                    'tipe'              => $tipe_surat,
                    'status_sembuh'     => (!empty($sembuh) ? $sembuh : '0'),
                ];
                
                # Simpan data surat kedalam tabel
                $this->db->where('id', general::dekrip($id_surat))->update('tbl_trans_medcheck_surat', $data);
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Surat '.general::tipe_surat($tipe_surat).' berhasil dirubah !");');
                }
                
                redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->id).'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_inform() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $status     = $this->input->post('status');
            $tgl_masuk  = $this->input->post('tgl_masuk');
            $tipe_surat = $this->input->post('tipe_surat');
            $nama       = $this->input->post('nama');
            $jns_klm    = $this->input->post('jns_klm');
            $tgl_lahir  = $this->input->post('tgl_lahir');
            $alamat     = $this->input->post('alamat');
            $hubungan   = $this->input->post('hubungan');
            $ruang      = $this->input->post('kamar');
            $ruang_nm   = $this->input->post('ruang');
            $saksi1     = $this->input->post('saksi1');
            $saksi2     = $this->input->post('saksi2');
            $dokter     = $this->input->post('dokter');
            $penjamin   = $this->input->post('penjamin');
            $penanggung = $this->input->post('penanggung');
            $tindakan   = $this->input->post('tindakan');
            $setuju     = $this->input->post('status_stj');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'status='.$status));
            } else {
                // Start Transaction
                $this->db->trans_begin();
                
                try {
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_kamar      = $this->db->where('id', $ruang)->get('tbl_m_kamar')->row(); 
                $pengaturan     = $this->db->get('tbl_pengaturan')->row();
                $jml            = $sql_kamar->jml + 1;
                
                switch ($tipe_surat){
                    case '1';
                        $str_tipe   = $pengaturan->kode_surat;
                        break;
                    
                    case '2';
                        $str_tipe   = $pengaturan->kode_surat;
                        break;
                }
                
                $nomer          = $this->db->where('tipe', $tipe_surat)->where('MONTH(tgl_simpan)', date('m'))->where('YEAR(tgl_simpan)', date('Y'))->get('tbl_trans_medcheck_surat_inform')->num_rows() + 1;
                $no_surat       = sprintf('%03d', $nomer).'/'.$str_tipe.'/'.date('m').'/'.date('Y');
                $tgl_awal       = date_create($this->tanggalan->tgl_indo_sys($tgl_masuk));
                
                    $data = [
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'tgl_masuk'     => (!empty($tgl_masuk) ? $this->tanggalan->tgl_indo_sys($tgl_masuk) : date('Y-m-d')),
                    'tgl_lahir'     => (!empty($tgl_lahir) ? $this->tanggalan->tgl_indo_sys($tgl_lahir) : date('Y-m-d')),
                    'id_medcheck'   => $sql_medc->id,
                    'id_dokter'     => $dokter,
                    'id_pasien'     => $sql_medc->id_pasien,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'id_ruang'      => (!empty($ruang) ? $ruang : '0'),
                    'no_surat'      => $no_surat,
                    'nama'          => $nama,
                    'jns_klm'       => $jns_klm,
                    'alamat'        => $alamat,
                    'penjamin'      => $penjamin,
                    'penanggung'    => $penanggung,
                    'ruang'         => $ruang_nm,
                    'nama_saksi1'   => $saksi1,
                    'nama_saksi2'   => $saksi2,
                    'tindakan'      => $tindakan,
                    'status_hub'    => (!empty($hubungan) ? $hubungan : '0'),
                    'status_stj'    => (!empty($setuju) ? $setuju : '0'),
                    'status_ttd'    => '0',
                    'tipe'          => (!empty($tipe_surat) ? $tipe_surat : '0'),
                    ];
                
                    $data_kmr_master = [
                    'tgl_modif' => date('Y-m-d H:i:s'),
                    'jml'       => $jml,
                    ];
                
                # Simpan ke tabel medcheck Inform
                $this->db->insert('tbl_trans_medcheck_surat_inform', $data);
                $last_id = crud::last_id();
                
                # Masukkan Informed Consent ke tabel riwayat berkas
                    $data_file_ifc = [
                    'id_medcheck'       => $sql_medc->id,
                    'id_pasien'         => $sql_medc->id_pasien,
                    'id_user'           => $this->ion_auth->user()->row()->id,
                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                    'tgl_masuk'         => date('Y-m-d H:i'),
                    'judul'             => 'SURAT '.strtoupper(general::tipe_surat_inf($tipe_surat)),
                    'file_name'         => 'medcheck/surat/cetak_pdf_inf.php?id='.general::enkrip($last_id).'&no_nota='.general::enkrip($sql_medc->id),
                    'file_ext'          => '.pdf',
                    'file_type'         => 'application/pdf',
                    'status'            => '2',
                    ];
                
                $this->db->insert('tbl_trans_medcheck_file', $data_file_ifc);
                
                    # Check transaction status
                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Gagal menyimpan data Inform Consent");
                    }
                    
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Inform Consent Berhasil disimpan !");');
                    
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                }
                
                redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->id).'&status='.$status.(!empty($last_id) ? '&form_id='.general::enkrip($last_id) : '')));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_inform_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_form    = $this->input->post('id_form');
            $status     = $this->input->post('status');
            $tgl_masuk  = $this->input->post('tgl_masuk');
            $tipe_surat = $this->input->post('tipe_surat');
            $nama       = $this->input->post('nama');
            $jns_klm    = $this->input->post('jns_klm');
            $tgl_lahir  = $this->input->post('tgl_lahir');
            $alamat     = $this->input->post('alamat');
            $hubungan   = $this->input->post('hubungan');
            $ruang      = $this->input->post('kamar');
            $ruang_nm   = $this->input->post('ruang');
            $saksi1     = $this->input->post('saksi1');
            $saksi2     = $this->input->post('saksi2');
            $dokter     = $this->input->post('dokter');
            $penjamin   = $this->input->post('penjamin');
            $penanggung = $this->input->post('penanggung');
            $tindakan   = $this->input->post('tindakan');
            $setuju     = $this->input->post('status_stj');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'status='.$status));
            } else {
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_dft_gc     = $this->db->where('id_pendaftaran', $sql_medc->id_dft)->get('tbl_pendaftaran_gc')->row();
                $sql_kamar      = $this->db->where('id', $ruang)->get('tbl_m_kamar')->row(); 
                $pengaturan     = $this->db->get('tbl_pengaturan')->row();
                $jml            = $sql_kamar->jml + 1;
                
                switch ($tipe_surat){
                    case '1';
                        $str_tipe   = $pengaturan->kode_surat;
                        break;
                    
                    case '2';
                        $str_tipe   = $pengaturan->kode_surat;
                        break;
                }
                
                $nomer          = $this->db->where('tipe', $tipe_surat)->where('MONTH(tgl_simpan)', date('m'))->where('YEAR(tgl_simpan)', date('Y'))->get('tbl_trans_medcheck_surat_inform')->num_rows() + 1;
                $no_surat       = sprintf('%03d', $nomer).'/'.$str_tipe.'/'.date('m').'/'.date('Y');
                $tgl_awal       = date_create($this->tanggalan->tgl_indo_sys($tgl_masuk));
                
                /* Transaksi Database */
                $this->db->trans_begin();
                
                try {
                    $data = [
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'tgl_masuk'     => (!empty($tgl_masuk) ? $this->tanggalan->tgl_indo_sys($tgl_masuk) : date('Y-m-d')),
                    'tgl_lahir'     => (!empty($tgl_lahir) ? $this->tanggalan->tgl_indo_sys($tgl_lahir) : date('Y-m-d')),
                    'id_medcheck'   => $sql_medc->id,
                    'id_dokter'     => $dokter,
                    'id_pasien'     => $sql_medc->id_pasien,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'id_ruang'      => (!empty($ruang) ? $ruang : '0'),
                    'no_surat'      => $no_surat,
                    'nama'          => $nama,
                    'jns_klm'       => $jns_klm,
                    'alamat'        => $alamat,
                    'penjamin'      => $penjamin,
                    'penanggung'    => $penanggung,
                    'ruang'         => $ruang_nm,
                    'nama_saksi1'   => $saksi1,
                    'nama_saksi2'   => $saksi2,
                    'tindakan'      => $tindakan,
                    'status_hub'    => (!empty($hubungan) ? $hubungan : '0'),
                    'status_stj'    => (!empty($setuju) ? $setuju : '0'),
                    'status_ttd'    => '0',
                    'tipe'          => (!empty($tipe_surat) ? $tipe_surat : '0'),
                    ];
                
                    $data_kmr_master = [
                    'tgl_modif' => date('Y-m-d H:i:s'),
                    'jml'       => $jml,
                    ];
                
                # Simpan ke tabel medcheck Inform
                $this->db->where('id', general::dekrip($id_form))->update('tbl_trans_medcheck_surat_inform', $data);
                $last_id = $id;
                
                # Masukkan Informed Consent ke tabel riwayat berkas
                    $data_file_ifc = [
                    'id_medcheck'       => $sql_medc->id,
                    'id_pasien'         => $sql_medc->id_pasien,
                    'id_user'           => $this->ion_auth->user()->row()->id,
                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                    'tgl_masuk'         => date('Y-m-d H:i'),
                    'judul'             => 'SURAT '.strtoupper(general::tipe_surat_inf($tipe_surat)),
                    'file_name'         => 'medcheck/surat/cetak_pdf_inf.php?id='.general::enkrip($last_id).'&no_nota='.general::enkrip($sql_medc->id),
                    'file_ext'          => '.pdf',
                    'file_type'         => 'application/pdf',
                    'status'            => '2',
                    ];
                    
                    # Check transaction status
                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Inform Consent gagal disimpan!");
                    }
                    
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Inform Consent Berhasil disimpan !");');
                    
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                }
                
                redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->id).'&status='.$status.(!empty($last_id) ? '&form_id='.general::enkrip($last_id) : '')));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_inform_upd_ttd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_form    = $this->input->post('id_form');
            $foto       = $this->input->post('foto');
            $status     = $this->input->post('status');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'status='.$status));
            } else {
                // Start Transaction
                $this->db->trans_begin();
                
                try {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    $sql_pas = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row();
                
                # Config File Foto Pasien
                    $kode = sprintf('%05d', $sql_pas->kode);
                    $no_rm = strtolower($sql_pas->kode_dpn.$sql_pas->kode);
                    $path = 'file/pasien/'.$no_rm.'/';
                
                # Simpan foto dari kamera ke dalam format file *.png dari base64
                    $filename = '';
                if (!empty($foto)) {
                        $filename = $path.'ttd_pernyt_'.$kode.'.png';
                    general::base64_to_jpeg($foto, $filename);
                }
                
                    $data = [
                        'file_name1' => $filename,
                        'status_ttd' => (!empty($foto) ? '1' : '0'),
                    ];
                    
                    $this->db->where('id', general::dekrip($id_form))->update('tbl_trans_medcheck_surat_inform', $data);
                    
                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Gagal menyimpan tanda tangan!");
                    }
                    
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Tanda tangan berhasil disimpan!");');
                    
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                }
                
                redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->id).'&status='.$status.'&form_id='.general::enkrip(general::dekrip($id_form))));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    


    public function set_medcheck_resume() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $status = $this->input->get('status');
            
            if(!empty($id)){
                $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
                $sql_pasien = $this->db->where('id', $sql_medc->row()->id_pasien)->get('tbl_m_pasien')->row();
                $pengaturan = $this->db->get('tbl_pengaturan')->row();
                   
                $nomer      = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_resume')->num_rows() + 1;
                $no_surat   = sprintf('%03d', $nomer).'/'.$pengaturan->kode_surat.'/'.date('m').'/'.date('Y');
                $grup       = $this->ion_auth->get_users_groups()->row();
                $is_doc_id  = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : '0');
               
                $data = [
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'tgl_masuk'     => date('Y-m-d'),
                    'id_medcheck'   => $sql_medc->row()->id,
                    'id_pasien'     => $sql_medc->row()->id_pasien,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'id_dokter'     => $is_doc_id,
                    'no_surat'      => $no_surat,
                    'pasien'        => $sql_medc->row()->pasien,
                    'status'        => '0',
                    'status_rsm'    => '0',
                ];
                
                if($sql_medc->num_rows() > 0){
                    $this->db->insert('tbl_trans_medcheck_resume', $data);
                    $last_id = $this->db->insert_id();
                    
                    # Masukkan Resume ke tabel riwayat berkas
                    $data_file_resm = [
                        'id_medcheck'       => $sql_medc->row()->id,
                        'id_pasien'         => $sql_medc->row()->id_pasien,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'id_berkas'         => $last_id,
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'tgl_masuk'         => date('Y-m-d H:i'),
                        'judul'             => 'RESUME MEDIS PASIEN ('.$no_surat.')',
                        'keterangan'        => $sql_pasien->nama_pgl,
                        'file_name'         => '/medcheck/surat/cetak_pdf_rsm_lab.php?id='.general::enkrip($sql_medc->row()->id).'&id_resm='.general::enkrip($last_id).'&status='.$status,
                        'file_ext'          => '.pdf',
                        'file_type'         => 'application/pdf',
                        'status'            => '2',
                    ];

                    $this->db->insert('tbl_trans_medcheck_file', $data_file_resm);
                    
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data permintaan resume medis berhasil dibuat");');
                    redirect(base_url('medcheck/tambah.php?act='.($grup->name == 'dokter' ? 'resm_input' : 'resm_surat').'&id='.general::enkrip($sql_medc->row()->id).'&id_resm='.general::enkrip($last_id).'&status='.$status));
                }else{
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data medcheck tidak ditemukan");');
                    redirect(base_url('medcheck/index.php'));
                }
            }else{
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("ID tidak ditemukan");');
                redirect(base_url('medcheck/index.php'));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }    
    
    public function set_medcheck_resume_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_rsm     = $this->input->post('id_resume');
            $id_user    = $this->input->post('id_user');
            $status     = $this->input->post('status');
            $dokter_rsm = $this->input->post('dokter_kirim');
            $no_sample  = $this->input->post('no_sample');
            $saran      = $this->input->post('saran');
            $kesimpulan = $this->input->post('kesimpulan');
            $route      = $this->input->post('route');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('', '');
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . form_error('id') . '");');
                redirect(base_url('medcheck/tambah.php?act=resm_surat&id='.$id.'&id_resm='.$id_rsm.'&status='.$status));
            } else {
                $sql_medc_resm = $this->db->where('id', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume')->row();

                $data = [
                    'tgl_modif'   => date('Y-m-d H:i:s'),
                    'id_dokter'   => $dokter_rsm,
                    'no_sample'   => $no_sample,
                    'saran'       => $saran,
                    'kesimpulan'  => $kesimpulan,
                ];
                
                $this->db->where('id', $sql_medc_resm->id)->update('tbl_trans_medcheck_resume', $data);
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data resume berhasil disimpan");');
                
                redirect(base_url('medcheck/tambah.php?act=resm_surat&id='.$id.'&id_resm='.general::enkrip($sql_medc_resm->id).'&status='.$status.(!empty($route) ? '&route='.$route : '')));                
            }
        } else {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_resume_hsl() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_rsm     = $this->input->post('id_resume');
            $status     = $this->input->post('status');
            $periksa    = $this->input->post('pemeriksaan');
            $hasil      = $this->input->post('hasil');
            $route      = $this->input->post('route');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('', '');
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . form_error('id') . '");');
                redirect(base_url('medcheck/tambah.php?act=resm_surat&id='.$id.'&id_resm='.$id_rsm.'&status='.$status));
            } else {
                // Get MCU header data for dropdown
                $sql_header     = $this->db->where('id', $periksa)->get('tbl_m_mcu_header')->row();
                $sql_medc_resm  = $this->db->where('id', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume')->row();

                $data = [
                    'id_medcheck'   => general::dekrip($id),
                    'id_resume'     => general::dekrip($id_rsm),
                    'id_mcu_header' => $periksa,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'param'         => $sql_header->param,
                    'param_nilai'   => $hasil,
                    'status_rnp'    => '0',
                    'status_trp'    => '0',
                ];
                
                // Check if this header already exists for this resume
                $check_exists = $this->db
                                    ->where('id_resume', general::dekrip($id_rsm))
                                    ->where('id_mcu_header', $periksa)
                                    ->where('id_medcheck', general::dekrip($id))
                                    ->get('tbl_trans_medcheck_resume_det')
                                    ->num_rows();
                
                if ($check_exists > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data pemeriksaan resume sudah ada!");');
                } else {
                    $this->db->insert('tbl_trans_medcheck_resume_det', $data);
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data pemeriksaan resume berhasil disimpan");');
                }
                
                redirect(base_url('medcheck/tambah.php?act=resm_input&id='.$id.'&id_resm='.general::enkrip($sql_medc_resm->id).'&status='.$status.(!empty($route) ? '&route='.$route : '')));                
            }
        } else {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_resume_hsl_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_rsm     = $this->input->post('id_resume');
            $id_rsm_hsl = $this->input->post('id_resume_hsl');
            $status     = $this->input->post('status');
            $periksa    = $this->input->post('pemeriksaan');
            $hasil      = $this->input->post('hasil');
            $route      = $this->input->post('route');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('', '');
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . form_error('id') . '");');
                redirect(base_url('medcheck/tambah.php?act=resm_surat&id='.$id.'&id_resm='.$id_rsm.'&status='.$status));
            } else {
                $sql_header    = $this->db->where('id', $periksa)->get('tbl_m_mcu_header')->row();
                $sql_medc_resm = $this->db->where('id', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume')->row();

                $data = [
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'id_mcu_header' => $periksa,
                    'param'         => $sql_header->param,
                    'param_nilai'   => $hasil
                ];
                
                $this->db->where('id', general::dekrip($id_rsm_hsl))->update('tbl_trans_medcheck_resume_det', $data);
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data pemeriksaan resume berhasil disimpan");');
                
                redirect(base_url('medcheck/tambah.php?act=resm_input&id='.$id.'&id_resm='.general::enkrip($sql_medc_resm->id).'&status='.$status.(!empty($route) ? '&route='.$route : '')));                
            }
        } else {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_resume_hsl2() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_rsm     = $this->input->post('id_resume');
            $status     = $this->input->post('status');
            $route      = $this->input->post('route');
            
            $this->form_validation->set_error_delimiters('', '');
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . form_error('id') . '");');
                redirect(base_url('medcheck/tambah.php?act=resm_input&id='.$id.'&id_resm='.$id_rsm.'&status='.$status));
            } else {
                $sql_medc_resm = $this->db->where('id', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume')->row();
                
                try {
                    /* Transaksi Database */
                    $this->db->trans_begin();
                    
                    for($n = 1; $n <= 13; $n++){
                        $data = [
                            'id_medcheck' => general::dekrip($id),
                            'id_resume'   => general::dekrip($id_rsm),
                            'id_user'     => $this->ion_auth->user()->row()->id,
                            'tgl_simpan'  => date('Y-m-d H:i:s'),
                            'param'       => htmlentities($this->input->post('pemeriksaan'.$n)),
                            'param_nilai' => htmlentities($this->input->post('hasil'.$n)),
                            'status_rnp'  => '1',
                            'status_trp'  => '0'
                        ];
                        
                        $this->db->insert('tbl_trans_medcheck_resume_det', $data);
                    }
                    
                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Gagal menyimpan data resume");
                    }
                    
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data pemeriksaan resume berhasil disimpan");');
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                    log_message('error', 'Medcheck resume save error: ' . $e->getMessage());
                }
                
                redirect(base_url('medcheck/tambah.php?act=resm_input_rnp&id='.$id.'&id_resm='.general::enkrip($sql_medc_resm->id).'&status='.$status.(!empty($route) ? '&route='.$route : '')));                
            }
        } else {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_resume_hsl2_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_rsm     = $this->input->post('id_resume');
            $status     = $this->input->post('status');
            $route      = $this->input->post('route');
            
            $this->form_validation->set_error_delimiters('', '');
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . form_error('id') . '");');
                redirect(base_url('medcheck/tambah.php?act=resm_input&id='.$id.'&id_resm='.$id_rsm.'&status='.$status));
            } else {
                $sql_medc_resm = $this->db->where('id', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume')->row();
                
                try {
                    /* Transaksi Database */
                    $this->db->trans_begin();
                    
                    # Hapus dahulu
                    $this->db->where('id_resume', $sql_medc_resm->id)->delete('tbl_trans_medcheck_resume_det');
                    
                    for($n = 1; $n <= 13; $n++){
                        $data = [
                            'id_medcheck' => general::dekrip($id),
                            'id_resume'   => general::dekrip($id_rsm),
                            'id_user'     => $this->ion_auth->user()->row()->id,
                            'tgl_simpan'  => date('Y-m-d H:i:s'),
                            'param'       => htmlentities($this->input->post('pemeriksaan'.$n)),
                            'param_nilai' => htmlentities($this->input->post('hasil'.$n)),
                            'status_rnp'  => '1',
                            'status_trp'  => '0'
                        ];
                        
                        $this->db->insert('tbl_trans_medcheck_resume_det', $data);
                    }
                    
                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Gagal menyimpan data resume");
                    }
                    
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data pemeriksaan resume berhasil disimpan");');
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                    log_message('error', 'Medcheck resume update error: ' . $e->getMessage());
                }
                
                redirect(base_url('medcheck/tambah.php?act=resm_input_rnp&id='.$id.'&id_resm='.general::enkrip($sql_medc_resm->id).'&status='.$status.(!empty($route) ? '&route='.$route : '')));                
            }
        } else {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_resume_hsl3() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_rsm     = $this->input->post('id_resume');
            $status     = $this->input->post('status');
            $periksa    = $this->input->post('pemeriksaan');
            $hasil1     = $this->input->post('hasil1');
            $hasil2     = $this->input->post('hasil2');
            $hasil3     = $this->input->post('hasil3');
            $route      = $this->input->post('route');
            
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . form_error('id') . '");');
                redirect(base_url('medcheck/tambah.php?act=resm_surat&id='.$id.'&id_resm='.$id_rsm.'&status='.$status));
            } else {
                try {
                    $sql_medc_resm = $this->db->where('id', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume')->row();
                    
                    $data = [
                        'id_medcheck' => general::dekrip($id),
                        'id_resume'   => general::dekrip($id_rsm),
                        'id_user'     => $this->ion_auth->user()->row()->id,
                        'tgl_simpan'  => date('Y-m-d H:i:s'),
                        'param'       => $periksa,
                        'param_nilai' => (!empty($hasil1) ? $hasil1 : '').(!empty($hasil2) ? '#('.$hasil2.')' : '').(!empty($hasil3) ? '#/ '.$hasil3.'' : ''),
                        'status_rnp'  => '0',
                        'status_trp'  => '1',
                    ];
                    
                    $this->db->insert('tbl_trans_medcheck_resume_det', $data);
                    
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data pemeriksaan resume berhasil disimpan");');
                    
                    redirect(base_url('medcheck/tambah.php?act=resm_input_trp&id='.$id.'&id_resm='.general::enkrip($sql_medc_resm->id).'&status='.$status.(!empty($route) ? '&route='.$route : '')));
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                    log_message('error', 'Medcheck resume insert error: ' . $e->getMessage());
                    redirect(base_url('medcheck/tambah.php?act=resm_surat&id='.$id.'&id_resm='.$id_rsm.'&status='.$status));
                }
            }
        } else {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_resume_hsl3_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_rsm     = $this->input->post('id_resume');
            $id_item    = $this->input->post('id_resume_det');
            $status     = $this->input->post('status');
            $periksa    = $this->input->post('pemeriksaan');
            $hasil1     = $this->input->post('hasil1');
            $hasil2     = $this->input->post('hasil2');
            $hasil3     = $this->input->post('hasil3');
            $route      = $this->input->post('route');
            
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . form_error('id') . '");');
                redirect(base_url('medcheck/tambah.php?act=resm_surat&id='.$id.'&id_resm='.$id_rsm.'&status='.$status));
            } else {
                try {
                    $sql_medc_resm = $this->db->where('id', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume')->row();

                    $data = [
                        'id_user'     => $this->ion_auth->user()->row()->id,
                        'tgl_simpan'  => date('Y-m-d H:i:s'),
                        'param'       => $periksa,
                        'param_nilai' => (!empty($hasil1) ? $hasil1 : '').(!empty($hasil2) ? '#('.$hasil2.')' : '').(!empty($hasil3) ? '#/ '.$hasil3.'' : ''),
                    ];
                    
                    $this->db->where('id', general::dekrip($id_item))->update('tbl_trans_medcheck_resume_det', $data);
                    
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data pemeriksaan resume berhasil disimpan");');
                    
                    redirect(base_url('medcheck/tambah.php?act=resm_input_trp&id='.$id.'&id_resm='.general::enkrip($sql_medc_resm->id).'&status='.$status.(!empty($route) ? '&route='.$route : '')));
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                    log_message('error', 'Medcheck resume update error: ' . $e->getMessage());
                    redirect(base_url('medcheck/tambah.php?act=resm_surat&id='.$id.'&id_resm='.$id_rsm.'&status='.$status));
                }
            }
        } else {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_resume_ctk() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_rsm     = $this->input->get('id_resm');
            
            $sql_medc      = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
            $sql_medc_resm = $this->db->where('id', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume')->row();
            $sql_medc_file = $this->db->where('id_medcheck_rsm', $sql_medc_resm->id)->get('tbl_trans_medcheck_file');

            $data_file = [
                'id_medcheck'       => $sql_medc->id,
                'id_medcheck_rsm'   => $sql_medc_resm->id,
                'id_pasien'         => $sql_medc->id_pasien,
                'id_user'           => $this->ion_auth->user()->row()->id,
                'tgl_simpan'        => date('Y-m-d H:i:s'),
                'tgl_masuk'         => date('Y-m-d H:i'),
                'judul'             => 'RESUME MEDIS RAWAT INAP ' . $sql_medc_resm->no_surat,
                'file_name'         => '/medcheck/surat/cetak_pdf_rsm_rnp.php?id=' . $id . '&id_resm=' . $id_rsm,
                'file_ext'          => '.pdf',
                'file_type'         => 'application/pdf',
                'status'            => '2',
            ];
            
            if($sql_medc_file->num_rows() == 0){
                $this->db->insert('tbl_trans_medcheck_file', $data_file);
            } else {
                $this->db->where('id_medcheck_rsm', $sql_medc_resm->id)
                         ->update('tbl_trans_medcheck_file', $data_file);
            }
            
            $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data pemeriksaan resume berhasil disimpan");');
            redirect(base_url('medcheck/surat/cetak_pdf_rsm_rnp.php?id=' . $id . '&id_resm=' . $id_rsm));
        } else {
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_resume_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;
            
            $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
            
            if($sql_medc->num_rows() > 0){
                try {
                    /* Transaksi Database */
                    $this->db->trans_begin();
                    
                    # Hapus ke tabel medcheck lab
                    $this->db->where('id', general::dekrip($item_id))->delete('tbl_trans_medcheck_resume');
    
                    # Cek status transact MySQL
                    if ($this->db->trans_status() === FALSE) {
                        # Rollback jika gagal
                        $this->db->trans_rollback();
    
                        # Tampilkan pesan error
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data resume medis gagal dihapus!!");');
                    } else {
                        $this->db->trans_commit();
    
                        # Tampilkan pesan sukses jika sudah berhasil commit
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data resume medis berhasil dihapus");');
                    }
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                    log_message('error', 'Medcheck resume delete error: ' . $e->getMessage());
                }
            }

            redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_resume_hapus_hsl() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_resm    = $this->input->get('id_resm');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $act        = $this->input->get('act');
            $userid     = $this->ion_auth->user()->row()->id;
            
            $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
            
            if($sql_medc->num_rows() > 0){
                try {
                    /* Transaksi Database */
                    $this->db->trans_begin();
                    
                    # Hapus ke tabel medcheck lab
                    $this->db->where('id', general::dekrip($item_id))->delete('tbl_trans_medcheck_resume_det');
    
                    # Cek status transact MySQL
                    if ($this->db->trans_status() === FALSE) {
                        # Rollback jika gagal
                        $this->db->trans_rollback();
    
                        # Tampilkan pesan error
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data resume medis gagal dihapus!!");');
                    } else {
                        $this->db->trans_commit();
    
                        # Tampilkan pesan sukses jika sudah berhasil commit
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data resume medis berhasil dihapus");');
                    }
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                    log_message('error', 'Medcheck resume delete error: ' . $e->getMessage());
                }
            }

            redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_resm='.$id_resm.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_resume_hapus_hsl_rnp() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_resm    = $this->input->get('id_resm');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $userid     = $this->ion_auth->user()->row()->id;
            
            $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
            
            if($sql_medc->num_rows() > 0){                
                /* Transaksi Database */
                $this->db->trans_begin();
                
                try {
                    # Hapus ke tabel medcheck lab
                    $this->db->where('id_resume', general::dekrip($id_resm))->delete('tbl_trans_medcheck_resume_det');
    
                    # Cek status transact MySQL
                    if ($this->db->trans_status() === FALSE) {
                        # Rollback jika gagal
                        $this->db->trans_rollback();
    
                        # Tampilkan pesan error
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data resume medis gagal dihapus!!");');
                    } else {
                        $this->db->trans_commit();
    
                        # Tampilkan pesan sukses jika sudah berhasil commit
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data resume medis berhasil dihapus");');
                    }
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                    log_message('error', 'Medcheck resume delete error: ' . $e->getMessage());
                }
            }

            redirect(base_url('medcheck/tambah.php?act=resm_input_rnp&id='.$id.'&id_resm='.$id_resm.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_upload() {
        if (!akses::aksesLogin()) {
            if ($this->input->is_ajax_request()) {
                echo json_encode([
                    'success' => false,
                    'message' => 'Authentifikasi gagal, silahkan login ulang!'
                ]);
                return;
            }
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
            return;
        }
    
            $this->load->helper('file');
            
            $id         = $this->input->post('id');
            $judul      = $this->input->post('judul');
            $ket        = $this->input->post('ket');
            $status     = $this->input->post('status');
            $status_fl  = $this->input->post('status_file');

        // Validation
            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('judul', 'Judul', 'required');

            if ($this->form_validation->run() == FALSE) {
            if ($this->input->is_ajax_request()) {
                echo json_encode([
                    'success' => false,
                    'message' => validation_errors()
                ]);
                return;
            }
            
                $msg_error = array(
                    'id'        => form_error('id'),
                    'judul'     => form_error('judul'),
                );
                $this->session->set_flashdata('form_error', $msg_error);
                redirect(base_url('medcheck/tambah.php?id='.$id.'&status=8'));
            return;
        }
    
        try {
               $sql_medc    = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
               $sql_pasien  = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row();
               $no_rm       = strtolower($sql_pasien->kode_dpn).$sql_pasien->kode;
               $folder      = realpath('./file/pasien/'.$no_rm);
            
            // Create directory if it doesn't exist
            if (!is_dir($folder)) {
                mkdir($folder, 0777, true);
            }
               
                if (!empty($_FILES['fupload']['name'])) {
                    $config['upload_path']      = $folder;
                    $config['allowed_types']    = 'jpg|png|pdf|jpeg|jfif';
                    $config['remove_spaces']    = TRUE;
                    $config['overwrite']        = TRUE;
                $config['file_name']        = 'medc_'.$sql_medc->no_rm.'_upl'.sprintf('%05d', rand(1,256)).'_'.strtolower(str_replace(' ', '_', $judul));
                
                    $this->load->library('upload', $config);

                    if (!$this->upload->do_upload('fupload')) {
                    $error_msg = $this->upload->display_errors('', '');
                    if ($this->input->is_ajax_request()) {
                        echo json_encode([
                            'success' => false,
                            'message' => $error_msg
                        ]);
                        return;
                    }
                    $this->session->set_flashdata('medcheck', '<div class="alert alert-danger">Error : <b>' . $error_msg . '</b></div>');
                    redirect(base_url('medcheck/tambah.php?id='.$id.'&status=8&err='.$error_msg));
                    return;
                }
    
                $f = $this->upload->data();
                        $data_file = array(
                            'id_medcheck'   => $sql_medc->id,
                            'id_pasien'     => $sql_medc->id_pasien,
                            'id_user'       => $this->ion_auth->user()->row()->id,
                            'tgl_simpan'    => date('Y-m-d H:i:s'),
                            'tgl_masuk'     => date('Y-m-d H:i'),
                            'judul'         => $judul,
                            'keterangan'    => $ket,
                            'file_name_ori' => $f['client_name'],
                            'file_name'     => '/file/pasien/'.$no_rm.'/'.$f['file_name'],
                            'file_ext'      => $f['file_ext'],
                            'file_type'     => $f['file_type'],
                            'status'        => $status_fl,
                        );
                        
                        crud::simpan('tbl_trans_medcheck_file', $data_file);
                        $last_id = crud::last_id();
                        
                if ($this->input->is_ajax_request()) {
                    echo json_encode([
                        'success' => true,
                        'message' => 'Berkas berhasil diunggah',
                        'file_name' => $f['file_name']
                    ]);
                    return;
                }
    
                            $this->session->set_flashdata('medcheck', '<div class="alert alert-success">Berkas berhasil diunggah !!</div>');
                redirect(base_url('medcheck/tambah.php?id='.$id.'&status=8'));
            }
        } catch (Exception $e) {
            if ($this->input->is_ajax_request()) {
                echo json_encode([
                    'success' => false,
                    'message' => 'Terjadi kesalahan: ' . $e->getMessage()
                ]);
                return;
            }
            $this->session->set_flashdata('medcheck', '<div class="alert alert-danger">Error: ' . $e->getMessage() . '</div>');
            redirect(base_url('medcheck/tambah.php?id='.$id.'&status=8'));
        }
    }

    public function set_medcheck_upload_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_item    = $this->input->get('item_id');
            $file       = $this->input->get('file');
            $status     = $this->input->get('status');
            
            if(!empty($id_item)){
                $sql_medc    = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_pasien  = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row();
                $no_rm       = strtolower($sql_pasien->kode_dpn).$sql_pasien->kode;
                $folder      = realpath('./'.$file);
               
                $path   = $folder.'/';
                $berkas = $file;
                
                if(file_exists($berkas)){
                    unlink($berkas);
                }
                
                $this->db->where('id', general::dekrip($id_item))->delete('tbl_trans_medcheck_file');                
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Berkas berhasil di hapus");');
            }
            
            redirect(base_url('medcheck/tambah.php?id='.$this->input->get('id').'&status='.$this->input->get('status')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    } 
    
    public function set_medcheck_diskon_item() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $status     = $this->input->post('status');
            $tgl_resep  = $this->input->post('tgl_resep');
            $nm_resep   = $this->input->post('nm_resep');
            $ket        = $this->input->post('ket');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'        => form_error('id'),
                );

                $this->session->set_flashdata('anamnesa', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'status='.$status));
            } else {
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $pengaturan     = $this->db->get('tbl_pengaturan')->row();
                
                $nomer          = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_resep')->num_rows() + 1;
                $no_surat       = sprintf('%03d', $nomer).'/'.$pengaturan->kode_resep.'/'.date('m').'/'.date('Y');
                
                $data = array(
                    'tgl_simpan'     => (!empty($tgl_masuk) ? $this->tanggalan->tgl_indo_sys($tgl_resep) : date('Y-m-d')).' '.date('H:i:s'),
                    'id_medcheck'   => $sql_medc->id,
                    'id_pasien'     => $sql_medc->id_pasien,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'no_resep'      => $no_surat,
                    'status'        => '0',
                );

                $this->session->set_flashdata('medcheck', '<div class="alert alert-success">Data surat berhasil disimpan</div>');
                crud::simpan('tbl_trans_medcheck_resep', $data);
                $last_id = crud::last_id();
                
                redirect(base_url('medcheck/tambah.php?id='.general::enkrip($sql_medc->id).'&status='.$status.'&id_resep='.general::enkrip($last_id)));
                
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_retur() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->post('id');
            $pasien = $this->input->post('id_pasien');
            $tgl    = $this->input->post('tgl');
            $ket    = $this->input->post('ket');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');
            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                redirect(base_url('medcheck/retur/retur.php'));
            } else {                        
                $data = [
                    'id'         => general::dekrip($id),
                    'tgl'        => $this->tanggalan->tgl_indo_sys($tgl),
                    'keterangan' => $ket,
                ];
                
                $this->session->set_userdata('trans_medcheck_retur', $data);
                redirect(base_url('medcheck/retur/retur.php?act=retur_input&id='.$id));
                
                // Removed commented out code that was not being used
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_kwi() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $status     = $this->input->post('status');
            $status_kwi = $this->input->post('status_kwi');
            $dari       = $this->input->post('dari');
            $nominal    = $this->input->post('nominal');
            $ket        = $this->input->post('keterangan');
            $diag       = $this->input->post('diagnosa');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('dari', 'Dari', 'required');
            $this->form_validation->set_rules('nominal', 'Sejumlah', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'      => form_error('id'),
                    'dari'    => form_error('dari'),
                    'nominal' => form_error('nominal'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
            } else {
                $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_jml_dp = $this->db->select_sum('nominal')->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_kwi')->row();
                $tot_dp     = $sql_jml_dp->nominal + general::format_angka_db($nominal);

                $data = [
                    'tgl_simpan'  => date('Y-m-d H:i:s'),
                    'tgl_masuk'   => $sql_medc->tgl_masuk,
                    'id_medcheck' => general::dekrip($id),
                    'id_user'     => $this->ion_auth->user()->row()->id,
                    'dari'        => $dari,
                    'nominal'     => general::format_angka_db($nominal),
                    'ket'         => (!empty($ket) ? $ket : ''),
                    'diagnosa'    => (!empty($diag) ? $diag : ''),
                    'status_kwi'  => $status_kwi,
                ];
                
                $this->db->insert('tbl_trans_medcheck_kwi', $data);

                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri DP berhasil disimpan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri DP gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_kwi_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_kwi     = $this->input->get('id_kwi');
            $status     = $this->input->get('status');
            $act        = $this->input->get('act');
            $rute       = $this->input->get('route');
            
            if(!empty($id)){
                $this->db->where('id', general::dekrip($id_kwi))->delete('tbl_trans_medcheck_kwi');
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Item berhasil di hapus");');
            }
            
            redirect(base_url((!empty($rute) ? $rute : 'medcheck/tambah.php?'.(!empty($act) ? 'act='.$act.'&' : '').'id='.$id.(!empty($id_kwi) ? '&id_kwi='.$id_kwi.'&' : '').'&status='.$status)));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_icd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_rm      = $this->input->post('id_rm');
            $icd        = $this->input->post('icd');
            $status     = $this->input->post('status');
            $st_icd     = $this->input->post('status_icd');
            $rute       = $this->input->post('route');
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('icd', 'ICD', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'    => form_error('id'),
                    'icd'   => form_error('icd'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
            } else {
                // Start Transaction
                $this->db->trans_begin();
                
                try {
                $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_icd  = $this->db->where('id', $icd)->get('tbl_m_icd')->row();
                
                    $grup = $this->ion_auth->get_users_groups()->row();
                    $is_doc_id = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : '0');
                        
                    $data = [
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => (int)$sql_medc->id,
                        'id_medcheck_rm'    => (int)(!empty($id_rm) ? general::dekrip($id_rm) : '0'),
                        'id_icd'            => (int)(!empty($icd) ? $icd : '0'),
                        'id_user'           => (int)$this->ion_auth->user()->row()->id,
                        'id_dokter'         => (int)$is_doc_id,
                        'kode'              => $sql_icd->kode,
                        'icd'               => $sql_icd->icd,
                        'diagnosa_en'       => $sql_icd->icd,
                        'status_icd'        => (!empty($st_icd) ? $st_icd : '0'),
                    ];
                
                # Simpan ke tabel ICD
                $this->db->insert('tbl_trans_medcheck_icd', $data);
                
                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Gagal menyimpan ICD!");
                    }
                    
                    $this->db->trans_commit();
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("ICD berhasil di tambahkan !");');
                    
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                }
                
                redirect(base_url((!empty($rute) ? $rute : 'medcheck/tambah.php?id='.$id.'&status='.$status)));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_icd_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $item_id    = $this->input->get('id_item');
            $status     = $this->input->get('status');
            
            $sql_medc = $this->db->where('id', general::dekrip($item_id))->get('tbl_trans_medcheck_icd');
            
            if($sql_medc->num_rows() > 0){
                /* Transaksi Database */
                $this->db->trans_begin();
                
                try {
                    # Hapus ke tabel medcheck icd
                $this->db->where('id', general::dekrip($item_id))->delete('tbl_trans_medcheck_icd');

                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                        throw new Exception("ICD gagal dihapus!");
                    }

                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.info("ICD Berhasil dihapus!");');

                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                }
            }

            redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
        } else {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!");');
            redirect();
        }
    }



    public function set_medcheck_kamar() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $idk        = $this->input->post('id_kamar');
            $idp        = $this->input->post('id_pasien');
            $tipe       = $this->input->post('tipe');
            $catatan    = $this->input->post('catatan');
            $status     = $this->input->post('status');
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'        => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status=14'));
            } else {
                $sql_kamar      = $this->db->where('id', general::dekrip($idk))->get('tbl_m_kamar')->row();
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $jml            = $sql_kamar->jml + 1;
                
                $data = array(
                    'id_medcheck'=> $sql_medc->id,
                    'id_kamar'   => $sql_kamar->id,
                    'id_pasien'  => $sql_medc->id_pasien,
                    'id_user'    => $this->ion_auth->user()->row()->id,
                    'tgl_simpan' => date('Y-m-d H:i:s'),
                    'keterangan' => $catatan,
                    'status'     => '1',
                );
                
                $data_kamar = array(
                    'tgl_modif' => date('Y-m-d H:i:s'),
                    'jml'       => $jml,
                );
                
                /* Transaksi Database */
                $this->db->query('SET autocommit = 0;');
                $this->db->trans_start();

                # Simpan ke tabel trans medcheck kamar
                $this->db->insert('tbl_trans_medcheck_kamar', $data);
                
                # Update tabel kamar
                $this->db->where('id', $sql_kamar->id)->update('tbl_m_kamar', $data_kamar);

                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();

                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data kamar tidak bisa diinput !")');
                } else {
                    $this->db->trans_complete();

                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data kamar berhasil diinput !")');
                }

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status=14'));
                
//                echo '<pre>';
//                print_r($data);
//                echo '</pre>';
                
                
//                crud::simpan('tbl_trans_medcheck_trf', $data);
//                $last_id = crud::last_id();                
//                crud::update('tbl_trans_medcheck', 'id', $sql_medc->id, $data_medc);
//                
//                $this->session->set_flashdata('medcheck', '<div class="alert alert-success">Transfer Pasien Berhasil !!</div>');
//                redirect(base_url('medcheck/transfer.php?id='.general::enkrip($sql_medc->id).'&trf_id='.general::enkrip($last_id).'&status='.$sql_medc->status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_kamar_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $item_id    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $act        = $this->input->get('act');
            $userid     = $this->ion_auth->user()->row()->id;
            
            $sql_medc   = $this->db->where('id', general::dekrip($item_id))->get('tbl_trans_medcheck_kamar');
            $sql_kmr    = $this->db->where('id', $sql_medc->row()->id_kamar)->get('tbl_m_kamar')->row();
            
            if($sql_medc->num_rows() > 0){
                /* Transaksi Database */
                $this->db->trans_begin();
                
                # Reset ke tabel kamar
                $jml = $sql_kmr->jml - 1;
                $this->db->where('id', $sql_kmr->id)->update('tbl_m_kamar', array('tgl_modif' => date('Y-m-d H:i:s'),'jml' => $jml));
                
                # Hapus ke tabel medcheck kamar
                $this->db->where('id', general::dekrip($item_id))->delete('tbl_trans_medcheck_kamar');

                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();

                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Kamar gagal dihapus !");');
                } else {
                    $this->db->trans_commit();

                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Kamar Berhasil dihapus !");');
                }
            }else{
                # Tampilkan pesan error
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data tidak ditemukan !");');
            }

            redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    

    
    public function set_medcheck_ass_fisik() {
        if (akses::aksesLogin() == TRUE) {
            $id     = $this->input->get('id');
            $act    = $this->input->get('act');
            $status = $this->input->get('status');
            
            if(!empty($id)){
                // Start transaction
                $this->db->trans_begin();
                
                try {
                $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck');
                    
                    if($sql_medc->num_rows() > 0){
                $sql_pasien = $this->db->where('id', $sql_medc->row()->id_pasien)->get('tbl_m_pasien')->row();
                $sql_pny    = $this->db->order_by('id', 'asc')->get('tbl_m_ass_pny')->result(); 
                $pengaturan = $this->db->get('tbl_pengaturan')->row();
                   
                $nomer      = $this->db->where('MONTH(tgl_simpan)', date('m'))->get('tbl_trans_medcheck_ass_fisik')->num_rows() + 1;
                $no_surat   = sprintf('%03d', $nomer).'/'.$pengaturan->kode_surat.'/'.date('m').'/'.date('Y');
                $grup       = $this->ion_auth->get_users_groups()->row();
                $is_anal    = ($grup->name == 'analis' ? '2' : '0');
                $is_anal_id = ($grup->name == 'analis' ? $this->ion_auth->user()->row()->id : '0');
                $is_doc_id  = ($grup->name == 'dokter' ? $this->ion_auth->user()->row()->id : '0');
               
                        $data = [
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'tgl_masuk'     => date('Y-m-d H:i:s'),
                    'id_medcheck'   => $sql_medc->row()->id,
                    'id_pasien'     => $sql_medc->row()->id_pasien,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'id_analis'     => $is_anal_id,
                    'id_dokter'     => $is_doc_id,
                    'no_lab'        => $no_surat,
                    'status'        => '0',
                        ];
                
                    $this->db->insert('tbl_trans_medcheck_ass_fisik', $data);
                    $last_id = crud::last_id();
                    
                        foreach ($sql_pny as $pny) {
                            $data_pny = [
                            'tgl_simpan'        => date('Y-m-d H:i:s'),
                            'id_medcheck'       => $sql_medc->row()->id,
                            'id_medcheck_ass'   => $last_id,
                            'id_item'           => $pny->id,
                            'id_user'           => $this->ion_auth->user()->row()->id,
                            'item_name'         => $pny->penyakit,
                            'item_value2'       => $pny->nilai,
                            'tipe'              => $pny->tipe,
                            'status_posisi'     => $pny->status_posisi,
                            ];
                        
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                                        
                    # Masukkan FISIK ke tabel riwayat berkas
                        $data_file_fisik = [
                        'id_medcheck'       => $sql_medc->row()->id,
                        'id_pasien'         => $sql_medc->row()->id_pasien,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'id_berkas'         => $last_id,
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'tgl_masuk'         => date('Y-m-d H:i'),
                        'judul'             => 'ASSESMENT PEMERIKSAAN ('.$no_surat.')',
                        'keterangan'        => $sql_pasien->nama_pgl,
                        'file_name'         => '/medcheck/surat/cetak_pdf_ass_fisik.php?id='.general::enkrip($sql_medc->row()->id).'&id_ass='.general::enkrip($last_id).'&status='.$status,
                        'file_ext'          => '.pdf',
                        'file_type'         => 'application/pdf',
                        'status'            => '2',
                        ];
                    $this->db->insert('tbl_trans_medcheck_file', $data_file_fisik);
                    
                    if ($this->db->affected_rows() > 0) {
                            $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri assesment berhasil ditambahkan !");');
                    } else {
                            $this->db->trans_rollback();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri assesment gagal disimpan !");');
                    }
                    
                    redirect(base_url('medcheck/tambah.php?'.(!empty($act) ? 'act='.$act.'&' : '').'id='.general::enkrip($sql_medc->row()->id).'&status='.$status));
                    } else {
                        $this->db->trans_rollback();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data tidak ditemukan !");');
                        redirect(base_url('medcheck/tambah.php'));
                    }
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Terjadi kesalahan: '.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php'));
                }
            } else {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("ID tidak ditemukan !");');
                redirect(base_url('medcheck/tambah.php'));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_medcheck_ass_fisik_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $tgl_masuk  = $this->input->post('tgl_masuk');
            $no_sample  = $this->input->post('no_sampel');
            $dokter     = $this->input->post('dokter');
            $ket        = $this->input->post('keterangan');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('no_sampel', 'No Sample', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'        => form_error('id'),
                    'no_sampel' => form_error('no_sampel'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                // Start Transaction
                $this->db->trans_begin();
                
                try {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                    
                    $data = [
                    'tgl_masuk'     => $this->tanggalan->tgl_indo_sys($tgl_masuk).' '.date('H:i:s'),
                    'tgl_modif'     => date('Y-m-d H:i:s'),
                    'id_dokter'     => $dokter,
                    'no_sample'     => $no_sample,
                    'ket'           => $ket,
                    'status'        => '1',
                    ];
                
                    $this->db->where('id', general::dekrip($id_ass))->update('tbl_trans_medcheck_ass_fisik', $data);

                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Gagal menyimpan data assessment!");
                    }
                    
                    $this->db->trans_commit();
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment berhasil disimpan !");');
                redirect(base_url('medcheck/tambah.php?act=resm_fisik&id='.$id.'&status=9'));
                
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?act=resm_fisik&id='.$id.'&status='.$status));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '1')->get('tbl_m_ass_pny')->result();
                $sql_ass_pny2       = $this->db->where('status', '1')->where('tipe', '15')->get('tbl_m_ass_pny')->result();
                $sql_ass_pny3       = $this->db->where('status', '1')->where('tipe', '16')->get('tbl_m_ass_pny')->result();
                $sql_ass_pny4       = $this->db->where('status', '1')->where('tipe', '17')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '1')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $sql_medc_ass_ck2   = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '15')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $sql_medc_ass_ck3   = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '16')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $sql_medc_ass_ck4   = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '17')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();

                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value'        => (!empty($_POST['rk'][$pny->id]) ? $_POST['rk'][$pny->id] : '0'),
                        'tipe'              => 1,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '1')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                }

                # Riwayat pingsan
                foreach ($sql_ass_pny2 as $pny2){
                    $data_pny2 = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny2->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny2->penyakit,
                        'item_value2'       => (!empty($_POST['riw1_jwb'][$pny2->id]) ? $_POST['riw1_jwb'][$pny2->id] : ''),
                        'tipe'              => 15,
                        'status_posisi'     => $pny2->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck2->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny2);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny2->id)->where('tipe', '15')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny2);
                    }
                }

                # Riwayat kebiasaan sehari hari
                foreach ($sql_ass_pny3 as $pny3){
                    $data_pny3 = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny3->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny3->penyakit,
                        'item_value'        => (!empty($_POST['riw2'][$pny3->id]) ? $_POST['riw2'][$pny3->id] : '0'),
                        'item_value2'       => (!empty($_POST['riw2_jwb'][$pny3->id]) ? $_POST['riw2_jwb'][$pny3->id] : ''),
                        'tipe'              => 16,
                        'status_posisi'     => $pny3->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck3->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny3);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny3->id)->where('tipe', '16')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny3);
                    }
                }

                # Riwayat kebiasaan sehari hari
                foreach ($sql_ass_pny4 as $pny4){
                    $data_pny4 = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny4->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny4->penyakit,
                        'item_value'        => (!empty($_POST['riw3'][$pny4->id]) ? $_POST['riw3'][$pny4->id] : '0'),
                        'item_value2'       => (!empty($_POST['riw3_jwb'][$pny4->id]) ? $_POST['riw3_jwb'][$pny4->id] : ''),
                        'tipe'              => 17,
                        'status_posisi'     => $pny4->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck4->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny4);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny4->id)->where('tipe', '17')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny4);
                    }
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act=ass_fisik&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl2() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '2')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '2')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value'        => (!empty($_POST['ro'][$pny->id]) ? $_POST['ro'][$pny->id] : '0'),
                        'item_value2'       => (!empty($_POST['ro_jwb'][$pny->id]) ? $_POST['ro_jwb'][$pny->id] : ''),
                        'tipe'              => 2,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '2')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment riwayat gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl3() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '3')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '3')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){                    
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value2'       => (!empty($_POST['fs_jwb'][$pny->id]) ? $_POST['fs_jwb'][$pny->id] : ''),
                        'item_value3'       => $pny->satuan,
                        'tipe'              => 3,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '3')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan fisik berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl4() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '4')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '4')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value'        => (!empty($_POST['fs'][$pny->id]) ? $_POST['fs'][$pny->id] : '0'),
                        'item_value2'       => (!empty($_POST['fs_jwb'][$pny->id]) ? $_POST['fs_jwb'][$pny->id] : ''),
                        'tipe'              => 4,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '4')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan mata berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl5() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '5')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '5')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value2'       => (!empty($_POST['tht_jwb'][$pny->id]) ? $_POST['tht_jwb'][$pny->id] : ''),
                        'tipe'              => 5,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '5')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan fisik berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl6() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '6')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '6')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value2'       => (!empty($_POST['thrx_jwb'][$pny->id]) ? $_POST['thrx_jwb'][$pny->id] : ''),
                        'tipe'              => 6,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '6')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan fisik berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl7() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '7')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '7')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value2'       => (!empty($_POST['paru_jwb'][$pny->id]) ? $_POST['paru_jwb'][$pny->id] : ''),
                        'tipe'              => 7,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '7')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan fisik berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl8() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '8')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '8')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value2'       => (!empty($_POST['jntg_jwb'][$pny->id]) ? $_POST['jntg_jwb'][$pny->id] : ''),
                        'tipe'              => 8,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '8')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan fisik berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl9() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '9')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '9')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value2'       => (!empty($_POST['jntg_jwb'][$pny->id]) ? $_POST['jntg_jwb'][$pny->id] : ''),
                        'tipe'              => 9,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '9')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan fisik berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl10() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '10')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '10')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value2'       => (!empty($_POST['jntg_jwb'][$pny->id]) ? $_POST['jntg_jwb'][$pny->id] : ''),
                        'tipe'              => 10,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '10')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan fisik berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl11() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '11')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '11')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value2'       => (!empty($_POST['eks_jwb'][$pny->id]) ? $_POST['eks_jwb'][$pny->id] : ''),
                        'tipe'              => 11,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '11')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan fisik berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl12() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '12')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '12')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value2'       => (!empty($_POST['psi_jwb'][$pny->id]) ? $_POST['psi_jwb'][$pny->id] : ''),
                        'tipe'              => 12,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '12')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan fisik berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl13() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '13')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '13')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value2'       => (!empty($_POST['gigi_jwb'][$pny->id]) ? $_POST['gigi_jwb'][$pny->id] : ''),
                        'tipe'              => 13,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '13')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan fisik berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_medcheck_ass_fisik_hsl14() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_ass     = $this->input->post('id_ass');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'            => form_error('id'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                $sql_ass_pny        = $this->db->where('status', '1')->where('tipe', '14')->get('tbl_m_ass_pny')->result();
                $sql_medc           = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row(); 
                $sql_medc_ass       = $this->db->where('id', general::dekrip($id_ass))->get('tbl_trans_medcheck_ass_fisik')->row(); 
                $sql_medc_ass_ck    = $this->db->where('id_medcheck', $sql_medc->id)->where('tipe', '14')->get('tbl_trans_medcheck_ass_fisik_hsl'); 
                $pengaturan         = $this->db->get('tbl_pengaturan')->row();
                               
                foreach ($sql_ass_pny as $pny){
                    $data_pny = array(
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_ass'   => $sql_medc_ass->id,
                        'id_item'           => $pny->id,
                        'id_user'           => $this->ion_auth->user()->row()->id,
                        'item_name'         => $pny->penyakit,
                        'item_value2'       => (!empty($_POST['syrf_jwb'][$pny->id]) ? $_POST['syrf_jwb'][$pny->id] : ''),
                        'tipe'              => 14,
                        'status_posisi'     => $pny->status_posisi,
                    );
                    
                    # cek bila sudah ada datanya silahkan hapus
                    if($sql_medc_ass_ck->num_rows() == 0){
                        # Simpan ke tabel ass hasil
                        $this->db->insert('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }else{
                        $this->db->where('id_medcheck', $sql_medc->id)->where('id_medcheck_ass', $sql_medc_ass->id)->where('id_item', $pny->id)->where('tipe', '14')->update('tbl_trans_medcheck_ass_fisik_hsl', $data_pny);
                    }
                    
//                    echo '<pre>';
//                    print_r($data_pny);
//                    echo '</pre>';
                }
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment pemeriksaan fisik berhasil ditambahkan !");');
                } else {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri hasil assesment gagal disimpan !");');
                }
                
                redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_ass='.$id_ass.'&status='.$status));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # Modul Asessment Fisik Hapus
    public function set_medcheck_ass_fisik_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $item_id    = $this->input->get('item_id');
            $act        = $this->input->get('act');
            $rute       = $this->input->get('route');
            $status     = $this->input->get('status');
            
            $sql_medc_fisik = $this->db->where('id', general::dekrip($item_id))->get('tbl_trans_medcheck_ass_fisik')->row();
            $sql_medc_file  = $this->db->where('id_berkas', $sql_medc_fisik->id)->get('tbl_trans_medcheck_file')->row();
            
            if(!empty($id)){            
                $this->db->where('id_berkas', $sql_medc_fisik->id)->delete('tbl_trans_medcheck_file');
                $this->db->where('id', $sql_medc_fisik->id)->delete('tbl_trans_medcheck_ass_fisik');
                
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri assesment berhasil dihapus !");');
            }
            
            redirect(base_url('medcheck/tambah.php?'.(!empty($act) ? 'act='.$act.'&' : '').'id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    

    # Modul Asessment Rawat Inap
    public function set_medcheck_ass_ranap() {
        if (akses::aksesLogin() == TRUE) {
            $id             = $this->input->post('id');
            $id_ass         = $this->input->post('id_ass');
            $tgl_masuk      = $this->input->post('tgl_masuk');
            $keluhan        = $this->input->post('keluhan');
            $riwayat_skg    = $this->input->post('riwayat_skg');
            $riwayat_klg    = $this->input->post('riwayat_klg');
            $penyakit       = $this->input->post('penyakit');
            $skala_nyeri    = $this->input->post('skala_nyeri');
            $askep_mslh     = $this->input->post('askep_mslh');
            $askep_7an      = $this->input->post('askep_7an');
            $status         = $this->input->post('status');
            $status_rnp     = $this->input->post('status_rnp');
            $act            = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Validasi gagal, silahkan periksa form isian!");');

                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&act='.$act));
            } else {
                try {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    if (!$sql_medc) {
                        throw new Exception("Data medcheck tidak ditemukan");
                    }
                    
                    $sql_medc_ass = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_ass_ranap');
                    
                    $data = [
                        'tgl_simpan'    => date('Y-m-d H:i:s'),
                        'tgl_modif'     => date('Y-m-d H:i:s'),
                        'tgl_masuk'     => $sql_medc->tgl_masuk,
                        'id_medcheck'   => $sql_medc->id,
                        'id_pasien'     => $sql_medc->id_pasien,
                        'id_dokter'     => $sql_medc->id_dokter,
                        'keluhan'       => $keluhan,
                        'riwayat_skg'   => $riwayat_skg,
                        'riwayat_klg'   => $riwayat_klg,
                        'penyakit'      => $penyakit,
                        'skala_nyeri'   => $skala_nyeri,
                        'askep_masalah' => $askep_mslh,
                        'askep_tujuan'  => $askep_7an,
                        'status_rnp'    => (!empty($status_rnp) ? $status_rnp : '0'),
                        'status'        => '1',
                    ];
                    
                    // Start Transaction
                    $this->db->trans_begin(); 
                    
                    if($sql_medc_ass->num_rows() > 0){
                        $ass_id = $sql_medc_ass->row()->id;
                        $this->db->where('id', $ass_id)->update('tbl_trans_medcheck_ass_ranap', $data);
                    } else {
                        $this->db->insert('tbl_trans_medcheck_ass_ranap', $data);
                    }
                    
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception("Entri hasil assesment gagal disimpan!");
                    } else {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment rawat inap berhasil ditambahkan!");');
                    }
                    
                    redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
                } catch (Exception $e) {
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                    }
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    # Modul Asessment Rawat Inap Riwayat Obat
    public function set_medcheck_ass_ranap_obt() {
        if (akses::aksesLogin() == TRUE) {
            $id             = $this->input->post('id');
            $id_ass         = $this->input->post('id_ass');
            $param          = $this->input->post('param');
            $param_nilai    = $this->input->post('param_nilai');
            $act            = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id.'&act='.$act));
            } else {
                try {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    if (!$sql_medc) {
                        throw new Exception("Data medcheck tidak ditemukan");
                    }
                    
                    $sql_medc_ass = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_ass_ranap')->row();
                    if (!$sql_medc_ass) {
                        throw new Exception("Data assessment rawat inap tidak ditemukan");
                    }
                    
                    $pengaturan = $this->db->get('tbl_pengaturan')->row();
                    
                    $data = [
                        'tgl_simpan'    => date('Y-m-d H:i:s'),
                        'id_ass_ranap'  => $sql_medc_ass->id,
                        'id_user'       => $this->ion_auth->user()->row()->id,
                        'param'         => $param,
                        'param_nilai'   => $param_nilai,
                    ];
                    
                    $this->db->insert('tbl_trans_medcheck_ass_ranap_obat', $data);
                    
                    if ($this->db->affected_rows() > 0) {
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri hasil assesment rawat inap berhasil ditambahkan !");');
                    } else {
                        throw new Exception("Entri hasil assesment gagal disimpan");
                    }
                    
                    redirect(base_url('medcheck/tambah.php?id='.$id.'&status=16'));
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?id='.$id.'&status=16'));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # Modul Asessment Rawat Inap Riwayat Obat Hapus
    public function set_medcheck_ass_ranap_obt_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_medc    = $this->input->get('id_medc');
            $act        = $this->input->get('act');
            $rute       = $this->input->get('route');
            $status     = $this->input->get('status');
            
            try {
                if(empty($id)){
                    throw new Exception("ID tidak boleh kosong");
                }
                
                $this->db->where('id', general::dekrip($id))->delete('tbl_trans_medcheck_ass_ranap_obat');
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri riwayat minum obat berhasil dihapus !");');
                } else {
                    throw new Exception("Data riwayat minum obat tidak ditemukan");
                }
                
            } catch (Exception $e) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
            }
            
            redirect(base_url((!empty($rute) ? $rute : 'medcheck/tambah.php?'.(!empty($act) ? 'act='.$act.'&' : '').'id='.$id_medc.'&status='.$status)));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # Modul Konsul Antar dokter
    public function set_konsul() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id_medc');
            $dokter     = $this->input->post('dokter');
            $judul      = $this->input->post('judul');
            $post       = $this->input->post('posting');
            $status     = $this->input->post('status');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');
            $this->form_validation->set_rules('id_medc', 'ID', 'required');
            $this->form_validation->set_rules('posting', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id_medc' => form_error('id_medc'),
                    'posting' => form_error('posting'),
                    'judul'   => form_error('judul'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                redirect(base_url('medcheck/data_konsul_post.php'));
            } else {
                // Start Transaction
                $this->db->trans_begin();
                
                try {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    
                    $data = [
                        'id_medcheck'   => $sql_medc->id,
                        'id_pasien'     => $sql_medc->id_pasien,
                        'id_dokter'     => $dokter,
                        'id_user'       => $this->ion_auth->user()->row()->id,
                        'tgl_simpan'    => date('Y-m-d H:i:s'),
                        'judul'         => $judul,
                        'posting'       => htmlentities($post),
                    ];
                
                    $data_raber = [
                        'id_medcheck'   => $sql_medc->id,
                        'id_user'       => $this->ion_auth->user()->row()->id,
                        'id_pasien'     => $sql_medc->id_pasien,
                        'id_dokter'     => $dokter,
                        'tgl_simpan'    => date('Y-m-d H:i:s'),
                        'keterangan'    => 'Dari konsul dengan topik '.$judul
                    ];

                    # Simpan ke tabel konsul
                    $this->db->insert('tbl_trans_konsul', $data);
                    $last_id = $this->db->insert_id();

                    $data_dokter = [
                        'id_konsul'     => $last_id,
                        'id_dokter'     => $dokter,
                        'tgl_simpan'    => date('Y-m-d H:i:s')
                    ];

                    # Simpan ke tabel konsul data dokter
                    $this->db->insert('tbl_trans_konsul_dokter', $data_dokter);
                    
                    # Simpan ke tabel raber
                    $this->db->insert('tbl_trans_medcheck_dokter', $data_raber);
                    
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Thread gagal di posting!");');
                    } else {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Thread berhasil di posting!");');
                    }

                    redirect(base_url('medcheck/data_konsul.php'));
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Terjadi kesalahan: '.$e->getMessage().'");');
                    redirect(base_url('medcheck/data_konsul_post.php'));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_konsul_balas() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $dokter     = $this->input->post('dokter');
            $post       = $this->input->post('posting');
            $anamnesa   = $this->input->post('anamnesa');
            $diagnosa   = $this->input->post('diagnosa');
            $pemeriksaan= $this->input->post('pemeriksaan');
            $program    = $this->input->post('program');
            $status     = $this->input->post('status');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('posting', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'        => form_error('id'),
                    'posting'   => form_error('posting'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/data_konsul_post.php'));
            } else {
                // Start Transaction
                $this->db->trans_begin();
                
                try {
                    $sql_konsul = $this->db->where('id', general::dekrip($id))->get('tbl_trans_konsul')->row();
                    $sql_medc = $this->db->where('id', $sql_konsul->id_medcheck)->get('tbl_trans_medcheck')->row();
                    
                    $data = [
                    'id_parent'     => $sql_konsul->id,
                        'id_medcheck'   => $sql_medc->id,
                        'id_pasien'     => $sql_medc->id_pasien,
                    'id_dokter'     => $this->ion_auth->user()->row()->id,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'posting'       => htmlentities($post),
                    'anamnesa'      => htmlentities($anamnesa),
                    'diagnosa'      => htmlentities($diagnosa),
                    'pemeriksaan'   => htmlentities($pemeriksaan),
                    'program'       => htmlentities($program),
                    ];

                # Simpan ke tabel konsul
                $this->db->insert('tbl_trans_konsul', $data);

                    $data_dokter = [
                    'id_konsul'     => $sql_konsul->id,
                    'id_dokter'     => $this->ion_auth->user()->row()->id,
                    'tgl_simpan'    => date('Y-m-d H:i:s')
                    ];

                # Simpan ke tabel konsul data dokter
                $this->db->insert('tbl_trans_konsul_dokter', $data_dokter);
                
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Thread balasan berhasil di posting !")');
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Thread gagal di posting: '.$e->getMessage().'")');
                }

                redirect(base_url('medcheck/data_konsul_balas.php?id='.$id));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
        
    public function set_konsul_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $status     = $this->input->get('status');
            $act        = $this->input->get('act');
            $userid     = $this->ion_auth->user()->row()->id;
            
            $sql_konsul = $this->db->where('id', general::dekrip($id))->get('tbl_trans_konsul');
            
            if($sql_konsul->num_rows() > 0){
                /* Transaksi Database */
                $this->db->trans_begin();
                
                # Hapus ke tabel konsultasi
                $this->db->where('id_parent', general::dekrip($id))->delete('tbl_trans_konsul');
                $this->db->where('id', general::dekrip($id))->delete('tbl_trans_konsul');

                # Cek status transact MySQL
                if ($this->db->trans_status() === FALSE) {
                    # Rollback jika gagal
                    $this->db->trans_rollback();

                    # Tampilkan pesan error
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Thread gagal dihapus !");');
                } else {
                    $this->db->trans_commit();

                    # Tampilkan pesan sukses jika sudah berhasil commit
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Thread berhasil dihapus !");');
                }
            }else{
                # Tampilkan pesan error
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Thread tidak ditemukan !");');
            }

            redirect(base_url('medcheck/data_konsul.php'));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function cart_medcheck_simpan() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_lab     = $this->input->post('id_lab');
            $id_lab_kat = $this->input->post('id_lab_kat');
            $id_rad     = $this->input->post('id_rad');
            $id_item    = $this->input->post('id_item');
            $id_dokter  = $this->input->post('id_dokter');
            $id_resep   = $this->input->post('id_resep');
            $tgl_masuk  = $this->input->post('tgl_masuk');
            $hrg        = $this->input->post('harga');
            $jml        = $this->input->post('jml');
            $diskon1    = $this->input->post('disk1');
            $diskon2    = $this->input->post('disk2');
            $diskon3    = $this->input->post('disk3');
            $pot        = $this->input->post('potongan');
            $keterangan = $this->input->post('keterangan');
            $hasil      = $this->input->post('hasil_lab');
            $status     = $this->input->post('status');
            $status_hsl = $this->input->post('status_hsl');
            $status_itm = $this->input->post('status_item');
            $act        = $this->input->post('act');
            $rute       = $this->input->post('route');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('id_item', 'Kode', 'required');
            $this->form_validation->set_rules('jml', 'Jml', 'required|greater_than[0]');
            
            $this->form_validation->set_message('greater_than', 'Harap gunakan menu retur. Kolom %s harus lebih besar dari 0');        
            
            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'        => form_error('id'),
                    'kode'      => form_error('id_item'),
                    'jml'       => form_error('jml'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                $this->session->set_flashdata('jml', $jml);
                
                if (!empty($rute)) {
                    redirect(base_url($rute));
                } else {
                redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status.'&id_produk='.$id_item.'&harga='.(float)$hrg));
                }
            } else {
                try {
                    // Check if cache library is loaded
                    if (!isset($this->cache) || !is_object($this->cache)) {
                        $this->load->driver('cache', array('adapter' => 'file'));
                    }

                    // Create a cache lock to prevent race conditions
                    $lock_key = 'medcheck_cart_lock_' . general::dekrip($id) . '_' . general::dekrip($id_item);
                    if ($this->cache->get($lock_key)) {
                        throw new Exception("Proses sedang berlangsung, silahkan coba beberapa saat lagi.");
                    }

                    // Set lock for 30 seconds
                    $this->cache->save($lock_key, true, 30);

                    $sql_medc    = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    $sql_item    = $this->db->where('id', general::dekrip($id_item))->get('tbl_m_produk')->row();
                    $sql_medc_ck = $this->db->where('id_medcheck', general::dekrip($id))->where('id_item', general::dekrip($id_item))->get('tbl_trans_medcheck_det');
                    $sql_radg_ck = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_rad');
                    $sql_sat     = $this->db->where('id', $sql_item->id_satuan)->get('tbl_m_satuan')->row();
                    $harga       = (float)general::format_angka_db($hrg);
                    $potongan    = (float)general::format_angka_db($pot);
                    $jml_pot     = $potongan * (int)$jml;
                    $dokter      = (!empty($id_dokter) ? $id_dokter : $sql_medc->id_dokter);

                    $disk1       = $harga - (($diskon1 / 100) * $harga);
                    $disk2       = $disk1 - (($diskon2 / 100) * $disk1);
                    $disk3       = $disk2 - (($diskon3 / 100) * $disk2);
                    $diskon      = $harga - $disk3;
                    $subtotal    = ($disk3 - $potongan) * (int)$jml;

                    $data = [
                    'tgl_simpan'    => (!empty($tgl_masuk) ? $this->tanggalan->tgl_indo_sys($tgl_masuk).' '.date('H:i:s') : date('Y-m-d H:i:s')),
                    'tgl_modif'     => date('Y-m-d H:i:s'),
                    'tgl_masuk'     => (!empty($tgl_masuk) ? $this->tanggalan->tgl_indo_sys($tgl_masuk).' '.date('H:i:s') : date('Y-m-d H:i:s')),
                    'id_medcheck'   => (int)$sql_medc->id,
                    'id_item'       => (int)$sql_item->id,
                    'id_item_kat'   => (int)$sql_item->id_kategori,
                    'id_item_sat'   => (int)$sql_item->id_satuan,
                    'id_user'       => (int)$this->ion_auth->user()->row()->id,
                    'id_dokter'     => (int)$dokter,
                    'id_lab'        => (int)general::dekrip($id_lab),
                    'id_lab_kat'    => (int)general::dekrip($id_lab_kat),
                    'id_rad'        => (int)general::dekrip($id_rad),
                    'kode'          => $sql_item->kode,
                    'item'          => $sql_item->produk,
                    'keterangan'    => $keterangan,
                    'hasil_lab'     => $hasil,
                    'harga'         => $harga,
                    'jml'           => (int)$jml,
                    'jml_satuan'    => '1',
                    'satuan'        => $sql_sat->satuanTerkecil,
                    'disk1'         => (float)$diskon1,
                    'disk2'         => (float)$diskon2,
                    'disk3'         => (float)$diskon3,
                    'diskon'        => (float)$diskon,
                        'potongan'      => (float)$jml_pot,
                    'subtotal'      => (float)$subtotal,
                    'status'        => (!empty($status_itm) ? $status_itm : $sql_item->status),
                    'status_hsl'    => (!empty($status_hsl) ? $status_hsl : '0'),
                    ];
                
                # Cek apakah sudah di posting atau belum ?
                # Kalau sudah yg bisa input hny rad, lab, dokter
                    if ($sql_medc->status < 5) {
                    # Start Transact SQL
                        $this->db->trans_begin();
                    
                    # Simpan pada tabel medcheck det
                    $this->db->insert('tbl_trans_medcheck_det', $data);

                        if ($this->db->trans_status() === FALSE) {
                            $this->db->trans_rollback();
                            throw new Exception("Gagal menyimpan data item.");
                        } else {
                            $this->db->trans_commit();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data item berhasil disimpan!");');
                        }
                    } else {
                        if (akses::hakSA() == TRUE OR akses::hakOwner() == TRUE OR akses::hakRad() == TRUE OR akses::hakAnalis() == TRUE) {
                        # Start Transact SQL
                            $this->db->trans_begin();
                    
                        # Simpan pada tabel medcheck det
                        $this->db->insert('tbl_trans_medcheck_det', $data);

                            if ($this->db->trans_status() === FALSE) {
                                $this->db->trans_rollback();
                                throw new Exception("Gagal menyimpan data item.");
                            } else {
                                $this->db->trans_commit();
                                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri data berhasil!");');
                            }
                        } else {
                            throw new Exception("Transaksi ini sudah diposting, sehingga tidak diperbolehkan menambah entrian.");
                        }
                    }
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                } finally {
                    // Release the lock if cache is loaded
                    if (isset($lock_key) && isset($this->cache) && is_object($this->cache)) {
                        $this->cache->delete($lock_key);
                    }
                }

                if (!empty($rute)) {
                    redirect(base_url($rute));
                } else {
                    redirect(base_url('medcheck/tambah.php?'.(!empty($act) ? 'act='.$act.'&' : '').'id='.$id.(!empty($id_lab) ? '&id_lab='.$id_lab : '').(!empty($id_rad) ? '&id_rad='.$id_rad : '').(!empty($id_resep) ? '&id_resep='.$id_resep : '').'&status='.$status));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }      

    public function cart_medcheck_retur_ranap() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_item    = $this->input->post('id_item');
            $id_produk  = $this->input->post('id_produk');
            $no_urut    = $this->input->post('no_urut');
            $jml        = (int)$this->input->post('jml');
            $status     = $this->input->post('status');
            $status_hsl = $this->input->post('status_hsl');
            $status_itm = $this->input->post('status_item');
            $act        = $this->input->post('act');
            $rute       = $this->input->post('route');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('id_item', 'Kode', 'required');
            $this->form_validation->set_rules('jml', 'Jml', 'required|greater_than[0]');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'    => form_error('id'),
                    'kode'  => form_error('id_item'),
                    'jml'   => form_error('jml')
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/retur.php?id='.$id.'&item_id='.$id_item.'&id_produk='.$id_item));
            } else {
                try {
                    $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    $sql_medc_det   = $this->db->where('id', general::dekrip($id_item))->get('tbl_trans_medcheck_det')->row();
                    $sql_item       = $this->db->where('id', general::dekrip($id_produk))->get('tbl_m_produk')->row();
                    $sql_sat        = $this->db->where('id', $sql_item->id_satuan)->get('tbl_m_satuan')->row();
                    $jml_akhir      = (int)$sql_medc_det->jml - $jml;
                    
                    $disk1          = $sql_medc_det->harga - ((isset($sql_medc_det->disk1) && $sql_medc_det->disk1 > 0) ? (($sql_medc_det->disk1 / 100) * $sql_medc_det->harga) : 0);
                    $disk2          = $disk1 - ((isset($sql_medc_det->disk2) && $sql_medc_det->disk2 > 0) ? (($sql_medc_det->disk2 / 100) * $disk1) : 0);
                    $disk3          = $disk2 - ((isset($sql_medc_det->disk3) && $sql_medc_det->disk3 > 0) ? (($sql_medc_det->disk3 / 100) * $disk2) : 0);
                    $diskon         = $sql_medc_det->harga - $disk3;
                    $subtotal       = ($disk3 - (isset($sql_medc_det->potongan) ? $sql_medc_det->potongan : 0)) * $jml_akhir;
                    
                    $data = [
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'id_medcheck'       => (int)$sql_medc->id,
                        'id_medcheck_det'   => (int)$sql_medc_det->id,
                        'id_pasien'         => (int)$sql_medc->id_pasien,
                        'id_item'           => (int)$sql_item->id,
                        'id_user'           => (int)$this->ion_auth->user()->row()->id,
                        'kode'              => $sql_item->kode,
                        'item'              => $sql_item->produk,
                        'jml'               => $jml,
                        'status_item'       => (!empty($status_itm) ? $status_itm : $sql_item->status),
                    ];
                    
                    $data_det = [
                        'tgl_modif'         => date('Y-m-d H:i:s'),
                        'jml'               => $jml_akhir,
                        'subtotal'          => $subtotal
                    ];

                    if($jml_akhir < 0){
                        throw new Exception("Item <b>{$sql_item->produk}</b> pada no {$no_urut}, maksimal retur hanya <b>".(float)$sql_medc_det->jml."</b> !!");
                    }
                    
                    # Start Transaction
                    $this->db->trans_begin();

                    # Kurangi Jumlah yang ada di medcheck det
                    $this->db->where('id', $sql_medc_det->id)->update('tbl_trans_medcheck_det', $data_det);

                    # Masukkan ke table retur
                    $this->db->insert('tbl_trans_medcheck_retur', $data);

                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception("Data retur gagal disimpan!");
                    } else {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data retur berhasil disimpan!");');
                    }
                    
                    redirect(base_url('medcheck/retur.php?id='.$id));                    
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
                    redirect(base_url('medcheck/retur.php?id='.$id));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }      

    // Update Invoice Dari kasir
    public function cart_medcheck_update() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_lab     = $this->input->post('id_lab');
            $id_item    = $this->input->post('item_id');
            $id_item_det= $this->input->post('item_id_det');
            $id_dokter  = $this->input->post('id_dokter');
            $id_resep   = $this->input->post('id_resep');
            $hrg        = $this->input->post('harga');
            $jml        = $this->input->post('jml');
            $diskon1    = $this->input->post('disk1');
            $diskon2    = $this->input->post('disk2');
            $diskon3    = $this->input->post('disk3');
            $pot        = $this->input->post('potongan');
            $pot_poin   = $this->input->post('potongan_poin');
            $keterangan = $this->input->post('keterangan');
            $hasil      = $this->input->post('hasil_lab');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            $lab_id     = $this->input->post('id_lab');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('item_id', 'Item', 'required');
            $this->form_validation->set_rules('harga', 'Harga', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'        => form_error('id'),
                    'kode'      => form_error('id_item'),
                    'harga'     => form_error('harga')
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Validasi gagal, silahkan periksa form isian!");');

                redirect(base_url('medcheck/invoice/bayar.php?id='.$id));
            } else {
                $sql_medc       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_item       = $this->db->where('id', general::dekrip($id_item))->get('tbl_m_produk')->row();
                $sql_medc_ck    = $this->db->where('id', general::dekrip($id_item_det))->get('tbl_trans_medcheck_det');
                $sql_radg_ck    = $this->db->where('id_medcheck', general::dekrip($id))->get('tbl_trans_medcheck_rad');
                $sql_sat        = $this->db->where('id', $sql_item->id_satuan)->get('tbl_m_satuan')->row();
                $harga          = general::format_angka_db($hrg);
                $potongan       = general::format_angka_db($pot);
                $potongan_poin  = general::format_angka_db($pot_poin);
                $jml_pot        = $potongan * (int)$jml;
                $jml_pot_poin   = $potongan_poin;
                $dokter         = (!empty($id_dokter) ? $id_dokter : $sql_medc->id_dokter);

                $sql_cek_remun  = $this->db
                                       ->where('id_medcheck', $sql_medc->id)
                                       ->where('id_medcheck_det', $sql_medc_ck->row()->id)
                                       ->where('id_dokter', $sql_medc_ck->row()->id_dokter)
                                       ->where('id_item', $sql_item->id)
                                       ->get('tbl_trans_medcheck_remun');

                $sql_cek_apres  = $this->db
                                       ->where('id_medcheck', $sql_medc->id)
                                       ->where('id_medcheck_det', $sql_medc_ck->row()->id)
                                       ->where('id_dokter', $sql_medc_ck->row()->id_dokter)
                                       ->where('id_item', $sql_item->id)
                                       ->get('tbl_trans_medcheck_apres');
                
                $disk1      = (float)$harga - (((float)$diskon1 / 100) * (float)$harga);
                $disk2      = (float)$disk1 - (((float)$diskon2 / 100) * (float)$disk1);
                $disk3      = (float)$disk2 - (((float)$diskon3 / 100) * (float)$disk2);
                $diskon     = ((float)$harga - (float)$disk3) * (int)$jml;
                $subtotal   = (((float)$disk3 - (float)$potongan) * (int)$jml) - (float)$potongan_poin;
                
                $data = [
                    'tgl_modif'     => date('Y-m-d H:i:s'),
                    'kode'          => $sql_item->kode,
                    'item'          => $sql_item->produk,
                    'harga'         => $harga,
                    'jml'           => (int)$jml,
                    'jml_satuan'    => '1',
                    'satuan'        => $sql_sat->satuanTerkecil,
                    'disk1'         => (float)$diskon1,
                    'disk2'         => (float)$diskon2,
                    'disk3'         => (float)$diskon3,
                    'diskon'        => (float)$diskon,
                    'potongan'      => (float)$jml_pot,
                    'subtotal'      => (float)$subtotal,
                ];
                
                if($sql_medc_ck->num_rows() > 0){
                    $last_id = $sql_medc_ck->row()->id;
                    $this->db->where('id', $last_id)->update('tbl_trans_medcheck_det', $data);
                }else{
                    $this->db->insert('tbl_trans_medcheck_det', $data);
                    $last_id = $this->db->insert_id();
                }
                
                # Cek Remun dahulu
                if($sql_cek_remun->num_rows() > 0){
                    # Tentukan remun tipenya dan hitung total remunnya
                    $remun      = ($sql_item->remun_tipe == '2' ? $sql_item->remun_nom : (($sql_item->remun_perc / 100) * $subtotal));
                    $remun_tot  = ($remun * (int)$sql_medc_ck->row()->jml) - (float)$diskon - (float)$jml_pot;
                    
                    $data_remun = [
                        'harga'             => $subtotal,
                        'remun_subtotal'    => $remun_tot,
                    ];
                    
                    # Update Remun
                    $this->db->where('id', $sql_cek_remun->row()->id)->update('tbl_trans_medcheck_remun', $data_remun);
                }
                
                # Cek Apres dahulu
                if($sql_cek_apres->num_rows() > 0){
                    # Tentukan apres tipenya dan hitung total remunnya
                    $apres      = ($sql_item->remun_tipe == '2' ? $sql_item->apres_nom : (($sql_item->apres_perc / 100) * $subtotal));
                    $apres_tot  = ($apres * (int)$sql_medc_ck->row()->jml) - (float)$diskon - (float)$jml_pot;
                    
                    $data_apres = [
                        'harga'             => $subtotal,
                        'apres_subtotal'    => $apres_tot,
                    ];
                    
                    # Update Apres
                    $this->db->where('id', $sql_cek_apres->row()->id)->update('tbl_trans_medcheck_apres', $data_apres);
                }
                
                // Update price di total penjualan
                $sql_medc_det_sum   = $this->db->select('SUM(diskon) AS diskon, SUM(potongan) AS potongan, SUM(subtotal) AS subtotal')->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_det')->row();
                $jml_total          = (float)$sql_medc_det_sum->subtotal + (float)$sql_medc_det_sum->diskon + (float)$sql_medc_det_sum->potongan;
                $jml_diskon         = (float)$sql_medc_det_sum->diskon;
                $jml_potongan       = (float)$sql_medc_det_sum->potongan;
                
                // Prevent division by zero
                $diskon = 0;
                if($sql_medc->jml_total > 0) {
                    $diskon = (($sql_medc->jml_total - (float)$sql_medc_det_sum->subtotal) / $sql_medc->jml_total) * 100;
                }
                
                $jml_gtotal = (float)$sql_medc->jml_total - $jml_diskon - $jml_potongan;
                        
                $data_medc_tot = [
                    'jml_diskon'    => $jml_diskon,
                    'jml_potongan'  => $jml_potongan,
                    'jml_subtotal'  => (float)$jml_gtotal,
                    'jml_gtotal'    => (float)$jml_gtotal,
                ];
                
                $this->db->where('id', $sql_medc->id)->update('tbl_trans_medcheck', $data_medc_tot);
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data berhasil diupdate!");');
                redirect(base_url('medcheck/invoice/bayar.php?id='.$id));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }      

    public function cart_medcheck_resep() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_resep   = $this->input->post('id_resep');
            $id_item    = $this->input->post('id_item');
            $id_dokter  = $this->input->post('id_dokter');
            $hrg        = $this->input->post('harga');
            $jml        = $this->input->post('jml');
            $diskon1    = $this->input->post('disk1');
            $diskon2    = $this->input->post('disk2');
            $diskon3    = $this->input->post('disk3');
            $pot        = $this->input->post('potongan');
            $keterangan = $this->input->post('keterangan');
            $hasil      = $this->input->post('hasil_lab');
            $status     = $this->input->post('status');
            $dos_jml1   = $this->input->post('dos_jml1');
            $dos_jml2   = $this->input->post('dos_jml2');
            $dos_sat    = $this->input->post('dos_sat');
            $dos_wkt    = $this->input->post('dos_wkt');
            $dos_ket    = $this->input->post('dos_ket');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('id_item', 'Kode', 'required');
            $this->form_validation->set_rules('harga', 'Harga', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = array(
                    'id'        => form_error('id'),
                    'kode'      => form_error('id_item'),
                    'harga'     => form_error('harga'),
                );

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id));
            } else {
                $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_item   = $this->db->where('id', general::dekrip($id_item))->get('tbl_m_produk')->row();
                $sql_sat    = $this->db->where('id', $sql_item->id_satuan)->get('tbl_m_satuan')->row();
                $sql_sat_pk = $this->db->where('id', $dos_sat)->get('tbl_m_satuan_pakai')->row();
                $harga      = general::format_angka_db($hrg);
                $potongan   = general::format_angka_db($pot);
                $dokter     = (!empty($id_dokter) ? $id_dokter : $sql_medc->id_dokter);
                
                $disk1      = $harga - (($diskon1 / 100) * $harga);
                $disk2      = $disk1 - (($diskon2 / 100) * $disk1);
                $disk3      = $disk2 - (($diskon3 / 100) * $disk2);
                $diskon     = $harga - $disk3;
                $subtotal   = ($disk3 - $potongan) * (int)$jml;
                
                $keranjang = array(
                    'id'      => rand(1,1024).$sql_item->id,
                    'qty'     => (int)$jml,
                    'price'   => (!empty($disk3) ? $disk3 : 0),
                    'name'    => str_replace(array('\'','\\','/'), ' ', $sql_item->produk),
                    'options' => array(
                        'id_medcheck'   => (int)$sql_medc->id,
                        'id_item'       => (int)$sql_item->id,
                        'id_item_kat'   => (int)$sql_item->id_kategori,
                        'id_item_sat'   => (int)$sql_item->id_satuan,
                        'id_user'       => (int)$this->ion_auth->user()->row()->id,
                        'id_dokter'     => (int)$dokter,
                        'tgl_simpan'    => date('Y-m-d H:i:s'),
                        'kode'          => $sql_item->kode,
                        'jml'           => (int)$jml,
                        'jml_satuan'    => '1',
                        'satuan'        => $sql_sat->satuanTerkecil,
                        'harga'         => general::format_angka_db($harga),
                        'disk1'         => (float)$diskon1,
                        'disk2'         => (float)$diskon2,
                        'disk3'         => (float)$diskon3,
                        'potongan'      => (float)$potongan,
                        'dos_jml1'      => $dos_jml1,
                        'dos_sat'       => $sql_sat_pk->satuan,
                        'dos_jml2'      => $dos_jml2,
                        'dos_wkt'       => general::tipe_obat_pakai($dos_wkt),
                        'dos_ket'       => $dos_ket,
                    )
                );

                $this->cart->insert($keranjang);
                redirect(base_url('medcheck/tambah.php?id='.$id.(!empty($id_resep) ? '&id_resep='.$id_resep : '').(!empty($act) ? '&act='.$act : '').'&status='.$status));
//
//                echo '<pre>';
//                print_r($keranjang);
//                echo '</pre>';
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }    

    public function cart_medcheck_resep_upd1() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_resep   = $this->input->post('id_resep');
            $id_item    = $this->input->post('id_item');
            $id_dokter  = $this->input->post('id_dokter');
            $hrg        = $this->input->post('harga');
            $jml        = $this->input->post('jml');
            $diskon1    = $this->input->post('disk1');
            $diskon2    = $this->input->post('disk2');
            $diskon3    = $this->input->post('disk3');
            $pot        = $this->input->post('potongan');
            $keterangan = $this->input->post('keterangan');
            $hasil      = $this->input->post('hasil_lab');
            $dos_jml1   = $this->input->post('dos_jml1');
            $dos_jml2   = $this->input->post('dos_jml2');
            $dos_sat    = $this->input->post('dos_sat');
            $dos_wkt    = $this->input->post('dos_wkt');
            $dos_ket    = $this->input->post('dos_ket');
            $act        = $this->input->post('act');
            $ed         = $this->input->post('ed');
            $ket        = $this->input->post('keterangan');
            $status     = $this->input->post('status');
            $status_mkn = $this->input->post('status_mkn');
            $status_et  = $this->input->post('status_etiket');
            $status_res = $this->input->post('tipe');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('kode', 'Kode', 'required');
            $this->form_validation->set_rules('harga', 'Harga', 'required');
            $this->form_validation->set_rules('jml', 'Jml', 'required|greater_than[0]');
            
            $this->form_validation->set_message('greater_than', 'Harap gunakan menu retur. Kolom %s harus lebih besar dari 0'); 

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'        => form_error('id'),
                    'kode'      => form_error('kode'),
                    'harga'     => form_error('harga'),
                    'jml'       => form_error('jml'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/resep/tambah.php?id='.$id.'&id_resep='.$id_resep.'&status='.$status.'&id_item='.$id_item.'&harga='.$hrg));
            } else {
                $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_pnjm   = $this->db->where('id', $sql_medc->tipe_bayar)->get('tbl_m_penjamin')->row();
                $sql_item   = $this->db->where('id', general::dekrip($id_item))->get('tbl_m_produk')->row();
                $sql_gd     = $this->db->where('status', '1')->get('tbl_m_gudang')->row();
                $sql_stok   = $this->db->select_sum('jml')->where('id_produk', $sql_item->id)->where('id_gudang', $sql_gd->id)->get('tbl_m_produk_stok')->row();
                $sql_sat    = $this->db->where('id', $sql_item->id_satuan)->get('tbl_m_satuan')->row();
                $sql_sat_pk = $this->db->where('id', $dos_sat)->get('tbl_m_satuan_pakai')->row();
                                    
                try {
                    // Check if form is submitted
                    $form_id = $this->input->post('form_id');
                    if (check_form_submitted($form_id)) {
                        throw new Exception('Invalid form submission');
                    }

                    // Check if requested quantity is available in stock
                    if ($sql_item->status_racikan != 1 && $jml > $sql_stok->jml) {
                        throw new Exception('Stok tidak cukup. <b>Stok tersedia: </b>' . $sql_stok->jml . ', Permintaan: ' . $jml);
                    }

                    $harga      = general::format_angka_db($hrg);
                    $percent    = $sql_pnjm->persen / 100;
                    $ass        = ($harga * $sql_pnjm->persen);
                    # Jika penjamin asuransi, maka harga obat di tambah sesuai setelan % pada database
                    $harga_tot  = ($sql_item->status_racikan == '1' ? $harga : ($sql_pnjm->persen != 0 ? $ass : $harga));
                    $potongan   = general::format_angka_db($pot);
                    $dokter     = (!empty($id_dokter) ? $id_dokter : $sql_medc->id_dokter);
                    
                    // Convert all values to float to avoid type errors
                    $harga_tot  = (float) $harga_tot;
                    $diskon1    = (float) $diskon1;
                    $diskon2    = (float) $diskon2;
                    $diskon3    = (float) $diskon3;
                    $potongan   = (float) $potongan;
                    $jml        = (int) $jml;
                
                    $disk1      = $harga_tot - (($diskon1 / 100) * $harga_tot);
                    $disk2      = $disk1 - (($diskon2 / 100) * $disk1);
                    $disk3      = $disk2 - (($diskon3 / 100) * $disk2);
                    $diskon     = $harga_tot - $disk3;
                    $subtotal   = ($disk3 - $potongan) * $jml;

                    $data_resep = [
                        'id_medcheck'   => (int)$sql_medc->id,
                        'id_resep'      => (int)general::dekrip($id_resep),
                        'id_item'       => (int)$sql_item->id,
                        'id_item_kat'   => (int)$sql_item->id_kategori,
                        'id_item_sat'   => (int)$sql_item->id_satuan,
                        'id_user'       => $this->ion_auth->user()->row()->id,
                        'tgl_simpan'    => date('Y-m-d H:i:s'),
                        'tgl_modif'     => date('Y-m-d H:i:s'),
                        'kode'          => $sql_item->kode,
                        'item'          => $sql_item->produk,
                        'dosis'         => (!empty($dos_jml1) ? $dos_jml1.' '.$sql_sat_pk->satuan.' Tiap '.$dos_jml2.' '.general::tipe_obat_pakai($dos_wkt) : ''),
                        'dosis_ket'     => $dos_ket,
                        'keterangan'    => $ket,
                        'harga'         => (!empty($disk3) ? round($disk3) : 0),
                        'jml'           => $jml,
                        'jml_satuan'    => '1',
                        'satuan'        => $sql_sat->satuanTerkecil,
                        'status'        => (int)$status,
                        'status_resep'  => '0',
                        'status_pj'     => ($ass > 0 ? '1' : '0'),
                        'status_mkn'    => (!empty($status_mkn) ? $status_mkn : '0'),
                        'status_etiket' => (!empty($status_et) ? $status_et : '0'),
                    ];
                
                    if($sql_medc->status < 5){
                        # Start transaction
                        $this->db->trans_begin();
                
                        # Simpan ke tabel resep
                        $this->db->insert('tbl_trans_medcheck_resep_det', $data_resep);
                
                        # Check if transaction successful
                        if ($this->db->trans_status() === FALSE) {
                            $this->db->trans_rollback();
                            throw new Exception("Database transaction failed");
                        } else {
                            $this->db->trans_commit();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data resep berhasil disimpan !!")');
                        }
                    }else{
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data resep gagal disimpan karena sudah ada di posting !!")');
                    }
                                
                    redirect(base_url('medcheck/tambah.php?'.(!empty($act) ? 'act='.$act.'&' : '').'id='.$id.'&id_resep='.$id_resep.'&status='.$status));
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Terjadi kesalahan: ' . $e->getMessage() . '")');
                    redirect(base_url('medcheck/tambah.php?'.(!empty($act) ? 'act='.$act.'&' : '').'id='.$id.'&id_resep='.$id_resep.'&status='.$status));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }    

    public function cart_medcheck_resep_upd2() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_resep   = $this->input->post('id_resep');
            $id_item    = $this->input->post('id_item_resep');
            $id_dokter  = $this->input->post('id_dokter');
            $hrg        = $this->input->post('harga');
            $jml        = $this->input->post('jml');
            $diskon1    = $this->input->post('disk1');
            $diskon2    = $this->input->post('disk2');
            $diskon3    = $this->input->post('disk3');
            $dos_jml1   = $this->input->post('dos_jml1');
            $dos_jml2   = $this->input->post('dos_jml2');
            $dos_sat    = $this->input->post('dos_sat');
            $dos_wkt    = $this->input->post('dos_wkt');
            $dos_ket    = $this->input->post('dos_ket');
            $act        = $this->input->post('act');
            $status_res = $this->input->post('tipe');
            $ket        = $this->input->post('keterangan');
            $status_mkn = $this->input->post('status_mkn');
            $status     = $this->input->post('status');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('kode', 'Kode', 'required');
            $this->form_validation->set_rules('harga', 'Harga', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'        => form_error('id'),
                    'kode'      => form_error('kode'),
                    'harga'     => form_error('harga'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Validasi form gagal")');
                redirect(base_url('medcheck/tambah.php?id='.$id));
            } else {
                try {
                    $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    $sql_res_rw = $this->db->where('id', general::dekrip($id_item))->get('tbl_trans_medcheck_resep_det')->row();
                    $sql_item   = $this->db->where('id', $sql_res_rw->id_item)->get('tbl_m_produk')->row();
                    $sql_sat_pk = $this->db->where('id', $dos_sat)->get('tbl_m_satuan_pakai')->row();
                    
                    $data_resep = [
                        'jml'           => (int)$jml,
                        'dosis'         => (!empty($dos_jml1) ? $dos_jml1.' '.$sql_sat_pk->satuan.' Tiap '.$dos_jml2.' '.general::tipe_obat_pakai($dos_wkt) : ''),
                        'dosis_ket'     => $dos_ket,
                        'keterangan'    => $ket,
                        'status_mkn'    => (!empty($status_mkn) ? $status_mkn : '0'),
                        'status_resep'  => (int)$status_res, 
                    ];
                    
                    # Transactional database
                    $this->db->trans_start();
                    
                    # Update ke tabel resep
                    $this->db->where('id', $sql_res_rw->id)->update('tbl_trans_medcheck_resep_det', $data_resep);
                    
                    # Complete
                    $this->db->trans_complete();
                    
                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Database transaction failed");
                    }
                    
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data item berhasil disimpan !!")');
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Terjadi kesalahan: ' . $e->getMessage() . '")');
                }
                
                redirect(base_url('medcheck/tambah.php?'.(!empty($act) ? 'act=res_input&' : '').'id='.$id.'&id_resep='.$id_resep.'&status='.$status));
            }
        } else {
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!")');
            redirect();
        }
    }  

    public function cart_medcheck_resep_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_resep   = $this->input->get('id_resep');
            $id_item    = $this->input->get('id_item');
            $status     = $this->input->get('status');
            
            if(!empty($id_item)){
                $cart = [
                    'rowid' => $id_item,
                    'qty'   => '0'
                ];
                $this->cart->update($cart);
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Item berhasil dihapus dari keranjang")');
            }            
            
            redirect(base_url('medcheck/tambah.php?id='.$id.(!empty($id_resep) ? '&id_resep='.$id_resep : '').'&status='.$status));
        } else {
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!")');
            redirect();
        }
    }  

    public function cart_medcheck_resep_item_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_resep   = $this->input->get('id_resep');
            $id_item    = $this->input->get('id_item');
            $status     = $this->input->get('status');
            
            if(!empty($id_item)){                
                crud::delete('tbl_trans_medcheck_resep_det', 'id', general::dekrip($id_item));
                
                $this->session->set_flashdata('medcheck_toast', "toastr.error('Item sudah terhapus')");
            }
            
            redirect(base_url('medcheck/tambah.php?act=res_input&id='.$id.(!empty($id_resep) ? '&id_resep='.$id_resep : '').'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }  
    
    public function cart_medcheck_resep_rc() {
        if (akses::aksesLogin() == TRUE) {
            $id             = $this->input->post('id');
            $id_resep       = $this->input->post('id_resep');
            $id_resep_det   = $this->input->post('id_resep_det');
            $id_item        = $this->input->post('id_item');
            $id_item_rc     = $this->input->post('id_item_rc');
            $id_dokter      = $this->input->post('id_dokter');
            $hrg            = $this->input->post('harga');
            $jml            = $this->input->post('jml');
            $diskon1        = $this->input->post('disk1');
            $diskon2        = $this->input->post('disk2');
            $diskon3        = $this->input->post('disk3');
            $pot            = $this->input->post('potongan');
            $keterangan     = $this->input->post('keterangan');
            $hasil          = $this->input->post('hasil_lab');
            $status         = $this->input->post('status');
            $satuan         = $this->input->post('satuan');
            $dos_jml1       = $this->input->post('dos_jml1');
            $dos_jml2       = $this->input->post('dos_jml2');
            $dos_sat        = $this->input->post('dos_sat');
            $dos_wkt        = $this->input->post('dos_wkt');
            $dos_ket        = $this->input->post('dos_ket');
            $act            = $this->input->post('act');
            $status_res     = $this->input->post('tipe');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('kode', 'Kode', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'    => form_error('id'),
                    'kode'  => form_error('kode'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?act=res_input_rc&id='.$id.'&id_resep='.$id_resep.'&status='.$status.'&id_produk='.$id_item.'&item_id='.$id_item_rc));
            } else {
//                $sql_item   = $this->db->where('id', general::dekrip($id_item))->get('tbl_m_produk')->row();
                $sql_item_rc= $this->db->where('id', general::dekrip($id_item_rc))->get('tbl_m_produk')->row();
                $sql_gd     = $this->db->where('status', '1')->get('tbl_m_gudang')->row();
                $sql_stok   = $this->db->select_sum('jml')->where('id_produk', $sql_item_rc->id)->where('id_gudang', $sql_gd->id)->get('tbl_m_produk_stok')->row();
                $sql_medc   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_medc_rs= $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck_resep')->row();
                $sql_medc_dt= $this->db->where('id', general::dekrip($id_item))->get('tbl_trans_medcheck_resep_det')->row();
                $sql_pnjm   = $this->db->where('id', $sql_medc->tipe_bayar)->get('tbl_m_penjamin')->row();
                $sql_sat    = $this->db->where('id', $sql_item_rc->id_satuan)->get('tbl_m_satuan')->row();
                $sql_sat_pk = $this->db->where('id', $dos_sat)->get('tbl_m_satuan_pakai')->row();
                $harga      = general::format_angka_db($hrg);
                $percent    = $sql_pnjm->persen / 100;
                $ass        = ($harga * $sql_pnjm->persen);
                $harga_tot  = ($sql_pnjm->persen != 0 ? $ass : $harga); # Jika penjamin asuransi, maka harga obat di tambah sesuai setelan % pada database
                $potongan   = general::format_angka_db($pot);
                $dokter     = (!empty($id_dokter) ? $id_dokter : $sql_medc->id_dokter);
                
                $subtotal   = $harga_tot * (float)$jml;
                
                try {                    
                    // Check if form has been submitted
                    if (check_form_submitted('form_id')) {
                        throw new Exception('Invalid form submission');
                    }

                    // Check if requested quantity is available in stock
                    if ($sql_item_rc->status_racikan != 1 && $jml > $sql_stok->jml) {
                        throw new Exception('Stok tidak cukup. <b>Stok tersedia: </b>' . $sql_stok->jml . ', Permintaan: ' . $jml);
                    }


                    // Start transaction
                    $this->db->trans_begin();
                    
                    $data_resep = [
                    'id_medcheck'   => (int)$sql_medc->id,
                    'id_resep'      => (int)general::dekrip($id_resep),
                    'id_resep_det'  => (int)general::dekrip($id_resep_det),
                    'id_item'       => (int)$sql_item_rc->id,
                    'id_item_kat'   => (int)$sql_item_rc->id_kategori,
                    'id_item_sat'   => (int)$sql_item_rc->id_satuan,
                    'id_user'       => $this->ion_auth->user()->row()->id,
                    'tgl_simpan'    => date('Y-m-d H:i:s'),
                    'kode'          => $sql_item_rc->kode,
                    'item'          => $sql_item_rc->produk,
                    'satuan_farmasi'=> $dos_jml1.' '.$sql_sat_pk->satuan,
                    'catatan'       => $dos_ket,
                    'harga'         => (!empty($harga_tot) ? $harga_tot : '0'),
                    'jml'           => (float)$jml,
                    'jml_satuan'    => '1',
                    'subtotal'      => $subtotal,
                    'satuan'        => $sql_sat->satuanTerkecil,
                    'status'        => $sql_item_rc->status,
                    ];
                
                # Simpan ke tabel resep
                $this->db->insert('tbl_trans_medcheck_resep_det_rc', $data_resep);
                
                //Update racikan
                $sql_sum_rc = $this->db->select('*')->where('id_resep_det', general::dekrip($id_resep_det))->get('tbl_trans_medcheck_resep_det_rc')->result();
                $item_rc    = json_encode($sql_sum_rc);
                    $this->db->where('id', general::dekrip($id_resep_det))->update('tbl_trans_medcheck_resep_det', ['resep'=>$item_rc]);
                    
                    // Check if transaction successful
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception("Gagal menyimpan data racikan");
                    } else {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Item '.$sql_item_rc->produk.' berhasil disimpan")');
                    }
                    
                redirect(base_url('medcheck/tambah.php?act=res_input_rc&id='.$id.'&id_resep='.$id_resep.'&status='.$status.'&item_id='.$id_item));
                
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'")');
                    redirect(base_url('medcheck/tambah.php?act=res_input_rc&id='.$id.'&id_resep='.$id_resep.'&status='.$status.'&item_id='.$id_item));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    } 

    public function cart_medcheck_resep_rc_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_resep   = $this->input->get('id_resep');
            $id_item    = $this->input->get('item_id');
            $id_item_dt = $this->input->get('item_id_det');
            $status     = $this->input->get('status');
            
            if(!empty($id_item)) {
                $this->db->trans_begin();
                
                try {
                    # Hapus Item Racikannya Dulu
                    $this->db->where('id', general::dekrip($id_item))->delete('tbl_trans_medcheck_resep_det_rc');
                    
                    # Lalu Update Harga Untuk Item Racikan
                    $sql_sum_rc2 = $this->db->where('id_resep_det', general::dekrip($id_item_dt))->get('tbl_trans_medcheck_resep_det_rc')->result();
                    $item_rc = json_encode($sql_sum_rc2);
                    
                    # Get item name for toast message
                    $sql_item = $this->db->where('id', general::dekrip($id_item))->get('tbl_trans_medcheck_resep_det_rc')->row();
                    $item_name = !empty($sql_item) ? $sql_item->item : 'Item';
                    
                    # Update resep detail
                    $this->db->where('id', general::dekrip($id_item_dt))->update('tbl_trans_medcheck_resep_det', ['resep' => $item_rc]);
                    
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Gagal menghapus item racikan")');
                    } else {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Item '.strtoupper($item_name).' berhasil dihapus")');
                    }
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'")');
                }
            }
            
            redirect(base_url('medcheck/tambah.php?act=res_input_rc&id='.$id.(!empty($id_resep) ? '&id_resep='.$id_resep : '').'&status='.$status.'&item_id='.$id_item_dt));
        } else {
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!")');
            redirect();
        }
    }

    public function cart_medcheck_rad() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_rad     = $this->input->post('id_rad');
            $id_item    = $this->input->post('id_item');
            $id_produk  = $this->input->post('id_produk');
            $id_dokter  = $this->input->post('id_dokter');
            $item_name  = $this->input->post('item_name');
            $item_val   = $this->input->post('item_value');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id' => form_error('id'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('medcheck/tambah.php?id='.$id));
            } else {
                try {
                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    if (!$sql_medc) {
                        throw new Exception("Data medcheck tidak ditemukan");
                    }
                    
                    $sql_medc_rad = $this->db->where('id', general::dekrip($id_rad))->get('tbl_trans_medcheck_rad')->row();
                    if (!$sql_medc_rad) {
                        throw new Exception("Data radiologi tidak ditemukan");
                    }
                    
                    $data_rad = [
                        'id_medcheck'       => $sql_medc->id,
                        'id_medcheck_det'   => general::dekrip($id_item),
                        'id_rad'            => $sql_medc_rad->id,
                        'id_radiografer'    => $sql_medc_rad->id_radiografer,
                        'tgl_simpan'        => date('Y-m-d H:i:s'),
                        'tgl_modif'         => date('Y-m-d H:i:s'),
                        'item_name'         => $item_name,
                        'item_value'        => $item_val,
                        'status'            => '0',
                    ];
                    
                    if($sql_medc->status < 5){
                        # Transaksi Database
                        $this->db->query('SET autocommit = 0;');
                        $this->db->trans_start();
                        
                        # Simpan pada tabel detail radiologi
                        $this->db->insert('tbl_trans_medcheck_rad_det', $data_rad);
                        
                        # Update pada tabel tracer radiologi
                        $this->db->where('id', $sql_medc->id)->update('tbl_trans_medcheck', ['tgl_periksa_rad_baca' => date('Y-m-d H:i:s')]);
                        
                        # Cek status transact MySQL
                        if ($this->db->trans_status() === FALSE) {
                            # Rollback jika gagal
                            $this->db->trans_rollback();
                            throw new Exception("Data gagal disimpan");
                        } else {
                            $this->db->trans_complete();
                            $this->session->set_flashdata('medcheck_toast', 'toastr.success("Nilai pemeriksaan berhasil di simpan !!");');
                        }
                    } else {
                        if(akses::hakRad() == TRUE OR akses::hakAnalis() == TRUE){
                            # Transaksi Database
                            $this->db->query('SET autocommit = 0;');
                            $this->db->trans_start();

                            # Simpan pada tabel detail radiologi
                            $this->db->insert('tbl_trans_medcheck_rad_det', $data_rad);
                            
                            # Update pada tabel tracer radiologi
                            $this->db->where('id', $sql_medc->id)->update('tbl_trans_medcheck', ['tgl_periksa_rad_baca' => date('Y-m-d H:i:s')]);

                            # Cek status transact MySQL
                            if ($this->db->trans_status() === FALSE) {
                                # Rollback jika gagal
                                $this->db->trans_rollback();
                                throw new Exception("Data gagal disimpan");
                            } else {
                                $this->db->trans_complete();
                                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Nilai pemeriksaan berhasil di simpan !!");');
                            }
                        } else {
                            throw new Exception("Transaksi ini sudah diposting, sehingga tidak di perbolehkan menambah / mengubah entrian");
                        } 
                    }
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'!!");');
                }
                
                redirect(base_url('medcheck/tambah.php?'.(!empty($act) ? '&act='.$act : '').(!empty($id) ? '&id='.$id : '').(!empty($id_rad) ? '&id_rad='.$id_rad : '').(!empty($status) ? '&status='.$status : '').(!empty($id_item) ? '&id_item='.$id_item : '').(!empty($id_produk) ? '&id_produk='.$id_produk : '')));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    } 

    public function cart_medcheck_rad_file() {
        if (!akses::aksesLogin()) {
            echo json_encode(['success' => false, 'message' => 'Authentication failed']);
            return;
        }
    
        $response = ['success' => false, 'message' => ''];
    
        try {
            $id         = $this->input->post('id');
            $id_rad     = $this->input->post('id_rad');
            $id_item    = $this->input->post('id_item');
            $id_produk  = $this->input->post('id_produk');
            $judul      = $this->input->post('judul');
            
            // Validate required fields
            if (empty($id) || empty($judul)) {
                echo json_encode(['success' => false, 'message' => 'ID and Judul are required']);
                return;
            }
    
            $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
            $sql_medc_rad = $this->db->where('id', general::dekrip($id_rad))->get('tbl_trans_medcheck_rad')->row();
            $sql_pasien = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row();
            $no_rm = strtolower($sql_pasien->kode_dpn).$sql_pasien->kode;
            $folder = realpath('./file/pasien/'.$no_rm);
    
            if (!empty($_FILES['fupload']['name'])) {
                $config['upload_path']      = $folder;
                $config['allowed_types']    = 'jpg|png|jpeg';
                $config['max_size']         = 5120; // 5MB
                $config['remove_spaces']    = TRUE;
                $config['overwrite']        = TRUE;
                $config['file_name']        = 'medc_'.$sql_medc->no_rm.'_rad'.sprintf('%05d', rand(1,256));
                
                $this->load->library('upload', $config);
    
                if (!$this->upload->do_upload('fupload')) {
                    echo json_encode([
                        'success' => false, 
                        'message' => $this->upload->display_errors('','')
                    ]);
                    return;
                }
    
                $f = $this->upload->data();
                
                $data_rad = [
                    'id_medcheck'       => $sql_medc->id,
                    'id_medcheck_det'   => general::dekrip($id_item),
                    'id_rad'            => $sql_medc_rad->id,
                    'id_user'           => $this->ion_auth->user()->row()->id,
                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                    'tgl_modif'         => date('Y-m-d H:i:s'),
                    'judul'             => $judul,
                    'file_name'         => $f['orig_name'],
                    'file_name_orig'    => $f['client_name'],
                    'file_ext'          => $f['file_ext'],
                    'file_type'         => $f['file_type'],
                ];
    
                crud::simpan('tbl_trans_medcheck_rad_file', $data_rad);
                
                $this->db->where('id', $sql_medc->id)
                         ->update('tbl_trans_medcheck', ['tgl_periksa_rad_kirim' => date('Y-m-d H:i:s')]);
    
                echo json_encode([
                    'success' => true,
                    'message' => 'File radiologi berhasil diunggah',
                    'file' => [
                        'name' => $f['orig_name'],
                        'type' => $f['file_type'],
                        'size' => $f['file_size']
                    ]
                ]);
                return;
            }
    
            echo json_encode(['success' => false, 'message' => 'No file uploaded']);
            
        } catch (Exception $e) {
            echo json_encode(['success' => false, 'message' => $e->getMessage()]);
        }
    }

    public function cart_medcheck_rad_file_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_item    = $this->input->get('file_id');
            $status     = $this->input->get('status');
            $act        = $this->input->get('act');
            
            if(!empty($id_item)){
                try {
                    $this->db->trans_begin();
                    
                    $sql_medc    = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    $sql_medc_rad= $this->db->where('id', general::dekrip($id_item))->get('tbl_trans_medcheck_rad_file')->row();
                    $sql_pasien  = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row();
                    $no_rm       = strtolower($sql_pasien->kode_dpn).$sql_pasien->kode;
                    $folder      = realpath('./file/pasien/'.$no_rm);
                   
                    $path   = $folder.'/';
                    $berkas = $path.$sql_medc_rad->file_name;
                    
                    if(file_exists($berkas)){
                        unlink($berkas);
                    }
                    
                    // Delete the file record
                    $this->db->where('id', general::dekrip($id_item))->delete('tbl_trans_medcheck_rad_file');
                    
                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Gagal menghapus file radiologi");
                    }
                    
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("File radiologi berhasil dihapus");');
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Error: ' . $e->getMessage() . '");');
                    log_message('error', 'Medcheck radiologi file delete error: ' . $e->getMessage());
                }
            }
            
            // Build redirect URL with parameters
            $redirect_params = [
                'act' => $act,
                'id' => $id,
                'id_rad' => $this->input->get('id_rad'),
                'status' => $status,
                'id_item' => $this->input->get('id_item'),
                'id_produk' => $this->input->get('id_produk')
            ];
            
            $redirect_url = 'medcheck/tambah.php?' . http_build_query(array_filter($redirect_params));
            redirect(base_url($redirect_url));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    } 

    public function cart_medcheck_rad_hsl_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_item    = $this->input->get('item_id');
            $hasil_id   = $this->input->get('hasil_id');
            $status     = $this->input->get('status');
            
            if(!empty($hasil_id)){                
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Nilai pemeriksaan berhasil di hapus !!");');
                crud::delete('tbl_trans_medcheck_rad_det', 'id', general::dekrip($hasil_id));
            }else{
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Nilai pemeriksaan gagal di hapus !!");');
            }
            
            redirect(base_url('medcheck/tambah.php?act='.$this->input->get('act').'&id='.$this->input->get('id').'&id_rad='.$this->input->get('id_rad').'&status='.$this->input->get('status').'&id_item='.$this->input->get('id_item').'&id_produk='.$this->input->get('id_produk')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    } 

    public function cart_medcheck_lab_hsl_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_lab     = $this->input->get('id_lab');
            $id_item    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $act        = $this->input->get('act');
            
            if(!empty($id_item)){
                try {
                    $this->db->where('id', general::dekrip($id_item))->delete('tbl_trans_medcheck_lab_hsl');
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Hasil laboratorium berhasil dihapus");');
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Error: ' . $e->getMessage() . '");');
                    log_message('error', 'Medcheck lab hasil delete error: ' . $e->getMessage());
                }
            }
            
            // Build redirect URL with parameters
            $redirect_params = [
                'id' => $id,
                'status' => $status,
                'act' => $act,
                'id_lab' => $id_lab
            ];
            
            redirect(base_url('medcheck/tambah.php?' . http_build_query($redirect_params)));
        } else {
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function cart_medcheck_rm() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_dokter  = $this->input->post('id_dokter');
            $id_nurse   = $this->input->post('id_perawat');
            $id_pasien  = $this->input->post('id_pasien');
            $id_icd     = $this->input->post('icd');
            $id_icd10   = $this->input->post('icd10');
            $tgl        = $this->input->post('tgl');
            $anamnesa   = $this->input->post('anamnesa');
            $priksa     = $this->input->post('pemeriksaan');
            $diagnos    = $this->input->post('diagnosa');
            $terapi     = $this->input->post('terapi');
            $program    = $this->input->post('program');
            $ns_subj    = $this->input->post('ns_subj');
            $ns_obj     = $this->input->post('ns_obj');
            $ns_ass     = $this->input->post('ns_ass');
            $ns_prog    = $this->input->post('ns_prog');
            $ttv_st     = $this->input->post('ttv_st');
            $ttv_bb     = $this->input->post('ttv_bb');
            $ttv_tb     = $this->input->post('ttv_tb');
            $ttv_sst    = $this->input->post('ttv_sistole');
            $ttv_dst    = $this->input->post('ttv_diastole');
            $ttv_ndi    = $this->input->post('ttv_nadi');
            $ttv_lju    = $this->input->post('ttv_laju');
            $ttv_sat    = $this->input->post('ttv_saturasi');
            $ttv_skl    = $this->input->post('ttv_skala');
            $act        = $this->input->post('act');
            $status     = $this->input->post('status');
            $tipe       = $this->input->post('tipe');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');
            
            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('anamnesa', 'ID', 'required');
            $this->form_validation->set_rules('diagnosa', 'ID', 'required');
            $this->form_validation->set_rules('pemeriksaan', 'ID', 'required');
            $this->form_validation->set_rules('program', 'ID', 'required');
            $this->form_validation->set_rules('terapi', 'ID', 'required');
            
            if (akses::hakSA() == TRUE OR akses::hakOwner() == TRUE OR akses::hakPerawat() == TRUE) {
                $this->form_validation->set_rules('ttv_st', 'ID', 'required');
                $this->form_validation->set_rules('ttv_bb', 'ID', 'required');
                $this->form_validation->set_rules('ttv_tb', 'ID', 'required');
                $this->form_validation->set_rules('ttv_saturasi', 'ID', 'required');
                $this->form_validation->set_rules('ttv_sistole', 'ID', 'required');
                $this->form_validation->set_rules('ttv_diastole', 'ID', 'required');
                $this->form_validation->set_rules('ttv_nadi', 'ID', 'required');
                $this->form_validation->set_rules('ttv_laju', 'ID', 'required');
                $this->form_validation->set_rules('ttv_skala', 'ID', 'required');
            }

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'            => form_error('id'),
                    'anamnesa'      => form_error('anamnesa'),
                    'diagnosa'      => form_error('diagnosa'),
                    'pemeriksaan'   => form_error('pemeriksaan'),
                    'program'       => form_error('program'),
                    'terapi'        => form_error('terapi'),
                    'ttv_st'        => form_error('ttv_st'),
                    'ttv_bb'        => form_error('ttv_bb'),
                    'ttv_tb'        => form_error('ttv_tb'),
                    'ttv_sistole'   => form_error('ttv_sistole'),
                    'ttv_diastole'  => form_error('ttv_diastole'),
                    'ttv_saturasi'  => form_error('ttv_saturasi'),
                    'ttv_nadi'      => form_error('ttv_nadi'),
                    'ttv_laju'      => form_error('ttv_laju'),
                    'ttv_skala'     => form_error('ttv_skala'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri rekam medis gagal disimpan !, isian tidak boleh kosong.");');
                
                # Form value
                $this->session->set_flashdata('anamnesa', $anamnesa);
                $this->session->set_flashdata('pemeriksaan', $priksa);
                $this->session->set_flashdata('diagnosa', $diagnos);
                $this->session->set_flashdata('program', $program);
                $this->session->set_flashdata('terapi', $terapi);
                
                $this->session->set_flashdata('ttv_st', $ttv_st);
                $this->session->set_flashdata('ttv_bb', $ttv_bb);
                $this->session->set_flashdata('ttv_tb', $ttv_tb);
                $this->session->set_flashdata('ttv_sistole', $ttv_sst);
                $this->session->set_flashdata('ttv_diastole', $ttv_dst);
                $this->session->set_flashdata('ttv_saturasi', $ttv_sat);
                $this->session->set_flashdata('ttv_nadi', $ttv_ndi);
                $this->session->set_flashdata('ttv_laju', $ttv_lju);
                $this->session->set_flashdata('ttv_skala', $ttv_skl);

                redirect(base_url('medcheck/tambah.php?act=rm_input&id='.$id.'&status='.$status));
            } else {
                try {
                    $sql_rm = $this->db->get('tbl_trans_medcheck_rm');
                    $nomer  = $sql_rm->num_rows() + 1;
                    $kode   = sprintf('%05d', $nomer);
                            
                    $data = [
                        'id_medcheck' => general::dekrip($id),
                        'id_user'     => $this->ion_auth->user()->row()->id,
                        'id_perawat'  => $this->ion_auth->user()->row()->id,
                        'id_dokter'   => (!empty($id_dokter) ? $id_dokter : 0),
                        'id_pasien'   => general::dekrip($id_pasien),
                        'id_icd'      => (!empty($id_icd) ? $id_icd : '0'),
                        'id_icd10'    => (!empty($id_icd10) ? $id_icd10 : '0'),
                        'tgl_simpan'  => $this->tanggalan->tgl_indo_sys($tgl).' '.date('H:i:s'),
                        'kode'        => $kode,
                        'anamnesa'    => (!empty($anamnesa) ? htmlentities($anamnesa, ENT_QUOTES | ENT_IGNORE, "UTF-8") : '-'),
                        'pemeriksaan' => (!empty($priksa) ? htmlentities($priksa) : '-'),
                        'diagnosa'    => (!empty($diagnos) ? htmlentities($diagnos) : '-'),
                        'terapi'      => (!empty($terapi) ? htmlentities($terapi) : '-'),
                        'program'     => (!empty($program) ? htmlentities($program) : '-'),
                        'ttv_st'      => (!empty($ttv_st) ? $ttv_st : 0),
                        'ttv_bb'      => (!empty($ttv_bb) ? $ttv_bb : 0),
                        'ttv_tb'      => (!empty($ttv_tb) ? $ttv_tb : 0),
                        'ttv_sistole' => (!empty($ttv_sst) ? $ttv_sst : 0),
                        'ttv_diastole'=> (!empty($ttv_dst) ? $ttv_dst : 0),
                        'ttv_nadi'    => (!empty($ttv_ndi) ? $ttv_ndi : 0),
                        'ttv_laju'    => (!empty($ttv_lju) ? $ttv_lju : 0),
                        'ttv_saturasi'=> (!empty($ttv_sat) ? $ttv_sat : 0),
                        'ttv_skala'   => (!empty($ttv_skl) ? $ttv_skl : 0),
                        'ns_subj'     => (!empty($ns_subj) ? htmlentities($ns_subj) : '-'),
                        'ns_obj'      => (!empty($ns_obj) ? htmlentities($ns_obj) : '-'),
                        'ns_ass'      => (!empty($ns_ass) ? htmlentities($ns_ass) : '-'),
                        'ns_prog'     => (!empty($ns_prog) ? htmlentities($ns_prog) : '-'),
                        'status'      => '1',
                        'tipe'        => '0',
                    ];
                    
                    $this->db->trans_begin();
                    
                    $this->db->insert('tbl_trans_medcheck_rm', $data);
                    $last_id = $this->db->insert_id();
                    
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception("Entri rekam medis gagal disimpan!");
                    } else {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri rekam medis berhasil ditambahkan !");');
                    }
                    
                    redirect(base_url('medcheck/tambah.php?act=rm_ubah&id='.$id.'&status='.$status.(!empty($last_id) ? '&id_item='.general::enkrip($last_id) : '')));
                } catch (Exception $e) {
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                    }
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?act=rm_input&id='.$id.'&status='.$status));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    } 

    public function cart_medcheck_rm_upd() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_rm      = $this->input->post('id_rm');
            $id_dokter  = $this->input->post('id_dokter');
            $id_nurse   = $this->input->post('id_perawat');
            $id_pasien  = $this->input->post('id_pasien');
            $id_icd     = $this->input->post('icd');
            $id_icd10   = $this->input->post('icd10');
            $tgl        = $this->input->post('tgl');
            $anamnesa   = $this->input->post('anamnesa');
            $priksa     = $this->input->post('pemeriksaan');
            $diagnos    = $this->input->post('diagnosa');
            $terapi     = $this->input->post('terapi');
            $program    = $this->input->post('program');
            $ttv_st     = $this->input->post('ttv_st');
            $ttv_bb     = $this->input->post('ttv_bb');
            $ttv_tb     = $this->input->post('ttv_tb');
            $ttv_td     = $this->input->post('ttv_td');
            $ttv_sst    = $this->input->post('ttv_sistole');
            $ttv_dst    = $this->input->post('ttv_diastole');
            $ttv_ndi    = $this->input->post('ttv_nadi');
            $ttv_lju    = $this->input->post('ttv_laju');
            $ttv_sat    = $this->input->post('ttv_saturasi');
            $ttv_skl    = $this->input->post('ttv_skala');
            $ns_subj    = $this->input->post('ns_subj');
            $ns_obj     = $this->input->post('ns_obj');
            $ns_ass     = $this->input->post('ns_ass');
            $ns_prog    = $this->input->post('ns_prog');
            $act        = $this->input->post('act');
            $status     = $this->input->post('status');
            $tipe       = $this->input->post('tipe');
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('anamnesa', 'ID', 'required');
            $this->form_validation->set_rules('diagnosa', 'ID', 'required');
            $this->form_validation->set_rules('pemeriksaan', 'ID', 'required');
            $this->form_validation->set_rules('program', 'ID', 'required');
            $this->form_validation->set_rules('terapi', 'ID', 'required');
            
            if (akses::hakSA() == TRUE OR akses::hakOwner() == TRUE OR akses::hakPerawat() == TRUE) {
                $this->form_validation->set_rules('ttv_st', 'ID', 'required');
                $this->form_validation->set_rules('ttv_bb', 'ID', 'required');
                $this->form_validation->set_rules('ttv_tb', 'ID', 'required');
                $this->form_validation->set_rules('ttv_saturasi', 'ID', 'required');
                $this->form_validation->set_rules('ttv_sistole', 'ID', 'required');
                $this->form_validation->set_rules('ttv_diastole', 'ID', 'required');
                $this->form_validation->set_rules('ttv_nadi', 'ID', 'required');
                $this->form_validation->set_rules('ttv_laju', 'ID', 'required');
                $this->form_validation->set_rules('ttv_skala', 'ID', 'required');
            }

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'            => form_error('id'),
                    'anamnesa'      => form_error('anamnesa'),
                    'diagnosa'      => form_error('diagnosa'),
                    'pemeriksaan'   => form_error('pemeriksaan'),
                    'program'       => form_error('program'),
                    'terapi'        => form_error('terapi'),
                    'ttv_st'        => form_error('ttv_st'),
                    'ttv_bb'        => form_error('ttv_bb'),
                    'ttv_tb'        => form_error('ttv_tb'),
                    'ttv_sistole'   => form_error('ttv_sistole'),
                    'ttv_diastole'  => form_error('ttv_diastole'),
                    'ttv_saturasi'  => form_error('ttv_saturasi'),
                    'ttv_nadi'      => form_error('ttv_nadi'),
                    'ttv_laju'      => form_error('ttv_laju'),
                    'ttv_skala'     => form_error('ttv_skala'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Entri rekam medis gagal disimpan !, isian tidak boleh kosong.");');

                redirect(base_url('medcheck/tambah.php?act=rm_input&id='.$id.'&status='.$status.'&id_item='.$id_rm));
            } else {
                try {
                    $data = [
                        'tgl_simpan'   => $this->tanggalan->tgl_indo_sys($tgl).' '.date('H:i:s'),
                        'id_icd'       => (!empty($id_icd) ? $id_icd : 0),
                        'id_icd10'     => (!empty($id_icd10) ? $id_icd10 : 0),
                        'anamnesa'     => htmlentities($anamnesa),
                        'pemeriksaan'  => htmlentities($priksa),
                        'diagnosa'     => htmlentities($diagnos),
                        'terapi'       => htmlentities($terapi),
                        'program'      => htmlentities($program),
                        'ttv_st'       => (!empty($ttv_st) ? $ttv_st : 0),
                        'ttv_bb'       => (!empty($ttv_bb) ? $ttv_bb : 0),
                        'ttv_tb'       => (!empty($ttv_tb) ? $ttv_tb : 0),
                        'ttv_sistole'  => (!empty($ttv_sst) ? $ttv_sst : 0),
                        'ttv_diastole' => (!empty($ttv_dst) ? $ttv_dst : 0),
                        'ttv_nadi'     => (!empty($ttv_ndi) ? $ttv_ndi : 0),
                        'ttv_laju'     => (!empty($ttv_lju) ? $ttv_lju : 0),
                        'ttv_saturasi' => (!empty($ttv_sat) ? $ttv_sat : 0),
                        'ttv_skala'    => (!empty($ttv_skl) ? $ttv_skl : 0),
                        'ns_subj'      => (!empty($ns_subj) ? htmlentities($ns_subj) : '-'),
                        'ns_obj'       => (!empty($ns_obj) ? htmlentities($ns_obj) : '-'),
                        'ns_ass'       => (!empty($ns_ass) ? htmlentities($ns_ass) : '-'),
                        'ns_prog'      => (!empty($ns_prog) ? htmlentities($ns_prog) : '-'),
                    ];
                    
                    $this->db->trans_begin();
                    $this->db->where('id', general::dekrip($id_rm))->update('tbl_trans_medcheck_rm', $data);
                    $last_id = general::dekrip($id_rm);
                    
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception("Entri rekam medis gagal disimpan!");
                    } else {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri rekam medis berhasil diperbarui!");');
                    }

                    redirect(base_url('medcheck/tambah.php?act=rm_ubah&id='.$id.'&status='.$status.(!empty($last_id) ? '&id_item='.general::enkrip($last_id) : '')));
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?act=rm_input&id='.$id.'&status='.$status.'&id_item='.$id_rm));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    } 

    public function cart_medcheck_rm_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_item    = $this->input->get('id_item');
            $id_nota    = $this->input->get('no_nota');
            $status     = $this->input->get('status');
            
            try {
                if(!empty($id)){
                    $this->db->trans_begin();
                    
                    $this->db->where('id', general::dekrip($id_item))->delete('tbl_trans_medcheck_rm');
                    
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception("Gagal menghapus item rekam medis");
                    } else {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Item berhasil di hapus");');
                    }
                }
            } catch (Exception $e) {
                $this->db->trans_rollback();
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("'.$e->getMessage().'");');
                log_message('error', 'Medcheck RM delete error: ' . $e->getMessage());
            }
            
            redirect(base_url('medcheck/tambah.php?id='.$id.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function cart_medcheck_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_lab     = $this->input->get('id_lab');
            $id_rad     = $this->input->get('id_rad');
            $id_nota    = $this->input->get('no_nota');
            $status     = $this->input->get('status');
            $act        = $this->input->get('act');
            $rute       = $this->input->get('route');
            
            if(!empty($id)){
                try {
                    $this->db->trans_begin();
                    
                    // Delete the item from medcheck details
                    $this->db->where('id', general::dekrip($id))->delete('tbl_trans_medcheck_det');
                    
                    // Commit transaction if successful
                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Gagal menghapus item");
                    }
                    
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Item berhasil di hapus");');
                } catch (Exception $e) {
                    // Rollback transaction if error occurs
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Error: ' . $e->getMessage() . '");');
                    log_message('error', 'Medcheck item delete error: ' . $e->getMessage());
                }
            }
            
            // Build redirect URL
            $redirect_url = !empty($rute) ? $rute : 'medcheck/tambah.php?';
            $redirect_params = [
                'act' => $act,
                'id' => $id_nota,
                'id_rad' => $id_rad,
                'id_lab' => $id_lab,
                'status' => $status
            ];
            
            $query_string = '';
            foreach ($redirect_params as $key => $value) {
                if (!empty($value)) {
                    $query_string .= ($query_string ? '&' : '') . $key . '=' . $value;
                }
            }
            
            redirect(base_url($redirect_url . $query_string));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function cart_medcheck_retur_ranap_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_item    = $this->input->get('item_id');
            $status     = $this->input->get('status');
            $act        = $this->input->get('act');
            $rute       = $this->input->get('route');
            
            try {
                if(!empty($id)){
                    $sql_ret    = $this->db->where('id', general::dekrip($id_item))->get('tbl_trans_medcheck_retur')->row();
                    $sql_det    = $this->db->where('id', $sql_ret->id_medcheck_det)->get('tbl_trans_medcheck_det')->row();
                    $jml_ret    = $sql_ret->jml + $sql_det->jml;

                    $disk1      = $sql_det->harga - (($sql_det->disk1 / 100) * $sql_det->harga);
                    $disk2      = $disk1 - (($sql_det->disk2 / 100) * $disk1);
                    $disk3      = $disk2 - (($sql_det->disk3 / 100) * $disk2);
                    $diskon     = $sql_det->harga - $disk3;
                    $subtotal   = ($disk3 - $sql_det->potongan) * $jml_ret;
                                    
                    $data_det = [
                        'jml'       => (int)$jml_ret,
                        'subtotal'  => (float)$subtotal
                    ];
                    
                    # Transaksi start
                    $this->db->trans_begin();
                    
                    # Update tabel medcheck detail
                    $this->db->where('id', $sql_det->id)->update('tbl_trans_medcheck_det', $data_det);
                    
                    # Hapus tabel retur
                    $this->db->where('id', $sql_ret->id)->delete('tbl_trans_medcheck_retur');
                    
                    if ($this->db->trans_status() === FALSE) {
                        throw new Exception("Item gagal di hapus");
                    }
                    
                    $this->db->trans_commit();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Item berhasil di hapus");');
                }else{
                    throw new Exception("Item gagal di hapus");
                }
            } catch (Exception $e) {
                $this->db->trans_rollback();
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
            }
            
            redirect(base_url('medcheck/retur.php?id='.$id));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function cart_medcheck_status() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_lab     = $this->input->get('id_lab');
            $id_nota    = $this->input->get('no_nota');
            $status     = $this->input->get('status');
            $state      = $this->input->get('state');
            $act        = $this->input->get('act');
            
            try {
                if(!empty($id)){
                    $this->session->set_flashdata('medcheck', '<div class="alert alert-success">Item berhasil di hapus</div>');
                    crud::update('tbl_trans_medcheck_det', 'id', general::dekrip($id), array('status_baca'=>$state));
                } else {
                    throw new Exception("ID tidak boleh kosong");
                }
            } catch (Exception $e) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("' . $e->getMessage() . '");');
            }
            
            redirect(base_url('medcheck/tambah.php?'.(!empty($act) ? 'act='.$act.'&' : '').'id='.$id_nota.(!empty($id_lab) ? '&id_lab='.$id_lab : '').'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function cart_medcheck_lab_nilai() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id');
            $id_item    = $this->input->post('id_item');
            $id_det     = $this->input->post('id_det'); 
            $id_lab     = $this->input->post('id_lab');
            $item       = $this->input->post('item');
            $item_ket   = $this->input->post('item_ket');
            $status     = $this->input->post('status');
            $act        = $this->input->post('act');
            $route      = $this->input->post('route');
            
            $nilai      = $_POST['nilai_normal'];
            $satuan     = $_POST['nilai_satuan'];
            $hasil      = $_POST['nilai_hasil'];
            $status_hsl = $_POST['status_hsl'];
            $status_wrn = $_POST['status_wrn'];
            
            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');
            $this->form_validation->set_rules('id', 'ID', 'required');
            $this->form_validation->set_rules('id_item', 'Kode', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'id'   => form_error('id'),
                    'kode' => form_error('id_item'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);
                redirect(base_url($route));
            } else {
                try {
                    if (check_form_submitted('lab_hasil_form')) {
                        throw new Exception('Invalid form submission');
                        // Redirect to route if form already submitted
                        redirect(base_url($route));
                    }

                    $sql_medc = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                    $sql_item = $this->db->where('id', general::dekrip($id_item))->get('tbl_m_produk')->row();
                    $sql_medc_ck = $this->db->where('id_medcheck', general::dekrip($id))
                                        ->where('id_item', general::dekrip($id_item))
                                        ->get('tbl_trans_medcheck_det');
                    
                    // Start transaction
                    $this->db->trans_begin();

                    $data = [
                        'tgl_modif' => date('Y-m-d H:i:s'),
                        'tgl_baca'  => date('Y-m-d H:i:s'),
                    ];
                
                    $this->db->where('id', general::dekrip($id_det))->update('tbl_trans_medcheck_det', $data);                
                    
                    // Delete existing lab results before inserting new ones
                    $this->db->where('id_medcheck', general::dekrip($id))
                             ->where('id_lab', general::dekrip($id_lab))
                             ->where('id_medcheck_det', general::dekrip($id_det))
                             ->delete('tbl_trans_medcheck_lab_hsl');
                    
                    foreach ($nilai as $key => $hsl) {
                        $sql_nilai = $this->db->where('id', $key)->get('tbl_m_produk_ref_input')->row();

                        $data_lab = [
                            'id_medcheck'       => !empty($sql_medc->id) ? $sql_medc->id : null,
                            'id_medcheck_det'   => !empty($sql_medc_ck->row()->id) ? $sql_medc_ck->row()->id : null,
                            'id_lab'            => !empty($id_lab) ? general::dekrip($id_lab) : null,
                            'id_user'           => !empty($this->ion_auth->user()->row()->id) ? $this->ion_auth->user()->row()->id : null,
                            'id_item'           => !empty($id_item) ? general::dekrip($id_item) : null,
                            'id_item_ref_ip'    => !empty($sql_nilai->id) ? $sql_nilai->id : null,
                            'tgl_simpan'        => date('Y-m-d H:i:s'),
                            'item_name'         => !empty($sql_nilai->item_name) ? $sql_nilai->item_name : null,
                            'item_value'        => !empty($nilai[$key]) ? $nilai[$key] : null,
                            'item_satuan'       => !empty($satuan[$key]) ? $satuan[$key] : null,
                            'item_hasil'        => !empty($hasil[$key]) ? $hasil[$key] : null,
                            'status'            => !empty($sql_nilai->status) ? $sql_nilai->status : null,
                            'status_hsl_lab'    => !empty($status_hsl[$key]) ? $status_hsl[$key] : '0',
                            'status_hsl_wrn'    => !empty($status_wrn[$key]) ? $status_wrn[$key] : '0',
                        ];

                        $this->db->insert('tbl_trans_medcheck_lab_hsl', $data_lab);
                    }

                    // Check transaction status and commit/rollback accordingly
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        throw new Exception('Gagal menyimpan data laboratorium');
                    } else {
                        $this->db->trans_commit();
                    }
                
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Entri data laborat berhasil !");');
                    redirect(base_url('medcheck/tambah.php?act=lab_input&id='.$id.'&id_lab='.$id_lab.'&status='.$status));
                } catch (Exception $e) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Error saving lab data: '.$e->getMessage().'");');
                    redirect(base_url('medcheck/tambah.php?act='.$act.'&id='.$id.'&id_lab='.$id_lab.'&status='.$status));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function cart_medcheck_lab_ekg_file_hapus() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_item    = $this->input->get('file_id');
            $status     = $this->input->get('status');
            $act        = $this->input->get('act');
            
            if(!empty($id_item)){
                $sql_medc    = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $sql_medc_ekg= $this->db->where('id', general::dekrip($id_item))->get('tbl_trans_medcheck_lab_ekg_file')->row();
                $sql_pasien  = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row();
                $no_rm       = strtolower($sql_pasien->kode_dpn).$sql_pasien->kode;
                $folder      = realpath('./file/pasien/'.$no_rm);
               
                $path   = $folder.'/';
                $berkas = $path.$sql_medc_ekg->file_name;
                
                if(file_exists($berkas)){
                    unlink($berkas);
                }
                
                $this->db->where('id', general::dekrip($id_item))->delete('tbl_trans_medcheck_lab_ekg_file');
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("File EKG berhasil dihapus!");');
            }
            
            redirect(base_url('medcheck/tambah.php?act='.$this->input->get('act').'&id='.$this->input->get('id').'&id_lab='.$this->input->get('id_lab').'&status='.$this->input->get('status')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    } 
    
    public function cart_beli_simpan() {
        if (akses::aksesLogin() == TRUE) {
            $no_nota  = $this->input->post('no_nota');
            $id_brg   = $this->input->post('id_item');
            $satuan   = $this->input->post('satuan');
            $kode     = $this->input->post('kode');
            $qty      = $this->input->post('jml');
            $diskon1  = general::format_angka_db($this->input->post('disk1'));
            $diskon2  = general::format_angka_db($this->input->post('disk2'));
            $diskon3  = general::format_angka_db($this->input->post('disk3'));
            $harga    = general::format_angka_db($this->input->post('harga'));
            $potongan = general::format_angka_db($this->input->post('potongan'));

            $this->form_validation->set_error_delimiters('<div class="alert alert-danger">', '</div>');

            $this->form_validation->set_rules('kode', 'Kode', 'required');

            if ($this->form_validation->run() == FALSE) {
                $msg_error = [
                    'kode' => form_error('kode'),
                ];

                $this->session->set_flashdata('form_error', $msg_error);

                redirect(base_url('transaksi/trans_beli.php?id='.$no_nota));
            } else {
                // Start Transaction
                $this->db->trans_begin();
                
                try {
                $sql_brg     = $this->db->where('id', general::dekrip($id_brg))
                                        ->get('tbl_m_produk')->row();
                $sql_satuan  = $this->db->where('id', $sql_brg->id_satuan)->get('tbl_m_satuan')->row();
                $trans_beli  = $this->session->userdata('trans_beli');
                $pengaturan  = $this->db->get('tbl_pengaturan')->row();

                $jml_pcs     = (!empty($sql_satuan->jml) ? $sql_satuan->jml : '1') * $qty;
                $harga_pcs   = ($harga * $qty) / $jml_pcs;
                $harga_sat   = $harga_pcs * $sql_satuan->jml;

                $disk1       = $harga_pcs - (($diskon1 / 100) * $harga_pcs);
                $disk2       = $disk1 - (($diskon2 / 100) * $disk1);
                $disk3       = $disk2 - (($diskon3 / 100) * $disk2);

                $harga_ppn   = ($trans_beli['status_ppn'] == '1' ? ($pengaturan->jml_ppn / 100) * $disk3 : 0);
                $harga_tot   = $disk3 + $harga_ppn;
                $subtotal    = ($disk3 * $jml_pcs) - $potongan;
                $jml_qty     = $qty;

                // Cek di keranjang
                foreach ($this->cart->contents() as $cart){
                    // Cek ada datanya kagak?
                    if($sql_brg->kode == $cart['options']['kode']){
                            $jml_subtotal = ($cart['qty'] + $qty) * $sql_satuan->jml;
                            $jml_qty = ($cart['qty'] + $qty);

                            $this->cart->update(['rowid'=>$cart['rowid'], 'qty'=>0]);
                    }
                }

                    $cart = [
                    'id'      => rand(1,1024).$sql_brg->id,
                    'qty'     => $jml_qty,
                        'price'   => $harga,
                    'name'    => rtrim($sql_brg->produk),
                        'options' => [
                            'no_nota'       => general::dekrip($no_nota),
                            'id_barang'     => $sql_brg->id,
                            'id_satuan'     => $sql_brg->id_satuan,
                            'satuan'        => $sql_satuan->satuanTerkecil,
                            'jml'           => $qty,
                            'jml_satuan'    => (!empty($sql_satuan->jml) ? $sql_satuan->jml : '1'),
                            'kode'          => $sql_brg->kode,
                            'harga'         => $harga_tot,
                            'ppn'           => $harga_ppn,
                            'potongan'      => $potongan,
                            'disk1'         => (float)$diskon1,
                            'disk2'         => (float)$diskon2,
                            'disk3'         => (float)$diskon3,
                            'subtotal'      => (float)$subtotal,
                        ]
                    ];

                $this->cart->insert($cart);
                    
                    if ($this->db->trans_status() === FALSE) {
                        $this->db->trans_rollback();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.error("Gagal menyimpan data ke keranjang!");');
                    } else {
                        $this->db->trans_commit();
                        $this->session->set_flashdata('medcheck_toast', 'toastr.success("Item berhasil ditambahkan ke keranjang!");');
                    }
                    
                    redirect(base_url('transaksi/beli/trans_beli.php?id='.$no_nota));
                    
                } catch (Exception $e) {
                    $this->db->trans_rollback();
                    $this->session->set_flashdata('medcheck_toast', 'toastr.error("Error: '.$e->getMessage().'");');
                redirect(base_url('transaksi/beli/trans_beli.php?id='.$no_nota));
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    

    public function hapus_medcheck_surat() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_nota    = $this->input->get('no_nota');
            $status     = $this->input->get('status');
            
            if(!empty($id)){
                # Simpan data surat kedalam tabel
                $this->db->where('id', general::dekrip($id))->delete('tbl_trans_medcheck_surat');
                
                if ($this->db->affected_rows() > 0) {
                    $this->session->set_flashdata('medcheck_toast', 'toastr.success("Surat berhasil dihapus !");');
                }
            }
            
            redirect(base_url('medcheck/tambah.php?id='.$id_nota.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function hapus_medcheck_surat_inform() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->get('id');
            $id_nota    = $this->input->get('no_nota');
            $status     = $this->input->get('status');
            
            if(!empty($id)){
                $sql_medc_inf   = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck_surat_inform')->row();
                $sql_medc_kmr   = $this->db->where('id_inform', $sql_medc_inf->id)->get('tbl_trans_medcheck_kamar')->row();
                $sql_kmr        = $this->db->where('id', $sql_medc_kmr->id_kamar)->get('tbl_m_kamar')->row();
                $jml            = $sql_kmr->jml - 1;
   
                $this->db->where('id', $sql_kmr->id)->update('tbl_m_kamar', array('jml' => ($jml < 0 ? 0 : $jml)));
                $this->db->where('id_inform', $sql_medc_inf->id)->delete('tbl_trans_medcheck_kamar');
                $this->db->where('id', $sql_medc_inf->id)->delete('tbl_trans_medcheck_surat_inform');
                
                $this->session->set_flashdata('medcheck_toast', 'toastr.success("Data kamar berhasil dihapus !");');
            }
            
            redirect(base_url('medcheck/tambah.php?id='.$id_nota.'&status='.$status));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function cetak_medcheck_surat() {
        if (akses::aksesLogin() == TRUE) {
            $setting              = $this->db->get('tbl_pengaturan')->row();
            $id                   = $this->input->get('id');
            $id_medcheck          = $this->input->get('id_produk');
            $status               = $this->input->get('status');
            $userid               = $this->ion_auth->user()->row()->id;
            
            $data = [
                'sess_jual'    => $this->session->userdata('trans_medcheck'),
                'kategori'     => $this->db->get('tbl_m_kategori')->result(),
                'poli'         => $this->db->get('tbl_m_poli')->result(),
                'sql_doc'      => $this->db->where('status', '2')->get('tbl_m_sales')->result(),
                'sidebar'      => 'admin-lte-3/includes/medcheck/sidebar_med'
            ];

            if(!empty($id)){
                $data['sql_medc']       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck')->row();
                $data['sql_medc_srt']   = $this->db->where('id', general::dekrip($id))->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();            
                $data['sql_pasien']     = $this->db->where('id', $data['sql_medc']->id_pasien)->get('tbl_m_pasien')->row();
                $data['sql_dokter']     = $this->db->where('id', $data['sql_medc']->id_dokter)->get('tbl_m_karyawan')->row();
                $data['sql_poli']       = $this->db->where('id', $data['sql_medc']->id_poli)->get('tbl_m_poli')->row();                
            }

            $this->load->view('admin-lte-3/1_atas', $data);
            $this->load->view('admin-lte-3/2_header', $data);
            $this->load->view('admin-lte-3/3_navbar', $data);
            $this->load->view('admin-lte-3/includes/medcheck/med_detail', $data);
            $this->load->view('admin-lte-3/5_footer', $data);
            $this->load->view('admin-lte-3/6_bawah', $data);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    

    
    public function pdf_gc() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id                 = $this->input->get('dft');

            $sql_dft_gc         = $this->db->where('id', general::dekrip($id))->get('tbl_pendaftaran_gc')->row();
            $sql_dft            = $this->db->where('id', $sql_dft_gc->id_pendaftaran)->get('tbl_pendaftaran')->row();
            
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            
            $this->load->library('MedPDF');
            $pdf = new MedPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1,0.35,1);
            $pdf->header = 0;
            $pdf->addPage('','',false);
            
            // Gambar Watermark Tengah
            $pdf->Image($gambar2,5,4,17,19);
                        
            $judul = "SURAT PERSETUJUAN UMUM";

            # Blok Judul
            $pdf->SetFont('Arial', 'B', '14');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln(); 

            // Blok Paragraf Pertama
            $fill = FALSE;
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(19, .5, 'Yang bertanda tangan dibawah ini,', '', 0, 'L', $fill);
            $pdf->Ln(1);

            // Blok PENANGGUNG JAWAB
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(4.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(12, .5, strtoupper($sql_dft_gc->nama), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(4.5, .5, 'Hubungan dengan pasien', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(12, .5, general::tipe_hubungan($sql_dft_gc->status_hub), '0', 0, 'L', $fill);
            $pdf->Ln(1);

            # Blok Paragraf kedua
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(19, .5, 'Dengan ini menyatakan,', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(10, .5, 'Telah melihat, memahami dan menyetujui tarif yang berlaku di ', '', 0, 'L', $fill);
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(9, .5, strtoupper($setting->judul), '', 0, 'L', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Ln();
            $pdf->Cell(19, .5, 'beserta tindakan dan obat-obatan yang dimungkinkan. Sanggup menjamin kelancaran pembayaran semua biaya', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(19, .5, 'pelayanan bagi pasien :', '', 0, 'L', $fill);
            $pdf->Ln(1);

            // Blok ID PASIEN
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(4.5, .5, 'NIK', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(12, .5, $sql_dft->nik, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(4.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(12, .5, $sql_dft->nama_pgl, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(4.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(12, .5, $this->tanggalan->tgl_indo2($sql_dft->tgl_lahir) . ' (' . $this->tanggalan->usia_lkp($sql_dft->tgl_lahir) . ')' . (!empty($sql_dft->jns_klm) ? ' / ' . general::jns_klm($sql_dft->jns_klm) : ''), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(4.5, .5, 'Alamat', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->MultiCell(12.5, .5, $sql_dft->alamat, '', 'L', $fill);
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(4.5, .5, 'Tanggal Masuk', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(12, .5, $this->tanggalan->tgl_indo2($sql_dft->tgl_masuk), '0', 0, 'L', $fill);
            $pdf->Ln(1);

            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(19, .5, 'Demikian surat pernyataan ini dibuat dalam keadaan sadar tanpa ada tekanan dari pihak manapun.', '', 0, 'L', $fill);
            $pdf->Ln();

            # QR GENERATOR VALIDASI
            $qr_validasi = FCPATH . '/file/gc/' . $sql_dft->id . '/qr-petugas-' . strtolower($sql_dft->id) . '.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Diwakili oleh ';
            $params['data'] .= strtoupper($this->ion_auth->user($sql_dft_gc->id_user)->row()->first_name) . ',';
            $params['data'] .= 'yang merupakan petugas yang bertugas pada tanggal ' . date('d/m/Y H:i') . '.';
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;

            # QR GENERATOR TANDA TANGAN
            $qr_ttd             = FCPATH.$sql_dft_gc->file_name;
            $gambar5            = $qr_ttd;  

            # Gambar VALIDASI
            $pdf->SetY(-10.5);
            $pdf->Image($gambar4, 2, $pdf->GetY(), 2, 2);
            $pdf->Image($gambar5, 12.5, $pdf->GetY(), 2, 2);

            $pdf->SetY(-11.5);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, ' . $this->tanggalan->tgl_indo3($sql_dft->tgl_masuk), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(4.5, .5, 'Petugas', '0', 0, 'C', $fill);
            $pdf->Cell(7.5, .5, '', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(7.5, .5, (!empty($ket) ? $ket : 'Yang Membuat Pernyataan'), '0', 0, 'L', $fill);
            $pdf->Ln(4);

            $pdf->SetY(-8.5);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, $this->ion_auth->user($sql_dft_gc->id_user)->row()->first_name, '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, strtoupper($sql_dft_gc->nama), '', 0, 'L', $fill);
            $pdf->Ln();

            $pdf->SetFillColor(235, 232, 228);
            $pdf->SetTextColor(0);
            $pdf->SetFont('Arial', '', '10');

            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');
            ob_end_clean();
            $pdf->Output($sql_dft->nama_pgl. '.pdf', $type);
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function pdf_medcheck_surat() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id                 = $this->input->get('id');
            $id_medcheck        = $this->input->get('no_nota');

            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_srt       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck_surat')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc_srt->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            
            $this->load->library('MedPDF');
            $pdf = new MedPDF('P', 'cm', ['21.5', '33']);
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1, 0.35, 1);
            $pdf->header = 0;
            $pdf->addPage('', '', false);
            
            // Gambar Watermark Tengah
            if(file_exists($gambar2)) {
                $pdf->Image($gambar2, 5, 4, 15, 19);
            }
                        
            // Blok Isi Surat
            switch ($sql_medc_srt->tipe) {                
                case '1':
                    $judul = "SURAT KETERANGAN ".strtoupper(general::tipe_surat($sql_medc_srt->tipe));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = FALSE;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Yang bertanda tangan di bawah ini,', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'dokter di '.$setting->judul.', menerangkan bahwa:', '', 0, 'L', $fill);
                    $pdf->Ln(1);

                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(13, .5, (!empty($sql_pasien->alamat) ? $sql_pasien->alamat : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
                    $pdf->Ln(1);

                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Setelah dilakukan pemeriksaan, maka yang bersangkutan dinyatakan', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, strtoupper(general::tipe_sehat($sql_medc_srt->hasil)), '', 0, 'C', $fill);
                    $pdf->Ln(1);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Keterangan :', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(4, .5, 'Tinggi Badan', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(5, .5, (float)$sql_medc_srt->tb.' cm', '', 0, 'L', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(4, .5, 'Tekanan Darah', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(5, .5, $sql_medc_srt->td.' mmHg', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(4, .5, 'Buta Warna', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(5, .5, $sql_medc_srt->bw, '', 0, 'L', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(4, .5, 'Berat Badan', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(5, .5, (float)$sql_medc_srt->bb.' kg', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(4, .5, 'Ket Buta Warna', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14.5, .5, $sql_medc_srt->bw_ket, '', 0, 'L', $fill);
                    $pdf->Ln(1);
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian surat ini dibuat agar dapat digunakan sebagaimana mestinya.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    break;
                
                case '2':
                    $judul = "SURAT KETERANGAN ".strtoupper(general::tipe_surat($sql_medc_srt->tipe));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = FALSE;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Yang bertanda tangan di bawah ini, dokter di '.$setting->judul.',', '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'menerangkan bahwa:', '0', 0, 'L', $fill);
                    $pdf->Ln(1);

                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(13, .5, (!empty($sql_pasien->alamat) ? $sql_pasien->alamat : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
                    $pdf->Ln(1);

                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Perlu beristirahat karena sakit sehingga tidak dapat melaksanakan kewajibannya,', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(2, .5, 'selama : ', '', 0, 'L', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1.5, .5, $sql_medc_srt->jml_hari.' hari', '', 0, 'L', $fill);                  
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(5, .5, 'terhitung mulai tanggal', '', 0, 'L', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2.5, .5, $this->tanggalan->tgl_indo2($sql_medc_srt->tgl_masuk), '', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(1.5, .5, 's/d', '', 0, 'C', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2.5, .5, ($sql_medc_srt->status_sembuh == '1' ? 'Sembuh' : ($sql_medc_srt->tgl_keluar != '0000-00-00' ? $this->tanggalan->tgl_indo2($sql_medc_srt->tgl_keluar) : '-')).'.', '', 0, 'C', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Harap yang berkepentingan maklum.', '', 0, 'L', $fill);
                    $pdf->Ln(1);
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian surat ini dibuat agar dapat digunakan sebagaimana mestinya.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    break;
                
                case '3':
                    $judul = "SURAT KETERANGAN ".strtoupper(general::tipe_surat($sql_medc_srt->tipe));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = FALSE;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Yang bertanda tangan di bawah ini, dokter di '.$setting->judul.',', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'menerangkan bahwa:', '', 0, 'L', $fill);
                    $pdf->Ln(1);

                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(13, .5, (!empty($sql_pasien->alamat) ? $sql_pasien->alamat : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
                    $pdf->Ln(1);

                    $pdf->SetFont('Arial', '', '10');
                    $text1 = 'Bahwa pasien sedang dalam perawatan di kamar rawat inap kami, sehingga tidak dapat melaksanakan kewajibannya mulai tanggal '.$this->tanggalan->tgl_indo2($sql_medc_srt->tgl_masuk).' s/d '.($sql_medc_srt->status_sembuh == '1' ? 'Sembuh' : $this->tanggalan->tgl_indo2($sql_medc_srt->tgl_keluar)).'. Harap yang berkepentingan maklum.';
                    $pdf->MultiCell(19, .5, $text1, '', 'J', $fill);
                    $pdf->Ln(1);
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian surat ini dibuat agar dapat digunakan sebagaimana mestinya.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    break;
                
                case '4':
                    $judul = "SURAT KETERANGAN ".strtoupper(general::tipe_surat($sql_medc_srt->tipe));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = FALSE;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Yang bertanda tangan di bawah ini, dokter di '.$setting->judul.',', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'menerangkan bahwa:', '', 0, 'L', $fill);
                    $pdf->Ln(1);

                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(13, .5, (!empty($sql_pasien->alamat) ? $sql_pasien->alamat : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
                    $pdf->Ln(1);

                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Bahwa yang bersangkutan telah menjalani pemeriksaan di '.$setting->judul.'.', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'Sehubungan masih dalam perawatan atas sakitnya, ', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(4.25, .5, 'mohon kiranya untuk', '0', 0, 'L', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, 'Kontrol', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(2.5, .5, 'pada tanggal ', '', 0, 'L', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(5, .5, ' '.$this->tanggalan->tgl_indo2($sql_medc_srt->tgl_kontrol).'.', '', 0, 'L', $fill);
                    $pdf->Ln(1);
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian surat ini dibuat agar dapat digunakan sebagaimana mestinya.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    break;
                
                case '5' :
                    $judul = "SURAT KETERANGAN ".strtoupper(general::tipe_surat($sql_medc_srt->tipe));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = false;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Yang bertanda tangan di bawah ini,', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(9, .5, 'menerangkan bahwa telah lahir seorang bayi', '', 0, 'L', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2.5, .5, general::jns_klm($sql_medc_srt->jns_klm), '', 0, 'C', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1.5, .5, ':', '', 0, 'L', $fill);
                    $pdf->Ln(1);

                    // BLOK WAKTU LAHIR
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $this->tanggalan->tgl_indo2($sql_medc_srt->lahir_tgl), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Waktu Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $this->tanggalan->wkt_indo($sql_medc_srt->lahir_tgl).' WIB', '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Anak', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, strtoupper($sql_medc_srt->lahir_nm), '0', 0, 'L', $fill);
                    $pdf->Ln(1);
                    
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'ANAK DARI', '0', 0, 'C', $fill);
                    $pdf->Ln(1);
                    
                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Ayah', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_medc_srt->lahir_nm_ayah, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Ibu', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_medc_srt->lahir_nm_ibu, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(14, .5, $sql_pasien->alamat, '0', 'L');
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Berat Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, (float)$sql_medc_srt->bb.' Kg', '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Panjang Badan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, (float)$sql_medc_srt->tb.' cm', '0', 0, 'L', $fill);
                    $pdf->Ln(1);
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian Surat Keterangan Kelahiran ini dibuat dengan sesungguhnya,', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'untuk dipergunakan sebagaimana mestinya.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    break;
                
                case '6' :
                    $judul = "SURAT KETERANGAN ".strtoupper(general::tipe_surat($sql_medc_srt->tipe));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = false;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Yang bertanda tangan di bawah ini, menerangkan bahwa :', '', 0, 'L', $fill);
                    $pdf->Ln(1);
                    
                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_pasien->alamat, '0', 0, 'L', $fill);
                    $pdf->Ln(1);
                    
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, 'TELAH MENINGGAL DUNIA', '0', 0, 'C', $fill);
                    $pdf->Ln(1);
                    
                    // BLOK WAKTU KEMATIAN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Hari / Tanggal', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $this->tanggalan->tgl_indo6($sql_medc_srt->mati_tgl), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Waktu', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $this->tanggalan->wkt_indo($sql_medc_srt->mati_tgl).' WIB', '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tempat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_medc_srt->mati_tmp, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Penyebab', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_medc_srt->mati_penyebab, '0', 0, 'L', $fill);
                    $pdf->Ln(1);
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian Surat Keterangan Kematian ini dibuat dengan sesungguhnya,', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'untuk dipergunakan sebagaimana mestinya.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    break;
                
                case '7' :
                    $judul = "SURAT KETERANGAN ".strtoupper(general::tipe_surat($sql_medc_srt->tipe));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = false;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Yang bertanda tangan di bawah ini, menerangkan bahwa :', '', 0, 'L', $fill);
                    $pdf->Ln(1);
                    
                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_pasien->alamat, '0', 0, 'L', $fill);
                    $pdf->Ln(1);
                    
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, 'TELAH MENINGGAL DUNIA', '0', 0, 'C', $fill);
                    $pdf->Ln(1);
                    
                    // BLOK WAKTU KEMATIAN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Hari / Tanggal', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $this->tanggalan->tgl_indo6($sql_medc_srt->mati_tgl), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Waktu', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $this->tanggalan->wkt_indo($sql_medc_srt->mati_tgl).' WIB', '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tempat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_medc_srt->mati_tmp, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Penyebab', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_medc_srt->mati_penyebab, '0', 0, 'L', $fill);
                    $pdf->Ln(1);
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian Surat Keterangan Kematian ini dibuat dengan sesungguhnya,', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'untuk dipergunakan sebagaimana mestinya.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    break;
                
                case '8' :
                    $judul = "SURAT ".strtoupper(general::tipe_surat($sql_medc_srt->tipe));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();
                    
                    // BLOK TUJUAN RUJUKAN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(3.5, .5, 'Kepada Yth', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_medc_srt->ruj_dokter, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(3.5, .5, 'di', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_medc_srt->ruj_faskes, '0', 0, 'L', $fill);
                    $pdf->Ln(1);

                    // Blok Paragraf Pertama
                    $fill = false;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Mohon penatalaksanaan lebih lanjut terhadap pasien :', '', 0, 'L', $fill);
                    $pdf->Ln(1);
                    
                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(14, .5, $sql_pasien->alamat, '0', 0, 'L', $fill);
                    $pdf->Ln(1);
                    
                    // BLOK KETERANGAN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(3.5, .5, 'RIWAYAT KELUHAN', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(19, .5, $sql_medc_srt->ruj_keluhan, '', 'J', false);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(3.5, .5, 'DIAGNOSIS SEMENTARA', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(19, .5, $sql_medc_srt->ruj_diagnosa, '', 'J', false);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(3.5, .5, 'TERAPI YANG TELAH DIBERIKAN', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(19, .5, $sql_medc_srt->ruj_terapi, '', 'J', false);
                    $pdf->Ln(1);
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian surat rujukan ini, atas kerjasama dan perhatian Teman Sejawat', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'kami ucapkan terimakasih.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    
                    $ket = 'Salam Sejawat';
                    break;
                                
                case '9' :
                    $judul = "SURAT KETERANGAN";

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = FALSE;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(19, .5, 'Yang bertanda tangan di bawah ini '.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').', dokter pada '.$setting->judul.' menerangkan bahwa :', '0', 'L');
                    $pdf->Ln(1);

                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'No. RM', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' - '.$this->tanggalan->usia($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(13, .5, $sql_pasien->alamat, '0', 'L');
                    $pdf->Ln(1);

                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(19, .5, 'Berdasarkan pemeriksaan yang dilakukan pada tanggal '.$this->tanggalan->tgl_indo3($sql_medc_srt->vks_tgl_periksa).' menerangkan bahwa pasien diatas telah diberikan vaksin '.$sql_medc_srt->keterangan.' di '.$setting->judul.' dan dinyatakan sehat.', '0', 'J');
                    $pdf->Ln();
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian surat keterangan ini dibuat agar dapat digunakan sebagaimana mestinya.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    break;
                                
                case '10' :
                    $judul = "SURAT KETERANGAN KEHAMILAN";
                    
                    $tgl_awal       = date_create($this->tanggalan->tgl_indo_sys($sql_medc_srt->hml_tgl_awal));
                    $tgl_akhir      = date_create($this->tanggalan->tgl_indo_sys($sql_medc_srt->hml_tgl_akhir));
                    $diff           = date_diff($tgl_awal, $tgl_akhir);
                    $hari           = $diff->format("%d%");
                    $jml_hari       = ($tgl_awal == $tgl_akhir ? '1' : ($hari > 1 ? $hari + 1 : '2'));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = FALSE;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(19, .5, 'Yang bertanda tangan di bawah ini '.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').', dokter pada '.$setting->judul.' menerangkan bahwa :', '0', 'L');
                    $pdf->Ln(1);

                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'No. RM', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' - '.$this->tanggalan->usia($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(13, .5, $sql_pasien->alamat, '0', 'L');
                    $pdf->Ln(1);

                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Pemeriksaan dalam keadaan', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(19, .5, $sql_medc_srt->hml_periksa, '0', 'J');
                    $pdf->Ln();
                    
                    if($sql_medc_srt->hml_tipe_ijin == '1'){
                        $pdf->Cell(1, .5, '- ', '', 0, 'C', $fill);
                        $pdf->Cell(10, .5, 'Perlu cuti hamil / bersalin selama 3 (tiga) bulan terhitung dari ', '', 0, 'L', $fill);
                        $pdf->Cell(2, .5, ($sql_medc_srt->hml_tipe_ijin == '1' ? $this->tanggalan->tgl_indo2($sql_medc_srt->hml_tgl_awal) : ''), '', 0, 'L', $fill);
                        $pdf->Cell(1, .5, 's/d', '', 0, 'C', $fill);
                        $pdf->Cell(4, .5, ($sql_medc_srt->hml_tipe_ijin == '1' ? $this->tanggalan->tgl_indo2($sql_medc_srt->hml_tgl_akhir) : ''), '', 0, 'L', $fill);
                        $pdf->Ln();
                    }elseif($sql_medc_srt->hml_tipe_ijin == '2'){
                        $pdf->Cell(1, .5, '-', '', 0, 'C', $fill);
                        $pdf->Cell(8, .5, 'Ijin tidak menjalankan tugas karena sakit, selama', '', 0, 'L', $fill);
                        $pdf->Cell(.5, .5, (float)$jml_hari, '', 0, 'C', $fill);
                        $pdf->Cell(3.5, .5, 'Hari, terhitung dari', '', 0, 'L', $fill);
                        $pdf->Cell(2, .5, ($sql_medc_srt->hml_tipe_ijin == '2' ? $this->tanggalan->tgl_indo2($sql_medc_srt->hml_tgl_awal) : ''), '', 0, 'L', $fill);
                        $pdf->Cell(1, .5, 's/d', '', 0, 'C', $fill);
                        $pdf->Cell(2, .5, ($sql_medc_srt->hml_tipe_ijin == '2' ? $this->tanggalan->tgl_indo2($sql_medc_srt->hml_tgl_akhir) : ''), '', 0, 'L', $fill);
                        $pdf->Ln();
                    }

                    if($sql_medc_srt->hml_tipe_terbang == '1'){
                        $pdf->Cell(1, .5, '', '', 0, 'C', $fill);
                        $pdf->Cell(18, .5, 'Cukup sehat untuk perjalanan / penerbangan dalam negeri / luar negeri', '', 0, 'L', $fill);
                        $pdf->Ln();
                    }elseif($sql_medc_srt->hml_tipe_terbang == '2'){
                        $pdf->Cell(1, .5, '', '', 0, 'C', $fill);
                        $pdf->Cell(18, .5, 'Tidak diperkenankan untuk perjalanan / penerbangan dalam negeri / luar negeri', '', 0, 'L', $fill);
                        $pdf->Ln();                        
                    }

                    $pdf->Ln(1);
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian surat keterangan ini dibuat agar dapat digunakan sebagaimana mestinya.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    break;
                                
                case '13' :
                    $judul = "SURAT ".strtoupper(general::tipe_surat($sql_medc_srt->tipe));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = FALSE;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Yang bertanda tangan di bawah ini, menerangkan bahwa :', '', 0, 'L', $fill);
                    $pdf->Ln(1);

                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' - '.$this->tanggalan->usia($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(13, .5, $sql_pasien->alamat, '0', 'L');
                    $pdf->Ln(1);

                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(19, .5, 'Berdasarkan hasil pemeriksaan sampel urine untuk pemeriksaan Test Narkoba di Laboratorium '.$setting->judul.', sampel urine pasien dinyatakan dengan hasil :', '0', 'J');
                    $pdf->SetFont('Arial', 'Bi', '10');
                    $pdf->Cell(19, .5, ($sql_medc_srt->nza_status == '1' ? 'POSITIF' : 'NEGATIF'), '', 0, 'C', $fill);
                    $pdf->Ln();
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian surat keterangan ini dibuat agar dapat digunakan sebagaimana mestinya.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    break;
                                
                case '14' :
                    $judul = "SURAT LAYAK TERBANG";
                    
                    $tgl_awal       = date_create($this->tanggalan->tgl_indo_sys($sql_medc_srt->trb_tgl_awal));
                    $tgl_akhir      = date_create($this->tanggalan->tgl_indo_sys($sql_medc_srt->trb_tgl_akhir));
                    $diff           = date_diff($tgl_awal, $tgl_akhir);
                    $hari           = $diff->format("%d%");
                    $jml_hari       = ($tgl_awal == $tgl_akhir ? '1' : ($hari > 1 ? $hari + 1 : '2'));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = FALSE;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(19, .5, 'Yang bertanda tangan di bawah ini '.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').', dokter pada '.$setting->judul.' menerangkan bahwa :', '0', 'L');
                    $pdf->Ln(1);

                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'No. RM', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' - '.$this->tanggalan->usia($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(13, .5, $sql_pasien->alamat, '0', 'L');
                    $pdf->Ln(1);

                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Pemeriksaan dalam keadaan', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(19, .5, $sql_medc_srt->trb_periksa, '0', 'J');
                    $pdf->Ln();

                    if($sql_medc_srt->trb_tipe_terbang == '1'){
                        $pdf->Cell(1, .5, '', '', 0, 'C', $fill);
                        $pdf->Cell(18, .5, 'Cukup sehat untuk perjalanan / penerbangan dalam negeri / luar negeri', '', 0, 'L', $fill);
                        $pdf->Ln();
                    }elseif($sql_medc_srt->trb_tipe_terbang == '2'){
                        $pdf->Cell(1, .5, '', '', 0, 'C', $fill);
                        $pdf->Cell(18, .5, 'Tidak diperkenankan untuk perjalanan / penerbangan dalam negeri / luar negeri', '', 0, 'L', $fill);
                        $pdf->Ln();                        
                    }

                    $pdf->Ln(1);
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian surat keterangan ini dibuat agar dapat digunakan sebagaimana mestinya.', '', 0, 'L', $fill);
                    $pdf->Ln(2);
                    break;
                                
                case '15' :
                    $judul = "SURAT KETERANGAN DOKTER";
                    
                    $tgl_awal       = date_create($this->tanggalan->tgl_indo_sys($sql_medc_srt->trb_tgl_awal));
                    $tgl_akhir      = date_create($this->tanggalan->tgl_indo_sys($sql_medc_srt->trb_tgl_akhir));
                    $diff           = date_diff($tgl_awal, $tgl_akhir);
                    $hari           = $diff->format("%d%");
                    $jml_hari       = ($tgl_awal == $tgl_akhir ? '1' : ($hari > 1 ? $hari + 1 : '2'));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = FALSE;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(19, .5, 'Yang bertanda tangan di bawah ini '.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').', dokter pada '.$setting->judul.' menerangkan bahwa :', '0', 'L');
                    $pdf->Ln(1);

                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'No. RM', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' - '.$this->tanggalan->usia($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Jenis Kelamin', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, general::jns_klm($sql_pasien->jns_klm), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Pekerjaan', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(13, .5, $sql_pekerjaan->jenis, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(3.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
//                    $pdf->Cell(13, .5, $sql_pasien->alamat, '0', 0, 'L', $fill);
                    $pdf->MultiCell(13, .5, $sql_pasien->alamat, '0', 'L');
                    $pdf->Ln(1);

                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'HASIL PEMERIKSAAN THT', 'B', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(11, .5, 'Telinga', '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, 'Kanan :', '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, 'Kiri :', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(5, .5, '- Liang Telinga', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->Cell(5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, $sql_medc_srt->tht_lt_kiri, '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, $sql_medc_srt->tht_lt_kanan, '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(5, .5, '- Membran Timpani', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->Cell(5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, $sql_medc_srt->tht_membran_kiri, '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, $sql_medc_srt->tht_membran_kanan, '', 0, 'L', $fill);
                    $pdf->Ln(1);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Hidung', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(5, .5, '- Mukosa', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->Cell(5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, $sql_medc_srt->tht_mukosa_kiri, '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, $sql_medc_srt->tht_mukosa_kanan, '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(5, .5, '- Konka Infenor', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->Cell(5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, $sql_medc_srt->tht_konka_kiri, '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, $sql_medc_srt->tht_konka_kanan, '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(5, .5, '- Timpanometri', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->Cell(5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, $sql_medc_srt->tht_timpa_kiri, '', 0, 'L', $fill);
                    $pdf->Cell(4.25, .5, $sql_medc_srt->tht_timpa_kanan, '', 0, 'L', $fill);
                    $pdf->Ln(1);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Tenggorokan', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(5, .5, '- Tonsil', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->Cell(8.5, .5, $sql_medc_srt->tht_tonsil_tg, '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(5, .5, '- Mukosa', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->Cell(8.5, .5, $sql_medc_srt->tht_mukosa_tg, '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(5, .5, '- Dinding Faring', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->Cell(8.5, .5, $sql_medc_srt->tht_faring_tg, '', 0, 'L', $fill);
                    $pdf->Ln(1);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, 'Kesimpulan', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(16.5, .5, $sql_medc_srt->tht_kesimpulan, 0, 'J', $fill);
//                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(2, .5, 'Audiometri', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(16.5, .5, $sql_medc_srt->tht_audio, 0, 'J', $fill);
//                    $pdf->Ln();
                    break;
            }
            
            // QR GENERATOR VALIDASI
            $folder_path = FCPATH.'/file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }

            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. ';
            $params['level'] = 'H';
            $params['size'] = 2;
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR DOKTER
            $qr_dokter = $folder_path.'/qr-dokter-'.strtolower($sql_dokter->id).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').']';
            
            \QRcode::png($params['data'], $qr_dokter, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_dokter;
            
            // Gambar VALIDASI
            $pdf->Image($gambar4,2,$pdf->GetY() + 1,2,2);
            $pdf->Image($gambar5,12.5,$pdf->GetY()+1,2,2);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_srt->tgl_simpan), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(4, .5, 'Validasi', '0', 0, 'C', $fill);
            $pdf->Cell(7.5, .5, '', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(7.5, .5, (!empty($ket) ? $ket : 'Dokter Pemeriksa'), '0', 0, 'L', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->MultiCell(7.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : ''), 0, 'J', $fill);
                    
            $pdf->SetFillColor(235, 232, 228);
            $pdf->SetTextColor(0);
            $pdf->SetFont('Arial', '', '10');

            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login', '<div class="alert alert-danger">Authentifikasi gagal, silahkan login ulang!!</div>');
            redirect();
        }
    }
    
    
    public function pdf_medcheck_surat_inform() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id                 = $this->input->get('id');
            $id_medcheck        = $this->input->get('no_nota');

            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_srt       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck_surat_inform')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $sql_dokter2        = $this->db->where('id_user', $sql_medc_srt->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            
            $this->load->library('MedSuratPDF');
            $pdf = new MedSuratPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1,0.35,1);
            $pdf->header = 0;
            $pdf->addPage('','',false);
            
            // Gambar Watermark Tengah
            $pdf->Image($gambar2,5,4,17,19);
                        
            // Blok Isi Surat
            switch ($sql_medc_srt->tipe){
                
                case '1' :
                    $judul = "SURAT ".strtoupper(general::tipe_surat_inf($sql_medc_srt->tipe));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = FALSE;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Yang bertanda tangan dibawah ini,', '', 0, 'L', $fill);
                    $pdf->Ln(1);

                    // Blok PENANGGUNG JAWAB
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, strtoupper($sql_medc_srt->nama), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, ($sql_medc_srt->tgl_lahir != '0000-00-00' ? $this->tanggalan->tgl_indo2($sql_medc_srt->tgl_lahir).' ('.$this->tanggalan->usia($sql_medc_srt->tgl_lahir).')' : '-').(!empty($sql_medc_srt->jns_klm) ? ' / '.general::jns_klm($sql_medc_srt->jns_klm) : ''), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(12.5, .5, $sql_medc_srt->alamat, '', 'L', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Hubungan dengan pasien', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, general::tipe_hubungan($sql_medc_srt->status_hub), '0', 0, 'L', $fill);
                    $pdf->Ln(1);
                    
                    # Blok Paragraf kedua
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Dengan ini menyatakan,', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(10, .5, 'Telah melihat, memahami dan menyetujui tarif yang berlaku di ', '', 0, 'L', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(9, .5, strtoupper($setting->judul), '', 0, 'L', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'beserta tindakan dan obat-obatan yang dimungkinkan. Sanggup menjamin kelancaran pembayaran semua biaya', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'pelayanan bagi pasien :', '', 0, 'L', $fill);
                    $pdf->Ln(1);

                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Nomor Rekam Medis', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'NIK', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' ('.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir).')'.(!empty($sql_pasien->jns_klm) ? ' / '.general::jns_klm($sql_pasien->jns_klm) : ''), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(12.5, .5, $sql_pasien->alamat, '', 'L', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Tanggal Masuk', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, $this->tanggalan->tgl_indo2($sql_medc->tgl_masuk), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Dokter yang merawat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, (!empty($sql_dokter2->nama_dpn) ? $sql_dokter2->nama_dpn.' ' : '').$sql_dokter2->nama.(!empty($sql_dokter2->nama_blk) ? ', '.$sql_dokter2->nama_blk.' ' : ''), '0', 0, 'L', $fill);
                    $pdf->Ln(1);
                    
                    # Tentukan penjamin ASURANSI / UMUM, jika 1 maka umum
                    if($sql_medc->tipe_bayar == '1'){                    
                        $pdf->SetFont('Arial', 'B', '10');
                        $pdf->Cell(4.5, .5, 'PASIEN UMUM / PRIBADI', '0', 0, 'L', $fill);
                        $pdf->Ln();
                        $pdf->SetFont('Arial', '', '10');
                        $pdf->Cell(19, .5, 'Bersedia dan siap membayar seluruh biaya perawatan dan tindakan serta obat - obatan yang diberikan terhadap', '', 0, 'L', $fill);
                        $pdf->Ln();
                        $pdf->Cell(19, .5, 'pasien tersebut diatas, yang jumlahnya akan diketahui setelah pasien selesai Rawat Inap.', '', 0, 'L', $fill);
                        $pdf->Ln(1);
                    }else{
                        $pdf->SetFont('Arial', 'B', '10');
                        $pdf->Cell(4.5, .5, 'PASIEN ASURANSI', '0', 0, 'L', $fill);
                        $pdf->Ln();
                        $pdf->SetFont('Arial', 'B', '10');
                        $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                        $pdf->Cell(4.5, .5, 'Penjamin', '0', 0, 'L', $fill);
                        $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                        $pdf->SetFont('Arial', '', '10');
                        $pdf->Cell(12, .5, $sql_medc_srt->penjamin, '0', 0, 'L', $fill);
                        $pdf->Ln();
                        $pdf->SetFont('Arial', 'B', '10');
                        $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                        $pdf->Cell(4.5, .5, 'Keterangan', '0', 0, 'L', $fill);
                        $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                        $pdf->SetFont('Arial', '', '10');
                        $pdf->Cell(12, .5, $sql_medc_srt->penanggung, '0', 0, 'L', $fill);
                        $pdf->Ln();
                        $pdf->Cell(19, .5, 'Bila kelas yang dipilih melebihi dari jatah kelas yang ditentukan, bersedia membayar', '', 0, 'L', $fill);
                        $pdf->Ln();
                        $pdf->Cell(19, .5, 'seluruh selisih biaya sesuai dengan tarif yang berlaku.', '', 0, 'L', $fill);
                        $pdf->Ln(1);
                    }
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian surat pernyataan ini dibuat dalam keadaan sadar tanpa ada tekanan dari pihak manapun.', '', 0, 'L', $fill);
                    $pdf->Ln();
            
                    # QR GENERATOR VALIDASI
                    $folder_path = 'file/pasien/'.strtolower($kode_pasien);
                    if (!is_dir($folder_path)) {
                        mkdir($folder_path, 0777, true);
                    }
                    
                    $qr_validasi = $folder_path.'/qr-petugas-'.strtolower($sql_medc->no_rm).'.png';
                    $qr_content = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Diwakili oleh '.
                                strtoupper($this->ion_auth->user($sql_medc_srt->id_user)->row()->first_name).','.
                                'yang merupakan petugas yang bertugas pada tanggal '.date('d/m/Y H:i').'.';
                    
                    require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
                    \QRcode::png($qr_content, $qr_validasi, QR_ECLEVEL_H, 2, 2);
                    
                    $gambar4 = $qr_validasi; 
                                
                    # QR GENERATOR DOKTER
                    $qr_dokter = FCPATH.'/'.$sql_medc_srt->file_name1;
                    $gambar5 = $qr_dokter;        
                    
                    # Gambar VALIDASI
                    $pdf->SetY(-10.5);
                    $pdf->Image($gambar4,2,$pdf->GetY(),2,2);
                    $pdf->Image($gambar5,12.5,$pdf->GetY(),2,2);
                    
                    $pdf->SetY(-11.5);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(7.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_srt->tgl_masuk), '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(4.5, .5, 'Petugas', '0', 0, 'C', $fill);
                    $pdf->Cell(7.5, .5, '', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(7.5, .5, (!empty($ket) ? $ket : 'Yang Membuat Pernyataan'), '0', 0, 'L', $fill);
                    $pdf->Ln(4);
                    
                    $pdf->SetY(-8.5);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(4.5, .5, $this->ion_auth->user($sql_medc_srt->id_user)->row()->first_name, '', 0, 'C', $fill);
                    $pdf->Cell(7, .5, '', '', 0, 'C', $fill);
                    $pdf->Cell(7.5, .5, strtoupper($sql_medc_srt->nama), '', 0, 'L', $fill);
                    $pdf->Ln();
                    break;
                    
                case '2' :
                    $judul = "SURAT ".strtoupper(general::tipe_surat_inf($sql_medc_srt->tipe));

                    // Blok Judul
                    $pdf->SetFont('Arial', 'B', '14');
                    $pdf->Cell(19, .5, $judul, 0, 1, 'C');
                    $pdf->Ln(0);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, 'Nomor : '.$sql_medc_srt->no_surat, 0, 1, 'C');
                    $pdf->Ln();

                    // Blok Paragraf Pertama
                    $fill = FALSE;
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Yang bertanda tangan dibawah ini,', '', 0, 'L', $fill);
                    $pdf->Ln(1);

                    // Blok PENANGGUNG JAWAB
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, $sql_medc_srt->nama, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, ($sql_medc_srt->tgl_lahir != '0000-00-00' ? $this->tanggalan->tgl_indo2($sql_medc_srt->tgl_lahir).' ('.$this->tanggalan->usia($sql_medc_srt->tgl_lahir).')' : '-').(!empty($sql_medc_srt->jns_klm) ? ' / '.general::jns_klm($sql_medc_srt->jns_klm) : ''), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Hubungan dengan pasien', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, general::tipe_hubungan($sql_medc_srt->status_hub), '0', 0, 'L', $fill);
                    $pdf->Ln(1);
                    
                    # Blok Paragraf kedua
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Dengan ini saya menyatakan dengan sesungguhnya telah memberikan pernyataan,', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(19, .5, general::tipe_surat_inf_stj($sql_medc_srt->status_stj), '', 0, 'C', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(10, .5, 'Untuk dilakukan pemeriksaan, pengobatan dan tindakan medis yaitu :', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'iB', '10');
                    $pdf->MultiCell(19, .5, $sql_medc_srt->tindakan, '', 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'terhadap pasien dengan identitas pasien sebagai berikut :', '', 0, 'L', $fill);
                    $pdf->Ln(1);

                    // Blok ID PASIEN
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Nomor Rekam Medis', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'NIK', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Nama Lengkap', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, $sql_pasien->nama_pgl, '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' ('.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir).')'.(!empty($sql_pasien->jns_klm) ? ' / '.general::jns_klm($sql_pasien->jns_klm) : ''), '0', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Alamat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->MultiCell(12, .5, $sql_pasien->alamat, '', 'L', $fill);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(1, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(4.5, .5, 'Dokter yang merawat', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12, .5, (!empty($sql_dokter2->nama_dpn) ? $sql_dokter2->nama_dpn.' ' : '').$sql_dokter2->nama.(!empty($sql_dokter2->nama_blk) ? ', '.$sql_dokter2->nama_blk.' ' : ''), '0', 0, 'L', $fill);
                    $pdf->Ln(1);
                    
                    # Paragraf bawah
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Yang cara, manfaat tujuan serta resiko yang ditimbulkan dari pemeriksaan pengobatan serta tindakan medis tersebut', '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->Cell(19, .5, 'diatas telah dijelaskan oleh dokter dan saya telah mengerti sepenuhnya.', '', 0, 'L', $fill);
                    $pdf->Ln();
            
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(19, .5, 'Demikian surat pernyataan ini dibuat dalam keadaan sadar tanpa ada tekanan dari pihak manapun.', '', 0, 'L', $fill);
                    $pdf->Ln();
            
                    # QR GENERATOR VALIDASI
                    $folder_path = 'file/pasien/'.strtolower($kode_pasien);
                    if (!is_dir($folder_path)) {
                        mkdir($folder_path, 0777, true);
                    }
                    
                    $qr_validasi = $folder_path.'/qr-petugas-'.strtolower($sql_medc->no_rm).'.png';
                    $qr_content = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Diwakili oleh '.
                                strtoupper($this->ion_auth->user($sql_medc_srt->id_user)->row()->first_name).','.
                                'yang merupakan petugas yang bertugas pada tanggal '.date('d/m/Y H:i').'.';
                    
                    require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
                    \QRcode::png($qr_content, $qr_validasi, QR_ECLEVEL_H, 2, 2);
                    
                    $gambar4 = $qr_validasi; 
                                
                    # QR GENERATOR TANDA TANGAN
                    $qr_ttd = FCPATH.'/'.$sql_medc_srt->file_name1;
                    $gambar5 = $qr_ttd;        
                                
                    # QR GENERATOR DOKTER
                    $qr_dokter = $folder_path.'/qr-dokter-'.strtolower($sql_dokter->id).'.png';
                    $qr_content_dokter = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.
                                (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.
                                (!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').']';
                    
                    \QRcode::png($qr_content_dokter, $qr_dokter, QR_ECLEVEL_H, 2, 2);
                    $gambar6 = $qr_dokter;        
                    
                    # Gambar VALIDASI
                    $pdf->SetY(-13.5);
                    $pdf->Image($gambar6,3.25,$pdf->GetY(),2,2);
                    $pdf->Image($gambar5,13.5,$pdf->GetY(),2,2);
                    
                    # QR Petugas di kolom saksi
                    $pdf->SetY(-10.5);
                    $pdf->Image($gambar4,3.25,$pdf->GetY(),2,2);
                    
                    $pdf->SetY(-14.5);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(12.5, .5, '', '', 0, 'L', $fill);
                    $pdf->Cell(6.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_srt->tgl_masuk), '', 0, 'L', $fill);
                    $pdf->Ln();
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(6.5, .5, 'Dokter Penanggung Jawab', '0', 0, 'C', $fill);
                    $pdf->Cell(6, .5, '', '0', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(6.5, .5, (!empty($ket) ? $ket : 'Yang Membuat Pernyataan'), '0', 0, 'L', $fill);
                    $pdf->Ln(4);
                    
                    $pdf->SetY(-11.5);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(6.5, .5,(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk.' ' : ''), '', 0, 'L', $fill);
                    $pdf->Cell(6, .5, '', '0', 0, 'C', $fill);
                    $pdf->Cell(6.5, .5, $sql_medc_srt->nama, '', 0, 'L', $fill);
                    $pdf->Ln();
                    
                    $pdf->SetY(-11);
                    $pdf->SetFont('Arial', 'B', '10');
                    $pdf->Cell(6.5, .5, 'Saksi 1', '', 0, 'C', $fill);
                    $pdf->Cell(6, .5, '', '0', 0, 'C', $fill);
                    $pdf->Cell(6.5, .5, 'Saksi 2 '.$sql_pasien->nama, '', 0, 'L', $fill);
                    $pdf->Ln(4);
                    
                    $pdf->SetY(-8.5);
                    $pdf->SetFont('Arial', '', '10');
                    $pdf->Cell(6.5, .5, '( '.$this->ion_auth->user($sql_medc_srt->id_user)->row()->first_name.' )', '', 0, 'C', $fill);
                    $pdf->Cell(6, .5, '', '', 0, 'L', $fill);
                    $pdf->Ln();
                    break;
            }
                    
            $pdf->SetFillColor(235, 232, 228);
            $pdf->SetTextColor(0);
            $pdf->SetFont('Arial', '', '10');

            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');


            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function pdf_medcheck_lab() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            $id_lab             = $this->input->get('id_lab');
            $status_ctk         = $this->input->get('status_ctk');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_srt       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck_surat')->row(); 
            $sql_medc_lab       = $this->db->where('id', general::dekrip($id_lab))->get('tbl_trans_medcheck_lab')->row(); 
            $sql_medc_lab_det   = $this->db->where('id_medcheck', general::dekrip($id_medcheck))->where('id_lab', general::dekrip($id_lab))->where('status', '3')->where('status_hsl', '1')->group_by('id_lab_kat')->get('tbl_trans_medcheck_det')->result(); 
            $sql_poli           = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', (!empty($sql_medc_lab->id_dokter) ? $sql_medc_lab->id_dokter : $sql_medc->id_dokter))->get('tbl_m_karyawan')->row();
            $sql_dokter2        = $this->db->where('id_user', '221')->get('tbl_m_karyawan')->row();
            $sql_dokter3        = $this->db->where('id_user', '48167')->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png'; // base_url('assets/theme/admin-lte-3/dist/img/logo-esensia-2.png');
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png'; // base_url('assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png');
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png'; // base_url('assets/theme/admin-lte-3/dist/img/logo-footer.png');
            $sess_print         = $this->session->userdata('lab_print');
            $fill               = FALSE;
            
            $judul              = "HASIL PEMERIKSAAN LABORATORIUM";
            $judul2             = "Laboratory Result";

            $this->load->library('MedLabPDF');
            $pdf = new MedLabPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 6.5);
            $pdf->SetMargins(1,0.35,1);
            $pdf->header = 0;
            $pdf->addPage('','',false);
            
            # Gambar Watermark Tengah
            if(file_exists($gambar2)) {
                $pdf->Image($gambar2,5,4,15,19);
            }
            
            # Blok Judul
            $pdf->SetFont('Arial', 'B', '13');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'Bi', '13');
            $pdf->Cell(19, .5, $judul2, 'B', 1, 'C');
            $pdf->Ln();
            
            # Blok Dokter Penanggung Jawab
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(9, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(4, .5, 'Dokter Penanggung Jawab', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(5.5, .5, '1. dr. ANITA TRI HASTUTI, Sp.PK', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(9, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(4, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, '', '0', 0, 'C', $fill);
            $pdf->Cell(5.5, .5, '2. dr. YENI JAMILAH, Sp.MK', '', 0, 'L', $fill);
            $pdf->Ln();
            
            # Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, 'No. Pemeriksaan', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_medc_lab->no_lab, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'No. RM', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'No. Sampel', '0', 0, 'L', $fill); 
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_medc_lab->no_sample, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Nama Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, general::bersih($sql_pasien->nama_pgl).' ('.$sql_pasien->jns_klm.')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Tgl Periksa', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $this->tanggalan->tgl_indo5($sql_medc_lab->tgl_masuk), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'NIK', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Poli', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_poli->lokasi, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Tgl Lahir', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' / '.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Alamat', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, (!empty($sql_pasien->alamat) ? general::bersih($sql_pasien->alamat) : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
            $pdf->Cell(3, .5, 'No. HP / Rmh', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, $sql_pasien->no_hp.(!empty($penj->no_telp) ? ' / '.$penj->no_telp : ''), '0', 'L');
            $pdf->Cell(3, .5, 'Dokter Pengirim', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : ''), '0', 'L');
            $pdf->Ln();
            
            $fill = FALSE;
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(6, .5, 'PEMERIKSAAN', 'T', 0, 'L', $fill);
            $pdf->Cell(5, .5, 'HASIL', 'T', 0, 'L', $fill);
            $pdf->Cell(4, .5, 'NILAI RUJUKAN', 'T', 0, 'L', $fill);
            $pdf->Cell(4, .5, 'SATUAN', 'T', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'Bi', '9');
            $pdf->Cell(6, .5, 'EXAMINATION', 'B', 0, 'L', $fill);
            $pdf->Cell(5, .5, 'RESULT', 'B', 0, 'L', $fill);
            $pdf->Cell(4, .5, 'REFERENCE VALUE', 'B', 0, 'L', $fill);
            $pdf->Cell(4, .5, 'MEASURE', 'B', 0, 'L', $fill);
            $pdf->Ln();
            
            # Jika status cetak 1, maka akan di cetak semua
            # Pilihan ini untuk mengakomodir ePasien supaya bisa mencetak hasil
            # Jika status cetak tidak ada, maka untuk perawat bisa memilih item yg di cetak
            if ($status_ctk == '1') {
                foreach ($sql_medc_lab_det as $det) {
                    $sql_kat = $this->db->where('id', $det->id_lab_kat)->get('tbl_m_kategori')->row();
                    $sql_det = $this->db->where('status_hsl', '1')->where('id_medcheck', $det->id_medcheck)->where('id_lab', $det->id_lab)->where('id_lab_kat', $det->id_lab_kat)->get('tbl_trans_medcheck_det')->result();

                    if (!empty($det->id_lab_kat)) {
                        $pdf->SetFont('Arial', 'Bi', '9');
                        $pdf->Cell(19, .5, $sql_kat->keterangan, '', 0, 'L', $fill);
                        $pdf->Ln();
                    }else{
                        $pdf->Ln(0);
                    }

                    foreach ($sql_det as $medc) {
                        $sql_lab_rws = $this->db->where('id_medcheck', $medc->id_medcheck)->get('tbl_trans_medcheck_lab');
                        if ($sql_lab_rws->num_rows() > 1) {
                            $sql_lab = $this->db->where('id_medcheck', $medc->id_medcheck)->where('id_lab', general::dekrip($this->input->get('id_lab')))->where('id_item', $medc->id_item)->get('tbl_trans_medcheck_lab_hsl')->result();
                        } else {
                            $sql_lab = $this->db->where('id_medcheck', $medc->id_medcheck)->where('id_item', $medc->id_item)->get('tbl_trans_medcheck_lab_hsl')->result();
                        }

                        $pdf->SetFont('Arial', '', '8');

                        if (!empty($det->id_lab_kat)) {
                            $pdf->Cell(.25, .5, '', '', 0, 'L', $fill);
                        }

                        $pdf->Cell(18.5, .5, $medc->item, '', 0, 'L', $fill);
                        $pdf->Ln();

                        foreach ($sql_lab as $lab) {
                            # Jika warna hasil di tandai merah
                            if ($lab->status_hsl_wrn == 1) {
                                $pdf->SetTextColor(249, 11, 11);
                            }

                            $pdf->Cell(.25, .5, '', '', 0, 'L', $fill);
                            $pdf->Cell(6, .5, ' - ' . html_entity_decode($lab->item_name) . ($lab->status_hsl_lab == '1' ? '*' : ''), '', 0, 'L', $fill);
//                            $pdf->Cell(7, .5, '', 'B', 0, 'L', $fill);
                            $pdf->Cell(4.5, .5, html_entity_decode($lab->item_hasil, ENT_NOQUOTES, 'utf-8') . ($lab_det->status_hsl_lab == '1' ? '*' : ''), '', 0, 'L', $fill);
                            
                            $x = $pdf->GetX();
                            $y = $pdf->GetY();                           
                            $pdf->MultiCell(4.5, .5, html_entity_decode($lab->item_value, ENT_NOQUOTES, 'utf-8'), '', 'L');                            
                            $pdf->SetXY($x + 5, $y);                            
                            $pdf->Cell(3.5, .5, html_entity_decode($lab->item_satuan, ENT_NOQUOTES, 'utf-8'), '', 0, 'L', $fill);
//                            $pdf->Cell(5.5, .5, html_entity_decode($lab->item_value, ENT_NOQUOTES, 'utf-8'), '', 0, 'L', $fill);
//                            $pdf->Cell(2, .5, html_entity_decode($lab->item_satuan, ENT_NOQUOTES, 'utf-8'), '', 0, 'L', $fill);
                            $pdf->Ln();
                            
                            # Jika warna hasil di tandai merah
                            if ($lab->status_hsl_wrn == 1) {
                                $pdf->SetTextColor(0,0,0);
                            }
                        }
                    }
                }
            } else {
                # Untuk Mencetak dengan pilihan                
                $sql_medc_lab_det2   = $this->db->where('status', '3')->where('status_ctk', '1')->where('status_hsl', '1')->group_by('id_lab_kat')->where('id_medcheck', general::dekrip($id_medcheck))->where('id_lab', general::dekrip($id_lab))->get('tbl_trans_medcheck_det')->result();
                
                $i = 0;
                foreach ($sql_medc_lab_det2 as $det2) {
                    $sql_kat2 = $this->db->where('id', $det2->id_lab_kat)->get('tbl_m_kategori')->row();
                    $sql_det2 = $this->db->where('status_ctk', '1')->where('status_hsl', '1')->where('id_medcheck', $det2->id_medcheck)->where('id_lab', $det2->id_lab)->where('id_lab_kat', $det2->id_lab_kat)->get('tbl_trans_medcheck_det')->result();                        
                    
                    if (!empty($det2->id_lab_kat)) {
                        $pdf->SetFont('Arial', 'Bi', '9');
                        $pdf->Cell(19, .5, $sql_kat2->keterangan, '', 0, 'L', $fill);
                        $pdf->Ln(); 
                    }

                    foreach ($sql_det2 as $medc2) {
                        $sql_lab_rws2 = $this->db->where('id_medcheck', $medc2->id_medcheck)->get('tbl_trans_medcheck_lab');
                        if ($sql_lab_rws2->num_rows() > 1) {
                            $sql_lab2 = $this->db->where('id_medcheck', $medc2->id_medcheck)->where('id_lab', $medc2->id_lab)->where('id_item', $medc2->id_item)->get('tbl_trans_medcheck_lab_hsl');
                        } else {
                            $sql_lab2 = $this->db->where('id_medcheck', $medc2->id_medcheck)->where('id_item', $medc2->id_item)->get('tbl_trans_medcheck_lab_hsl');
                        }

                        $pdf->SetFont('Arial', '', '8');

                        if (!empty($det2->id_lab_kat)) {
//                            if ($sess_print[$i]['value'] == '1' AND $sess_print[$i]['id_kat'] == $det->id_lab_kat) {
                                $pdf->Cell(.10, .5, '', '', 0, 'L', $fill);
//                            }
                        }
                        
                        if(strtoupper($sql_lab2->row()->item_name) != strtoupper($medc2->item)){
                            $pdf->Cell(18.75, .5, $medc2->item.'' . ($lab_det2->status_hsl_lab == '1' ? '*' : ''), '', 0, 'L', $fill);
//                            $pdf->Cell(.25, .5, '', '', 0, 'L', $fill);
                            $pdf->Ln(0.45);
                        }

                        foreach ($sql_lab2->result() as $lab2) {
                                $x = $pdf->GetX();
                                $y = $pdf->GetY();
                                
//                            if ($sess_print[$i]['value'] == '1' AND $sess_print[$i]['id_lab_hsl'] == $lab->id) {
                                if(strtoupper($sql_lab2->row()->item_name) != strtoupper($medc2->item)){
                                    $pdf->Cell(.10, .5, '', '', 0, 'L', $fill);
                                }
                                
                                # Jika warna hasil di tandai merah
                                if($lab2->status_hsl_wrn == 1){
                                    $pdf->SetTextColor(249,11,11);
                                }
                                
                                $itm_tg     = 0.5; # tinggi cell
                                $itm_lbr    = 4;
                                $itm_txt    = ceil($pdf->GetStringWidth($lab2->item_hasil));
                                $len        = strlen($lab2->item_hasil);
                                $itm_spasi  = ($len > 35 ? 0.25 : 0);
                                $itm_hsl    = (ceil(($itm_txt / $itm_lbr)) * $itm_tg) + $itm_spasi;
                                                            
                                
                                if(strtoupper($sql_lab2->row()->item_name) != strtoupper($medc2->item)){
                                    $pdf->Cell(6, .5, ' - '.html_entity_decode($lab2->item_name), '', 0, 'L', $fill);
                                }else{
//                                    $pdf->Cell(.5, .5, '', '1', 0, 'L', $fill);
                                    $pdf->Cell(6, .5, ' - '.html_entity_decode($lab2->item_name), '', 0, 'L', $fill);
                                }
                                
                                $pdf->MultiCell(4.5, $itm_hsl, html_entity_decode($lab2->item_hasil, ENT_NOQUOTES, 'utf-8'), '', 'J');
                                $pdf->SetXY($x + 11, $y);
                                $pdf->MultiCell(4, $itm_hsl, html_entity_decode($lab2->item_value, ENT_NOQUOTES, 'utf-8'), '', 'L'); 
                                $pdf->SetXY($x + 15, $y);
                                $pdf->MultiCell(3.5, $itm_hsl, html_entity_decode($lab2->item_satuan, ENT_NOQUOTES, 'utf-8'), '', 'L'); 
                                $pdf->Ln(0.33);
                                
                                # Jika warna hasil di tandai merah
                                if($lab2->status_hsl_wrn == 1){
                                    $pdf->SetTextColor(0,0,0);
                                }
                        }
                    }
                    
                    $i++;
                }                
            }
            
            $pdf->SetFont('Arial', 'i', '8');
            $pdf->Ln();
            $pdf->Cell(19, .5, ($sql_medc_lab->status_duplo == '1' ? '* Sudah dilakukan duplo' : ''), 'T', 0, 'L', $fill);
            $pdf->Ln();
            
            // Keterangan Hasil Lab selain template covid
            if ($sql_medc_lab->status_cvd == '0' AND !empty($sql_medc_lab->ket)) {
                $pdf->SetFont('Arial', 'B', '10');
                $pdf->Cell(19, .5, 'Catatan / Note', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->SetFont('Arial', '', '9');
                $pdf->MultiCell(6, .5, $sql_medc_lab->ket, '0', 'L');
            }elseif($sql_medc_lab->status_cvd != '0'){
                $pdf->SetFont('Arial', 'B', '10');
                $pdf->Cell(19, .5, 'Catatan / Note', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->SetFont('Arial', '', '8');
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '1.', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'Hasil positiv berlaku untuk hasil PCR SARS CoV-2 atau Antigen dari Laboratorium Klinik Utama Rawat Inap', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'Esensia. Nilai tersebut tidak dapat dibandingkan dengan CT hasil PCR SARS CoV-2 atau Antigen dari', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'laboratorium lain.', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->SetFont('Arial', 'i', '8');
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'Positive results apply to PCR results for SARS CoV-2 or Antigens from the Esensia Inpatient Main', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'Clinical Laboratory. This value cannot be compared with CT PCR results from SARS CoV-2 or Antigens from', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'other laboratories.', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->SetFont('Arial', '', '8');
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '2.', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'Kondisi tersebut hanya menggambarkan kondisi saat pengambilan sampel.', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->SetFont('Arial', 'i', '8');
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'These conditions only describe the conditions at the time of sampling.', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->SetFont('Arial', '', '8');
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '3.', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'Bila hasil positif dan terdapat gejala klinis, segera konsultasikan ke faskes.', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->SetFont('Arial', 'i', '8');
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'These conditions only describe the conditions at the time of sampling.', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->SetFont('Arial', '', '8');
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '4.', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'Bila hasil negatif tidak selalu berarti pasien tidak terinfeksi SARS CoV-2, dan perlu dilakukan', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'pemeriksaan secara berkala.', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->SetFont('Arial', 'i', '8');
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);              
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);             
                $pdf->Cell(18, .5, 'A negative results  does not necessarily mean that the patient is not infected with SARS-CoV-2, and', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);
                $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);
                $pdf->Cell(18, .5, 'periodic examinations need to be carried out.', '', 0, 'L', $fill);
                $pdf->Ln();
            }
           
            // QR GENERATOR VALIDASI
            // Load QR library
            require_once APPPATH.'third_party/phpqrcode/qrlib.php';
            
            $qr_validasi = FCPATH.'/file/pasien/'.strtolower($kode_pasien).'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $validasi_text = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. ';
            
            // Create directory if it doesn't exist
            $dir = dirname($qr_validasi);
            if (!file_exists($dir)) {
                mkdir($dir, 0777, true);
            }
            
            // Generate QR code using QRlib
            \QRcode::png($validasi_text, $qr_validasi, QR_ECLEVEL_H, 2);
            
            $gambar4 = $qr_validasi;         
                        
            // QR GENERATOR DOKTER
            $qr_dokter = FCPATH.'/file/pasien/'.strtolower($kode_pasien).'/qr-dokter-'.strtolower($sql_dokter2->id).'.png';
            $dokter_text = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.(!empty($sql_dokter2->nama_dpn) ? $sql_dokter2->nama_dpn.' ' : '').$sql_dokter2->nama.(!empty($sql_dokter2->nama_blk) ? ', '.$sql_dokter2->nama_blk : '').']';
            
            // Create directory if it doesn't exist
            $dir = dirname($qr_dokter);
            if (!file_exists($dir)) {
                mkdir($dir, 0777, true);
            }
            
            // Generate QR code using QRlib
            \QRcode::png($dokter_text, $qr_dokter, QR_ECLEVEL_H, 2);
            
            $gambar5 = $qr_dokter;
            
            # Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4,2,$getY,2,2);
            $pdf->Image($gambar5,12.5,$getY,2,2);
            
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, '', '0', 0, 'C', $fill);
//            $pdf->Cell(7, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_lab->tgl_masuk), '', 0, 'L', $fill);
            $pdf->Cell(7, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_lab->tgl_masuk), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(4, .5, 'Validasi', '0', 0, 'C', $fill);            
            # Jika hasil normal, maka muncul nilai kritis
            if($sql_medc_lab->status_normal == '1'){
                $pdf->SetDrawColor(49, 42, 238);
                $pdf->SetTextColor(49, 42, 238);
                $pdf->SetFont('Arial', 'B', '8');
                $pdf->Cell(6.5, .5, 'PELAPORAN NILAI KRITIS', '1', 0, 'C', $fill);
                $pdf->SetTextColor(0,0,0);
            }else{                
                $pdf->Cell(6.5, .5, '', '', 0, 'C', $fill);
            }            
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(.5, .5, '', '0', 0, 'C', $fill);
            $pdf->Cell(7, .5, (!empty($ket) ? $ket : 'Dokter Pemeriksa'), '0', 0, 'L', $fill);
            $pdf->Ln();            
            $pdf->Cell(4, .5, '', '0', 0, 'C', $fill);            
            # Jika hasil normal, maka muncul nilai kritis
            if($sql_medc_lab->status_normal == '1'){
                $pdf->SetFont('Arial', 'B', '6');
                $pdf->SetTextColor(49, 42, 238);
                $pdf->Cell(3.25, .5, 'PETUGAS LABORATORIUM', '1', 0, 'L', $fill);
                $pdf->Cell(3.25, .5, 'DPJP', '1', 0, 'L', $fill);
                $pdf->SetTextColor(0,0,0);
            }else{                
                $pdf->Cell(6.5, .5, '', '', 0, 'C', $fill);
            }
            
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Ln();
            $pdf->Cell(4, .5, '', '0', 0, 'C', $fill);
            
            # Jika hasil normal, maka muncul nilai kritis
            if($sql_medc_lab->status_normal == '1'){
                $pdf->SetFont('Arial', 'B', '6');
                $pdf->SetTextColor(49, 42, 238);
                $pdf->Cell(3.25, .5, 'Tanggal', 'L', 0, 'L', $fill);
                $pdf->Cell(3.25, .5, 'Tanggal', 'LR', 0, 'L', $fill);
                $pdf->SetTextColor(0,0,0);
            }else{                
                $pdf->Cell(6.5, .5, '', '', 0, 'C', $fill);
            }
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Ln();
            $pdf->Cell(4, .5, '', '0', 0, 'C', $fill);
            # Jika hasil normal, maka muncul nilai kritis
            if($sql_medc_lab->status_normal == '1'){
                $pdf->SetFont('Arial', 'B', '6');
                $pdf->SetTextColor(49, 42, 238);
                $pdf->Cell(3.25, .5, 'Jam', 'L', 0, 'L', $fill);
                $pdf->Cell(3.25, .5, 'Jam', 'LR', 0, 'L', $fill);
                $pdf->SetTextColor(0,0,0);
            }else{                
                $pdf->Cell(6.5, .5, '', '', 0, 'C', $fill);
            }
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Ln();
            $pdf->Cell(4, .5, '', '0', 0, 'C', $fill);
            # Jika hasil normal, maka muncul nilai kritis
            if($sql_medc_lab->status_normal == '1'){
                $pdf->SetFont('Arial', 'B', '6');
                $pdf->SetTextColor(49, 42, 238);
                $pdf->Cell(3.25, .5, 'Nama', 'L', 0, 'L', $fill);
                $pdf->Cell(3.25, .5, 'Nama', 'LR', 0, 'L', $fill);
                $pdf->SetTextColor(0,0,0);
            }else{                
                $pdf->Cell(6.5, .5, '', '', 0, 'C', $fill);
            }
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Ln();            
            $pdf->Cell(4, .5, '', '0', 0, 'C', $fill);
            # Jika hasil normal, maka muncul nilai kritis
            if($sql_medc_lab->status_normal == '1'){
                $pdf->SetFont('Arial', 'B', '6');
                $pdf->SetTextColor(49, 42, 238);
                $pdf->Cell(3.25, .5, 'TTD', 'L', 0, 'L', $fill);
                $pdf->Cell(3.25, .5, 'TTD', 'LR', 0, 'L', $fill);
                $pdf->SetTextColor(0,0,0);
            }else{                
                $pdf->Cell(6.5, .5, '', '', 0, 'C', $fill);
            }
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(.5, .5, '', '0', 0, 'C', $fill);
            
            # JIka status APS = 1, maka ganti dr anita
            if($sql_dokter->status_aps == '1'){
                $pdf->Cell(7, .5, (!empty($sql_dokter2->nama_dpn) ? $sql_dokter2->nama_dpn.' ' : '').$sql_dokter2->nama.(!empty($sql_dokter2->nama_blk) ? ', '.$sql_dokter2->nama_blk : ''), '', 0, 'L', $fill);
            }else{
                $pdf->Cell(7, .5, (!empty($sql_dokter2->nama_dpn) ? $sql_dokter2->nama_dpn.' ' : '').$sql_dokter2->nama.(!empty($sql_dokter2->nama_blk) ? ', '.$sql_dokter2->nama_blk : ''), '', 0, 'L', $fill);
            }
            
            $pdf->Ln();
            $pdf->Cell(4, .5, '', '0', 0, 'C', $fill);
            # Jika hasil normal, maka muncul nilai kritis
            if($sql_medc_lab->status_normal == '1'){
                $pdf->SetFont('Arial', 'B', '6');
                $pdf->Cell(3.25, .5, '', 'LB', 0, 'L', $fill);
                $pdf->Cell(3.25, .5, '', 'LRB', 0, 'L', $fill);
            }else{                
                $pdf->Cell(6.5, .5, '', '', 0, 'C', $fill);
            }
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(.5, .5, '', '0', 0, 'C', $fill);
            $pdf->Cell(7, .5, $sql_dokter2->nik, '', 0, 'L', $fill);
            $pdf->Ln();
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login', '<div class="alert alert-danger">Authentifikasi gagal, silahkan login ulang!!</div>');
            redirect();
        }
    }
    
    public function pdf_medcheck_lab_spiro() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            $id_lab             = $this->input->get('id_lab');
            $status_ctk         = $this->input->get('status_ctk');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_srt       = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck_surat')->row(); 
            $sql_medc_lab       = $this->db->where('id', general::dekrip($id_lab))->get('tbl_trans_medcheck_lab_spiro')->row(); 
            $sql_medc_lab_det   = $this->db->where('id_lab_spiro', general::dekrip($id_lab))->get('tbl_trans_medcheck_lab_spiro_hsl')->result(); 
            $sql_poli           = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', (!empty($sql_medc_lab->id_dokter) ? $sql_medc_lab->id_dokter : $sql_medc->id_dokter))->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;

            $gambar = [
                'logo' => FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png',
                'watermark' => FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png',
                'footer' => FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png'
            ];
            
            $judul              = "HASIL ANALISA SPIROGRAM";
            $judul2             = "Spirogram Result";

            $this->load->library('MedLabPDF');
            $pdf = new MedLabPDF('P', 'cm', [21.5, 33]);
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1, 0.35, 1);
            $pdf->header = 0;
            $pdf->addPage('', '', false);
            
            // Gambar Watermark Tengah
            if(file_exists($gambar['watermark'])) {
                $pdf->Image($gambar['watermark'], 5, 4, 15, 19);     
            }

            $fill = FALSE;            
            # Blok Judul
            $pdf->SetFont('Arial', 'B', '13');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'Bi', '13');
            $pdf->Cell(19, .5, $judul2, 'B', 1, 'C');
            $pdf->Ln(0);
            
            # Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, 'No. Pemeriksaan', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_medc_lab->no_lab, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'No. RM', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'No. Sampel', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_medc_lab->no_sample, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Nama Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, general::bersih($sql_pasien->nama_pgl).' ('.$sql_pasien->jns_klm.')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Tanggal', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $this->tanggalan->tgl_indo5($sql_medc_lab->tgl_masuk), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'NIK', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'No. HP / Rmh', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_pasien->no_hp.(!empty($sql_pasien->no_telp) ? ' / '.$sql_pasien->no_telp : ''), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Tgl Lahir', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' / '.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Alamat', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, (!empty($sql_pasien->alamat) ? general::bersih($sql_pasien->alamat) : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
            $pdf->Cell(3, .5, 'Dokter pengirim', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, (!empty($sql_medc_lab->id_dokter) ? $this->ion_auth->user($sql_medc_lab->id_dokter)->row()->first_name : '-'), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Tinggi Badan', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, (float)$sql_medc_lab->tb.' cm', '0', 0, 'L', $fill);
            $pdf->Cell(3, .5, 'Berat Badan', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(7, .5, (float)$sql_medc_lab->bb.' Kg', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'IMT', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, (float)$sql_medc_lab->imt, '0', 0, 'L', $fill);
            $pdf->Cell(3, .5, 'Kebiasaan Merokok', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(7, .5, general::status_rokok($sql_medc_lab->status_rokok), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Keluhan', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, $sql_medc_lab->keluhan, '0', 'L');
            $pdf->Cell(3, .5, 'Riwayat Asma', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, $sql_medc_lab->riwayat, '0', 'L');
            $pdf->Ln();
            
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(6, .5, '', 'TLB', 0, 'L', $fill);
            $pdf->Cell(4, .5, 'HASIL PENGUKURAN', 'TB', 0, 'C', $fill);
            $pdf->Cell(3, .5, 'PREDIKSI', 'TB', 0, 'C', $fill);
            $pdf->Cell(3, .5, '% PREDIKSI', 'TB', 0, 'C', $fill);
            $pdf->Cell(3, .5, 'LLN', 'TRB', 0, 'C', $fill);
            $pdf->Ln();
            
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_lab_det as $spiro){
                $sql_spiro = $this->db->where('id', $spiro->id_lab_spiro_kat)->get('tbl_m_kategori_spiro')->row();
                
                $pdf->Cell(6, .5, $spiro->item_name, 'L', 0, 'L', $fill);
                $pdf->Cell(4, .5, general::format_angka2($spiro->item_value, 2), '', 0, 'C', $fill);
                $pdf->Cell(3, .5, general::format_angka2($spiro->item_value2, 2), '', 0, 'C', $fill);
                $pdf->Cell(3, .5, general::format_angka2($spiro->item_value3, 2), '', 0, 'C', $fill);
                $pdf->Cell(3, .5, general::format_angka2($sql_spiro->jml_lln, 2), 'R', 0, 'C', $fill);
                $pdf->Ln();                
            }
            
            $pdf->Cell(19, .5, '', 'T', 0, 'C', $fill);
            $pdf->Ln();
            
            # Keterangan Hasil Analisa Spirogram
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(19, .5, 'Catatan / Note', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(19, .5, 'angka pada kolom prediksi, % prediksi, dan LLN menggunakan reference Pneumobile Project Indonesia	( nilai fungsi paru normal orang indonesia ), jadi nilainya berbeda dengan yang tercantum pada  spirogram.', '0', 'L');
            $pdf->Ln();
            $pdf->MultiCell(19, .5, 'Berdasarkan hasil pemeriksaan spirometri di atas, fungsi paru '.$sql_pasien->nama_pgl.' adalah : ', '0', 'L');
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(19, .5, $sql_medc_lab->ket, '', 0, 'L', $fill);
            $pdf->Ln(1);
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(19, .5, 'Anjuran', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(19, .5, 'Kontrol ulang spirometri 1 tahun lagi dan bandingkan dengan hasil pemeriksaan saat ini.', '0', 'L');
            $pdf->Ln();
           
            // QR GENERATOR VALIDASI
            $folder_path = FCPATH.'/file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }

            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. ';
            $params['level'] = 'H';
            $params['size'] = 2;
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR DOKTER
            $qr_dokter = $folder_path.'/qr-dokter-'.strtolower($sql_dokter->id).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').']';
            
            \QRcode::png($params['data'], $qr_dokter, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_dokter;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4, 2, $getY, 2, 2);
            $pdf->Image($gambar5, 12, $getY, 2, 2);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_lab->tgl_masuk), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(4, .5, 'Validasi', '0', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, '', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(7.5, .5, 'Yang melakukan penilaian,', '0', 0, 'L', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : ''), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, $sql_dokter->nik, '', 0, 'L', $fill);
            $pdf->Ln();
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function pdf_medcheck_lab_ekg() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            $id_lab             = $this->input->get('id_lab');
            $status_ctk         = $this->input->get('status_ctk'); 
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_lab       = $this->db->where('id', general::dekrip($id_lab))->get('tbl_trans_medcheck_lab_ekg')->row();
            $sql_medc_lab_ekg   = $this->db->where('id_lab_ekg', general::dekrip($id_lab))->get('tbl_trans_medcheck_lab_ekg_file')->row();
            $sql_poli           = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', (!empty($sql_medc_lab->id_dokter) ? $sql_medc_lab->id_dokter : $sql_medc->id_dokter))->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $no_rm              = strtolower($sql_pasien->kode_dpn).$sql_pasien->kode;
            $folder             = realpath('./file/pasien/'.$no_rm);
            
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png'; // base_url('assets/theme/admin-lte-3/dist/img/logo-esensia-2.png');
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png'; // base_url('assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png');
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png'; // base_url('assets/theme/admin-lte-3/dist/img/logo-footer.png');
            $file_ekg           = $folder.'/'.$sql_medc_lab_ekg->file_name;
            $sess_print         = $this->session->userdata('lab_print');
            $no_periksa         = sprintf('%04d', $sql_medc_lab->id).'/'.$setting->kode_surat.'/'.date('m').'/'.date('Y');
            $fill               = FALSE;

            $judul              = "HASIL PEMBACAAN EKG";

            $this->load->library('MedLabPDF');
            $pdf = new MedLabPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1,0.35,1);
            $pdf->header = 0;
            $pdf->addPage('','',false);
            
            // Gambar Watermark Tengah
            if(file_exists($gambar2)) {
            $pdf->Image($gambar2,5,4,15,19);     
            }
            
            # Blok Judul
            $pdf->SetFont('Arial', 'B', '13');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'Bi', '13');
            $pdf->Cell(19, .5, '', 'B', 1, 'C');
            $pdf->Ln(0);
            
            # Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, 'No. Pemeriksaan', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_medc_lab->no_lab, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'No. RM', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'No. Sampel', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, (isset($sql_medc_lab_ekg->id) ? $sql_medc_lab_ekg->id : '-'), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Nama Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, general::bersih($sql_pasien->nama_pgl).' ('.$sql_pasien->jns_klm.')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Tanggal', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $this->tanggalan->tgl_indo5($sql_medc_lab->tgl_masuk), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'NIK', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'No. HP / Rmh', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_pasien->no_hp.(!empty($sql_pasien->no_telp) ? ' / '.$sql_pasien->no_telp : ''), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Tgl Lahir', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' / '.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Alamat', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, (!empty($sql_pasien->alamat) ? general::bersih($sql_pasien->alamat) : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
            $pdf->Cell(3, .5, 'Dokter pengirim', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, (!empty($sql_medc_lab->id_dokter) ? $this->ion_auth->user($sql_medc_lab->id_dokter)->row()->first_name : '-'), '0', 0, 'L', $fill);
            $pdf->Ln(2);
                  
            # Content Here
            // Add EKG image if exists
            if (!empty($file_ekg)) {
                $pdf->Ln(0.5);
                $image_path = $file_ekg;

                if (file_exists($image_path)) {
                    $ext = strtolower(pathinfo($image_path, PATHINFO_EXTENSION));
                    if ($ext == 'jpg' || $ext == 'jpeg' || $ext == 'png') {
                        list($width, $height) = getimagesize($image_path);
                        $aspect = $width / $height;

                        // Set max width to 18cm (page width minus margins)
                        $max_width  = 18;
                        $new_width  = min($width / 10, 9);
                        $new_height = $new_width / $aspect;

                        // Center the image
                        $x = (21 - $new_width) / 2;
                        try {
                            $pdf->Image($image_path, 1, 8, 19, 7);
                            //    $pdf->Ln($new_height + 0.5);
                        } catch (Exception $e) {
                            log_message('error', 'Failed to load image: ' . $image_path . ' - ' . $e->getMessage());
                        }
                    }
                } else {
                    log_message('error', 'Image file not found: ' . $image_path);
                }
            }
            
            
            $pdf->SetY(-17.5);
            $pdf->SetFont('Times', 'B', '10');
            $pdf->Cell(19, .5, 'Hasil Pembacaan :', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Times', '', '10');
            $pdf->Cell(2, .5, 'Irama', '', 0, '', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(7, .5, $sql_medc_lab->hsl_irama, '', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Interval P - R', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, $sql_medc_lab->hsl_int, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(2, .5, 'Frekwensi', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(7, .5, $sql_medc_lab->hsl_frek, '', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Kompleks Q R S', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, $sql_medc_lab->hsl_qrs, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(2, .5, 'Axis', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(7, .5, $sql_medc_lab->hsl_axis, '', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Segmen ST', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, $sql_medc_lab->hsl_st, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(2, .5, 'Posisi', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(7, .5, $sql_medc_lab->hsl_pos, '', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Gelombang T', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, $sql_medc_lab->hsl_gelt, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(2, .5, 'Zona Transisi', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(7, .5, $sql_medc_lab->hsl_zona, '', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Gelombang U', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, $sql_medc_lab->hsl_gelu, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(2, .5, 'Gelombang P', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(7, .5, $sql_medc_lab->hsl_gelp, '', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Lain-lain', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, $sql_medc_lab->hsl_lain, '', 0, 'L', $fill);
            $pdf->Ln();
            
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(19, .5, 'KESIMPULAN :', '', 0, 'L', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Ln();
            $pdf->MultiCell(19, .5, general::bersih($sql_medc_lab->kesimpulan), '', 'L');            
            # Content Here           
            
            // QR GENERATOR VALIDASI
            $pdf->SetY(-11);
            
            $folder_path = FCPATH.'/file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }

            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. ';
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR DOKTER
            $qr_dokter = $folder_path.'/qr-dokter-'.strtolower($sql_dokter->id).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').']';
            
            \QRcode::png($params['data'], $qr_dokter, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_dokter;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4,2,$getY,2,2);
            $pdf->Image($gambar5,12,$getY,2,2);
            
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_lab->tgl_masuk), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(4, .5, 'Validasi', '0', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, '', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(7.5, .5, 'Hasil Pembacaan :', '0', 0, 'L', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : ''), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, $sql_dokter->nik, '', 0, 'L', $fill);
            $pdf->Ln();
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '_ekg.pdf', $type);
            ob_end_flush();    
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function pdf_medcheck_lab_audio() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            $id_lab             = $this->input->get('id_lab');
            $status_ctk         = $this->input->get('status_ctk');

            
            // Get audiometri data with proper error handling
            $query = $this->db->select([
                'tbl_trans_medcheck_lab_audiometri.*',
                'tbl_trans_medcheck.pasien',
                'tbl_trans_medcheck.no_rm',
                'tbl_trans_medcheck.tgl_masuk as tgl_periksa',
                'tbl_m_pasien.kode_dpn',
                'tbl_m_pasien.kode',
                'tbl_m_pasien.nama_pgl',
                'tbl_m_pasien.tgl_lahir',
                'tbl_m_pasien.jns_klm',
                'tbl_m_pasien.alamat',
                'tbl_m_karyawan.nama_dpn',
                'tbl_m_karyawan.nama',
                'tbl_m_karyawan.nama_blk'
            ])
                ->from('tbl_trans_medcheck_lab_audiometri')
                ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id = tbl_trans_medcheck_lab_audiometri.id_medcheck')
                ->join('tbl_m_pasien', 'tbl_m_pasien.id = tbl_trans_medcheck.id_pasien')
                ->join('tbl_m_karyawan', 'tbl_m_karyawan.id_user = tbl_trans_medcheck_lab_audiometri.id_user', 'left')
                ->where('tbl_trans_medcheck_lab_audiometri.id', general::dekrip($id_medcheck))->get()->row();
            
            if (!$query) {
                $this->session->set_flashdata('medcheck_toast', 'toastr.error("Data audiometri tidak ditemukan");');
                redirect('medcheck');
                return;
            }
            
            $sql_medc           = $this->db->where('id', $query->id_medcheck)->get('tbl_trans_medcheck')->row();
            $sql_medc_lab       = $query;
            $sql_medc_lab_adm   = $this->db->where('id_medcheck', general::dekrip($id_lab))->get('tbl_trans_medcheck_lab_audiometri')->row();
            $sql_poli           = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc_lab->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $no_rm              = strtolower($sql_pasien->kode_dpn).$sql_pasien->kode;
            $folder             = realpath('./file/pasien/'.$no_rm);
            $file               = $folder.'/audiometri/'.$sql_medc_lab->nama_file;

            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            $sess_print         = $this->session->userdata('lab_print');
            $no_periksa         = sprintf('%04d', $sql_medc_lab->id).'/'.$setting->kode_surat.'/'.date('m').'/'.date('Y');

            $judul              = "HASIL PEMBACAAN AUDIOMETRI";
            $judul2             = "Audiogram Result";

            $this->load->library('MedLabPDF');
            $pdf = new MedLabPDF('P', 'cm', [21.5, 33]);
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1, 0.35, 1);
            $pdf->header = 0;
            $pdf->addPage('', '', false);
            
            // Gambar Watermark Tengah
            if(file_exists($gambar2)) {
                $pdf->Image($gambar2, 5, 4, 15, 19);     
            }
            
            # Blok Judul
            $pdf->SetFont('Arial', 'B', '13');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'Bi', '13');
            $pdf->Cell(19, .5, $judul2, 'B', 1, 'C');
            $pdf->Ln(0);
            
            # Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, 'No. Pemeriksaan', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $no_periksa, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'No. RM', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'No. Sampel', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, (isset($query->no_sample) ? $query->no_sample : '-'), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Nama Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, general::bersih($sql_pasien->nama_pgl).' ('.$sql_pasien->jns_klm.')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Tanggal', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $this->tanggalan->tgl_indo5($sql_medc_lab->tgl_masuk), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'NIK', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'No. HP / Rmh', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_pasien->no_hp.(!empty($sql_pasien->no_telp) ? ' / '.$sql_pasien->no_telp : ''), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Tgl Lahir', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' / '.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Alamat', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, (!empty($sql_pasien->alamat) ? general::bersih($sql_pasien->alamat) : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
            $pdf->Cell(3, .5, 'Dokter pengirim', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, (!empty($query->id_dokter_kirim) ? $this->ion_auth->user($query->id_dokter_kirim)->row()->first_name : '-'), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Dokter Pemeriksa', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, (!empty($query->id_dokter) ? $this->ion_auth->user($query->id_dokter)->row()->first_name : '-'), '0', 0, 'L', $fill);
            $pdf->Ln();
                  
            # Content Here
            // Add audiometri image if exists
            if (!empty($query->nama_file)) {
                $pdf->Ln(0.5);
                $image_path = $file;

                if (file_exists($image_path)) {
                    $ext = strtolower(pathinfo($image_path, PATHINFO_EXTENSION));
                    if ($ext == 'jpg' || $ext == 'jpeg' || $ext == 'png') {
                        list($width, $height) = getimagesize($image_path);
                        $aspect = $width / $height;

                        // Set max width to 18cm (page width minus margins)
                        $max_width  = 18;
                        $new_width  = min($width / 10, 9);
                        $new_height = $new_width / $aspect;

                        // Center the image
                        $x = (21 - $new_width) / 2;
                        try {
                            $pdf->Image($image_path, 1, 9, 19, 10);
                        } catch (Exception $e) {
                            log_message('error', 'Failed to load image: ' . $image_path . ' - ' . $e->getMessage());
                        }
                    }
                } else {
                    log_message('error', 'Image file not found: ' . $image_path);
                }
            }
            
            $pdf->SetY(-13.5);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(19, .5, 'HASIL PEMBACAAN :', 'TLR', 0, 'L', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Ln();
            $pdf->MultiCell(19, .5, $sql_medc_lab->hasil, 'LRB', 'L');            
            
            // QR GENERATOR VALIDASI
            $pdf->SetY(-11);
            
            // Create folder if not exists
            $folder_path = FCPATH.'/file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }

            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. ';
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR DOKTER
            $qr_dokter = $folder_path.'/qr-dokter-'.strtolower($sql_dokter->id).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').']';
            
            \QRcode::png($params['data'], $qr_dokter, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_dokter;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4, 2, $getY, 2, 2);
            $pdf->Image($gambar5, 12, $getY, 2, 2);
            
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_lab->tgl_masuk), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(4, .5, 'Validasi', '0', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, '', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(7.5, .5, 'Hasil Pembacaan :', '0', 0, 'L', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : ''), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, $sql_dokter->nik, '', 0, 'L', $fill);
            $pdf->Ln();
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '_audiometri.pdf', $type);
            ob_end_flush();            
        } else {
            $this->session->set_flashdata('medcheck_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function pdf_medcheck_pen_hrv() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            $id_pen             = $this->input->get('id_pen');
            $status_ctk         = $this->input->get('status_ctk');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_pen       = $this->db->where('id', general::dekrip($id_pen))->get('tbl_trans_medcheck_pen_hrv')->row();
            $sql_poli           = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', (!empty($sql_medc_pen->id_dokter) ? $sql_medc_pen->id_dokter : $sql_medc->id_dokter))->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $no_rm              = strtolower($sql_pasien->kode_dpn).$sql_pasien->kode;
            $no_periksa         = $sql_medc_pen->no_lab;

            // Create directory if it doesn't exist
            $dir = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($dir)) {
                mkdir($dir, 0777, true);
            }

            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            $sess_print         = $this->session->userdata('lab_print');
            
            $judul              = "HASIL PEMBACAAN HEART RATE VARIABILITY (HRV)";
            $judul2             = "HRV Result";

            $this->load->library('MedLabPDF');
            $pdf = new MedLabPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1,0.35,1);
            $pdf->header = 0;
            $pdf->addPage('','',false);
            
            // Gambar Watermark Tengah
            if(file_exists($gambar2)) {
            $pdf->Image($gambar2,5,4,15,19);     
            }
            
            # Blok Judul
            $pdf->SetFont('Arial', 'B', '13');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'Bi', '13');
            $pdf->Cell(19, .5, $judul2, 'B', 1, 'C');
            $pdf->Ln(0);
            
            # Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, 'No. Pemeriksaan', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $no_periksa, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'No. RM', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'No. Sampel', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, (isset($sql_medc_pen->id) ? $sql_medc_pen->id : '-'), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Nama Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, general::bersih($sql_pasien->nama_pgl).' ('.$sql_pasien->jns_klm.')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Tanggal', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $this->tanggalan->tgl_indo5($sql_medc_pen->tgl_masuk), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'NIK', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'No. HP / Rmh', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_pasien->no_hp.(!empty($penj->no_telp) ? ' / '.$penj->no_telp : ''), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Tgl Lahir', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' / '.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Alamat', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, (!empty($sql_pasien->alamat) ? general::bersih($sql_pasien->alamat) : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
            $pdf->Cell(3, .5, 'Dokter pengirim', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, (!empty($sql_medc->id_dokter) ? $this->ion_auth->user($sql_medc->id_dokter)->row()->first_name : '-'), '0', 0, 'L', $fill);
            $pdf->Ln(1);
            
            # Blok Lampiran hasil HRV
            $pdf->SetFont('Times', 'B', '12');
            $pdf->Cell(9, .5, 'Mean Heart Rate (bpm)', '', 0, 'L', $fill);
            $pdf->Cell(1, .5, '', '', 0, '', $fill);
            $pdf->Cell(9, .5, 'Ectopic Beat', '', 0, '', $fill);
            $pdf->Ln();
            $pdf->SetFont('Times', '', '13');
            $pdf->Cell(9, .75, $sql_medc_pen->hsl_mhr, '1', 0, 'L', $fill);
            $pdf->Cell(1, .75, '', '', 0, '', $fill);
            $pdf->Cell(9, .75, $sql_medc_pen->hsl_eb, '1', 0, '', $fill);
            $pdf->Ln(1);
            $pdf->SetFont('Times', 'B', '12');
            $pdf->Cell(9, .5, 'SDNN (ms)', '', 0, 'L', $fill);
            $pdf->Cell(1, .5, '', '', 0, '', $fill);
            $pdf->Cell(9, .5, 'Autonomic Nervous System', '', 0, '', $fill);
            $pdf->Ln();
            $pdf->SetFont('Times', '', '13');
            $pdf->Cell(9, .75, $sql_medc_pen->hsl_sdnn, '1', 0, 'L', $fill);
            $pdf->Cell(1, .75, '', '', 0, '', $fill);
            $pdf->Cell(9, .75, $sql_medc_pen->hsl_ans, '1', 0, '', $fill);
            $pdf->Ln(1);
            $pdf->SetFont('Times', 'B', '12');
            $pdf->Cell(9, .5, 'RMSSD (ms)', '', 0, 'L', $fill);
            $pdf->Cell(1, .5, '', '', 0, '', $fill);
            $pdf->Cell(9, .5, 'Pressure Index', '', 0, '', $fill);
            $pdf->Ln();
            $pdf->SetFont('Times', '', '13');
            $pdf->Cell(9, .75, $sql_medc_pen->hsl_rmssd, '1', 0, 'L', $fill);
            $pdf->Cell(1, .75, '', '', 0, '', $fill);
            $pdf->Cell(9, .75, $sql_medc_pen->hsl_pi, '1', 0, '', $fill);
            $pdf->Ln(1);
            $pdf->SetFont('Times', 'B', '12');
            $pdf->Cell(9, .5, 'PSI', '', 0, 'L', $fill);
            $pdf->Cell(1, .5, '', '', 0, '', $fill);
            $pdf->Cell(9, .5, 'Emotional State', '', 0, '', $fill);
            $pdf->Ln();
            $pdf->SetFont('Times', '', '13');
            $pdf->Cell(9, .75, $sql_medc_pen->hsl_psi, '1', 0, 'L', $fill);
            $pdf->Cell(1, .75, '', '', 0, '', $fill);
            $pdf->Cell(9, .75, $sql_medc_pen->hsl_es, '1', 0, '', $fill);
            $pdf->Ln(1);
            $pdf->SetFont('Times', 'B', '12');
            $pdf->Cell(9, .5, 'LH/HF', '', 0, 'L', $fill);
            $pdf->Cell(1, .5, '', '', 0, '', $fill);
            $pdf->Cell(9, .5, 'RRV', '', 0, '', $fill);
            $pdf->Ln();
            $pdf->SetFont('Times', '', '13');
            $pdf->Cell(9, .75, $sql_medc_pen->hsl_lhhf, '1', 0, 'L', $fill);
            $pdf->Cell(1, .75, '', '', 0, '', $fill);
            $pdf->Cell(9, .75, $sql_medc_pen->hsl_rrv, '1', 0, '', $fill);
            $pdf->Ln(1);
            $pdf->SetFont('Times', 'B', '12');
            $pdf->Cell(9, .5, 'Comment', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->MultiCell(19, .5, $sql_medc_pen->keterangan, '1', 'L');
            $pdf->Ln();
            $pdf->Ln();
            
           
            // QR GENERATOR VALIDASI
            $folder_path = FCPATH.'/file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }

            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. ';
            $params['data'] .= strtoupper($sql_pasien->nama_pgl).' ('.strtoupper($kode_pasien).')';
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR DOKTER
            $qr_dokter = $folder_path.'/qr-dokter-'.strtolower($sql_dokter->id).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').']';
            
            \QRcode::png($params['data'], $qr_dokter, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_dokter;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4,2,$getY,2,2);
            $pdf->Image($gambar5,12,$getY,2,2);
            
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_pen->tgl_masuk), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(4, .5, 'Validasi', '0', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, '', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(7.5, .5, 'Dokter Yang Memeriksa,', '0', 0, 'L', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : ''), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, $sql_dokter2->nik, '', 0, 'L', $fill);
            $pdf->Ln();
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function pdf_medcheck_rad() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
//            $id                 = $this->input->get('id');
            $id_medcheck        = $this->input->get('id');
            $id_rad             = $this->input->get('id_rad');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_item      = $this->db->where('id_medcheck', general::dekrip($id_medcheck))
                                           ->where('id_rad', general::dekrip($id_rad))
//                                           ->where('status', '5')
                                           ->where('status_hsl', '1')
                                           ->get('tbl_trans_medcheck_det')->result(); 
            $sql_medc_rad       = $this->db->where('id', general::dekrip($id_rad))->get('tbl_trans_medcheck_rad')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $sql_dokter_rad     = $this->db->where('id_user', $sql_medc_rad->id_dokter)->get('tbl_m_karyawan')->row();
            $sql_dokter_krm     = $this->db->where('id_user', $sql_medc_rad->id_dokter_kirim)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';

            // Create directory if it doesn't exist
            $dir = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($dir)) {
                mkdir($dir, 0777, true);
            }

            $judul  = "HASIL PEMERIKSAAN RADIOLOGI";
            $judul2 = "Radiology Result";
            
            $this->load->library('MedRadPDF');
            $pdf = new MedRadPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1,0.35,1);
            $pdf->addPage();
            
            // Gambar Watermark Tengah
            if(file_exists($gambar2)) {
            $pdf->Image($gambar2,5,4,17,19);
            }
            
            // Blok Judul
            $pdf->SetFont('Arial', 'B', '14');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'Bi', '14');
            $pdf->Cell(19, .5, $judul2, 0, 1, 'C');
            $pdf->Ln();
            
            // Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(5.5, .5, 'Nama / Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, strtoupper(general::bersih($sql_pasien->nama_pgl)).' ('.strtoupper($kode_pasien).')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Tgl Lahir / Date of Birth', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo($sql_pasien->tgl_lahir).' - '.$this->tanggalan->usia($sql_pasien->tgl_lahir).' ('.general::jns_klm($sql_pasien->jns_klm).')', '0', 0, 'L', $fill);
            $pdf->Ln();
//            $pdf->Cell(5.5, .5, 'Jenis Kelamin / Gender', '0', 0, 'L', $fill);
//            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
//            $pdf->Cell(8, .5, $this->tanggalan->usia($sql_pasien->tgl_lahir).' ('.general::jns_klm($sql_pasien->jns_klm).')', '0', 0, 'L', $fill);
//            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Alamat / Address', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, (!empty($sql_pasien->alamat) ? general::bersih($sql_pasien->alamat) : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Tgl Periksa / Check Date', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo5($sql_medc->tgl_masuk), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Tgl Selesai / End Date', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo5($sql_medc->tgl_modif), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Dokter Pengirim / Reffered', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, (!empty($sql_dokter_krm->nama) ? (!empty($sql_dokter_krm->nama_dpn) ? $sql_dokter_krm->nama_dpn.' ' : '').$sql_dokter_krm->nama.(!empty($sql_dokter_krm->nama_blk) ? ', '.$sql_dokter_krm->nama_blk.' ' : '') : $sql_medc->nama), '0', 0, 'L', $fill);
            $pdf->Ln(1);
                        
            $fill = FALSE;
            foreach ($sql_medc_item as $rad){
                $sql_rad_det = $this->db->where('id_medcheck_det', $rad->id)->where('id_rad', $rad->id_rad)->get('tbl_trans_medcheck_rad_det')->result();
                
                $pdf->SetFont('Arial', 'B', '11');
                $pdf->Cell(19, .5, $rad->item, '', 0, 'L', $fill);
                $pdf->Ln();
                
                foreach ($sql_rad_det as $rad_hasil){
                    $pdf->SetFont('Arial', 'Bi', '7.5');
                    $pdf->Cell(5, .5, (!empty($rad_hasil->item_name) ? ' - ' : '').strtoupper($rad_hasil->item_name), '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, (!empty($rad_hasil->item_name) ? ':' : ''), '', 0, 'C', $fill);
                    $pdf->SetFont('Arial', '', '7.5');
//                    $pdf->Ln();
//                    $pdf->Cell(13.5, .5, ucfirst($rad_hasil->item_value), '', 0, 'L', $fill);
                    $pdf->MultiCell(13.5, .5, $rad_hasil->item_value, '', 'J', false);
//                    $pdf->Ln();
                }
                
                $pdf->Ln();
            }
            
            $pdf->SetFont('Arial', 'B', '11');
            $pdf->Cell(19, .5, 'KESAN', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(19, .5, $sql_medc_rad->ket, '', 'J', false);
            $pdf->Ln();

            // QR GENERATOR VALIDASI
            $folder_path = FCPATH.'/file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }

            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. ';
            $params['level'] = 'H';
            $params['size'] = 2;
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR DOKTER
            $qr_dokter = $folder_path.'/qr-dokter-'.strtolower($sql_dokter_rad->id).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.(!empty($sql_dokter_rad->nama_dpn) ? $sql_dokter_rad->nama_dpn.' ' : '').$sql_dokter_rad->nama.(!empty($sql_dokter_rad->nama_blk) ? ', '.$sql_dokter_rad->nama_blk : '').']';
            
            \QRcode::png($params['data'], $qr_dokter, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_dokter;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4,2,$getY,2,2);
            $pdf->Image($gambar5,12.5,$getY,2,2);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, '.($sql_medc->tgl_keluar == '0000-00-00 00:00:00' ? $this->tanggalan->tgl_indo3(date('Y-m-d')) : $this->tanggalan->tgl_indo3($sql_medc->tgl_keluar)), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(4, .5, 'Validasi', '0', 0, 'C', $fill);
            $pdf->Cell(7.5, .5, '', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(7.5, .5, (!empty($ket) ? $ket : 'Dokter Spesialis Radiologi'), '0', 0, 'L', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(8, .5, (!empty($sql_dokter_rad->nama_dpn) ? $sql_dokter_rad->nama_dpn.' ' : '').$sql_dokter_rad->nama.(!empty($sql_dokter_rad->nama_blk) ? ', '.$sql_dokter_rad->nama_blk.' ' : ''), '0', 0, 'L', $fill);
            $pdf->Ln();
                    
            $pdf->SetFillColor(235, 232, 228);
            $pdf->SetTextColor(0);
            $pdf->SetFont('Arial', '', '10');
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');
            
            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function pdf_medcheck_resume() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            $id_rsm             = $this->input->get('id_resm');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_det       = $this->db->where('id_medcheck', $sql_medc->id)->where('status_pkt', '0')->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();
            $sql_medc_icd       = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_icd')->result();
            $sql_poli           = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $sql_icd            = $this->db->where('id', $sql_medc->id_icd)->get('tbl_m_icd')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';

            // Create directory if it doesn't exist
            $dir = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($dir)) {
                mkdir($dir, 0777, true);
            }

            $judul  = "RESUME MEDIS";
            $judul2 = "Medical Resume Result";
            
            $this->load->library('MedPDF');
            $pdf = new MedPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1,0.35,1);
            $pdf->header = 0;
            $pdf->addPage('','',false);
            
            // Gambar Watermark Tengah
            if (file_exists($gambar2)) {
            $pdf->Image($gambar2,5,4,15,19);
            }
            
            // Blok Judul
            $pdf->SetFont('Arial', 'B', '14');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'Bi', '14');
            $pdf->Cell(19, .5, $judul2, 0, 1, 'C');
            $pdf->Ln();
            
            // Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, 'ID Transaksi', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_medc->no_rm, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'No. RM', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'No. Invoice', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, (!empty($sql_medc->no_nota) ? $sql_medc->no_nota : '-'), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Nama Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, general::bersih($sql_pasien->nama_pgl).' ('.$sql_pasien->jns_klm.')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Tgl Periksa', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $this->tanggalan->tgl_indo5($sql_medc->tgl_masuk), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'NIK', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Poli', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_poli->lokasi, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Tgl Lahir', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' / '.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Alamat', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, (!empty($sql_pasien->alamat) ? general::bersih($sql_pasien->alamat) : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
            $pdf->Cell(3, .5, 'Dokter', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk.' ' : ''), '0', 'L');
            $pdf->Ln();
            
            # DATA MEDIS PASIEN
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'KELUHAN', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(15.5, .5, $sql_medc->keluhan, '0', 'L');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'TTV', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(2.5, .5, '- Suhu Tubuh', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(1, .5, $sql_medc->ttv_st, '', 0, 'R', $fill);
            $pdf->Cell(1.5, .5, 'C', '', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, '- Berat Badan', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(1, .5, $sql_medc->ttv_bb, '', 0, 'R', $fill);
            $pdf->Cell(1.5, .5, 'Kg', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3.5, .5, '', '', 0, 'L', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(2.5, .5, '- Tinggi Badan', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(1, .5, $sql_medc->ttv_tb, '', 0, 'R', $fill);
            $pdf->Cell(1.5, .5, 'Cm', '', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, '- Nadi', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(1, .5, $sql_medc->ttv_nadi, '', 0, 'R', $fill);
            $pdf->Cell(1.5, .5, '/ Menit', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3.5, .5, '', '', 0, 'L', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(2.5, .5, '- Sistole', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(1, .5, $sql_medc->ttv_sistole, '', 0, 'R', $fill);
            $pdf->Cell(1.5, .5, 'mmHg', '', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, '- Diastole', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(1, .5, $sql_medc->ttv_diastole, '', 0, 'R', $fill);
            $pdf->Cell(1.5, .5, 'mmHg', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3.5, .5, '', '', 0, 'L', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(2.5, .5, '- Laju Nafas', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(1, .5, $sql_medc->ttv_laju, '', 0, 'R', $fill);
            $pdf->Cell(1.5, .5, '/ Menit', '', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, '- Saturasi', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(1, .5, $sql_medc->ttv_saturasi, '', 0, 'R', $fill);
            $pdf->Cell(1.5, .5, '%', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3.5, .5, '', '', 0, 'L', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(2.5, .5, '- Skala Nyeri', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(1, .5, $sql_medc->ttv_skala, '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'ANAMNESA', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(15.5, .5, $sql_medc->anamnesa, '0', 'L');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'DIAGNOSA', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(15.5, .5, $sql_medc->diagnosa, '0', 'L');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'DIAGNOSA ICD 10', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Ln();
            
            foreach ($sql_medc_icd as $icd){
                $pdf->Cell(.5, .5, '', '0', 0, 'L', $fill);
                $pdf->Cell(.5, .5, '-', '0', 0, 'L', $fill);
                $pdf->Cell(15, .5, $icd->icd, '0', 0, 'L', $fill);
                
                if(!empty($icd->diagnosa_en)){
                    $pdf->Ln();
                    $pdf->SetFont('Arial', 'i', '9');
                    $pdf->Cell(.5, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, '', '0', 0, 'L', $fill);
                    $pdf->Cell(15, .5, $icd->diagnosa_en, '0', 0, 'L', $fill);                    
                }
                $pdf->Ln();
            }
                
//            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'PEMERIKSAAN', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(15.5, .5, $sql_medc->pemeriksaan, '0', 'L');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'PROGRAM', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(15.5, .5, $sql_medc->program, '0', 'L');
            $pdf->Ln();
            
            # DATA RESEP
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(1, .5, 'No.', 'LT', 0, 'L', $fill);
            $pdf->Cell(3, .5, 'Tgl', 'T', 0, 'L', $fill);
            $pdf->Cell(8.5, .5, 'Item', 'T', 0, 'L', $fill);
            $pdf->Cell(6.5, .5, 'Keterangan', 'TR', 0, 'L', $fill);
//            $pdf->Cell(2, .5, 'Harga', 'T', 0, 'R', $fill);
//            $pdf->Cell(2, .5, 'Subtotal', 'TR', 0, 'R', $fill);
            $pdf->Ln();
            
            $fill = FALSE;
            $no   = 1;
            foreach ($sql_medc_det as $det){
                $sql_kat = $this->db->where('id', $det->id_item_kat)->get('tbl_m_kategori')->row();
                $sql_det = $this->db->where('id_medcheck', $det->id_medcheck)->where('id_item_kat', $det->id_item_kat)->where('status_pkt', '0')->get('tbl_trans_medcheck_det')->result();
                
                $pdf->SetFont('Arial', 'B', '9');
                $pdf->Cell(19, .5, $sql_kat->keterangan . ' (' . $sql_kat->kategori . ')', 'LTR', 0, 'L', $fill);
                $pdf->Ln();
                
                $pdf->SetFont('Arial', '', '9');
                foreach ($sql_det as $medc){
                    
                    $pdf->Cell(1, .5, $no.'.', 'L', 0, 'C', $fill);
                    $pdf->Cell(3, .5, $this->tanggalan->tgl_indo5($medc->tgl_simpan), '', 0, 'L', $fill);
                    $pdf->Cell(8.5, .5, $medc->item, '', 0, 'L', $fill);
                    $pdf->Cell(6.5, .5, (!empty($medc->keterangan) ? $medc->keterangan : ''), 'R', 0, 'L', $fill);
//                    $pdf->Cell(2, .5, general::format_angka($medc->harga), '', 0, 'R', $fill);
//                    $pdf->Cell(2, .5, general::format_angka($medc->subtotal), 'R', 0, 'R', $fill);
                    $pdf->Ln();
                    
                    # Tampilkan ini jika ada resep
                    if (!empty($medc->resep)) {
                        $pdf->SetFont('Arial', 'i', '8');
                        foreach (json_decode($medc->resep) as $racikan) {
                            $pdf->Cell(4, .5, '', 'L', 0, 'C', $fill);
                            $pdf->Cell(15, .5, ' - '.$racikan->item, 'R', 0, 'L', $fill);
//                            $pdf->Cell(2, .5, general::format_angka($racikan->harga), '', 0, 'R', $fill);
//                            $pdf->Cell(2, .5, '', 'R', 0, 'R', $fill);
                            $pdf->Ln();
                        }
                    }
                    
                    # Tampilkan ini jika ada dosis
                    if (!empty($medc->dosis) OR !empty($medc->dosis_ket)) {
                        $pdf->SetFont('Arial', 'Bi', '8');
                        $pdf->Cell(4, .5, 'Dosis : ', 'L', 0, 'R', $fill);
                        $pdf->SetFont('Arial', 'i', '8');
                        $pdf->Cell(15, .5, $medc->dosis.(!empty($medc->dosis_ket) ? ' ('.$medc->dosis_ket.')' : ''), 'R', 0, 'L', $fill);
                        $pdf->Ln();
                    }
                    
                    $no++;
                }
            }
            $pdf->Cell(19, .5, '', 'T', 0, 'L', $fill);

            // Create folder if it doesn't exist
            $folder_path = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }

            // QR GENERATOR VALIDASI
            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. '.strtoupper($sql_pasien->nama_pgl).' ('.strtoupper($kode_pasien).')';
            $params['level'] = 'H';
            $params['size'] = 2;
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR DOKTER
            $qr_dokter = $folder_path.'/qr-dokter-'.strtolower($sql_dokter->id).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').']';
            
            \QRcode::png($params['data'], $qr_dokter, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_dokter;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4,2,$getY,2,2);
            $pdf->Image($gambar5,13.5,$getY,2,2);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(8.5, .5, '', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(4, .5, 'Validasi', '0', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, '', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(8.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_rsm->tgl_masuk), '0', 0, 'C', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(8.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk.' ' : ''), '0', 0, 'C', $fill);
            $pdf->Ln();
                    
            $pdf->SetFillColor(235, 232, 228);
            $pdf->SetTextColor(0);
            $pdf->SetFont('Arial', '', '10');
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');
            
            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
        
    public function pdf_medcheck_resume_lab() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
//            $id                 = $this->input->get('id');
            $id_medcheck        = $this->input->get('id');
            $id_rsm             = $this->input->get('id_resm');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_rsm       = $this->db->where('id', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume')->row(); 
            $sql_medc_rsm_hsl   = $this->db->where('id_resume', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume_det')->result(); 
            $sql_poli           = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc_rsm->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            $foto_file          = realpath($sql_pasien->file_name);
            $ck_foto            = (!empty($sql_pasien->file_name) && file_exists(FCPATH.'/'.$sql_pasien->file_name) ? FCPATH.'/'.$sql_pasien->file_name : FCPATH.'/assets/theme/admin-lte-3/dist/img/'.($sql_pasien->jns_klm == 'L' ? 'avatar7-men' : 'avatar7-women').'.png');
            $foto_pasien        = $ck_foto;

            // Create directory if it doesn't exist
            $dir = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($dir)) {
                mkdir($dir, 0777, true);
            }
                    
            $judul  = "RESUME MEDICAL CHECKUP";
            $judul2 = "Resume Medical Checkup Result";
            
            $this->load->library('MedLabPDF');
            $pdf = new MedLabPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1,0.35,1);
            $pdf->header = 0;
            $pdf->addPage('','',false);
            
            // Gambar Watermark Tengah
            if (file_exists($gambar2)) {
                $pdf->Image($gambar2,5,4,15,19);
            }
            
            // Blok Judul
            $pdf->SetFont('Arial', 'B', '14');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'Bi', '14');
            $pdf->Cell(19, .5, $judul2, 0, 1, 'C');
            $pdf->Ln();
            
            # Blok ID PASIEN
            if (file_exists($foto_pasien)) {
                $pdf->Image($foto_pasien,1,4,2.5,3);
            }
            
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(2.5, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'No. RM', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(7, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '', 0, 'L', $fill);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'No. Pemeriksaan', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, $sql_medc_rsm->no_surat, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(2.5, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Nama Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(7, .5, general::bersih($sql_pasien->nama_pgl).' ('.$sql_pasien->jns_klm.')', '', 0, 'L', $fill);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'No. Sampel', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, $sql_medc_rsm->no_sample, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(2.5, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'NIK', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(7, .5, $sql_pasien->nik, '', 0, 'L', $fill);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'Tgl Masuk', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, $this->tanggalan->tgl_indo5($sql_medc->tgl_masuk), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(2.5, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Tanggal Lahir', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(7, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' ('.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir).')', '', 0, 'L', $fill);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'Poli', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, $sql_poli->lokasi, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(2.5, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Alamat', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(13.5, .5, (!empty($sql_pasien->alamat) ? general::bersih($sql_pasien->alamat) : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
            $pdf->Cell(2.5, .5, '', '0', 0, 'L', $fill);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(2.5, .5, 'Dokter Pengirim', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(13.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk.' ' : ''), '0', 0, 'L', $fill);
            $pdf->Ln(1);
                        
            $fill = FALSE;
            foreach ($sql_medc_rsm_hsl as $rsm){
                $pdf->SetFont('Arial', 'B', '10');
                $pdf->Cell(5.5, .5, $rsm->param, '', 0, 'L', $fill);
                $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                $pdf->SetFont('Arial', '', '10');
                $pdf->MultiCell(13, .5, $rsm->param_nilai, '0', 'L');
//                $pdf->Cell(13, .5, $rsm->param_nilai, '', 0, 'L', $fill);
//                $pdf->Ln();
            }
            
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '11');
            $pdf->Cell(19, .5, 'SARAN', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(19, .5, $sql_medc_rsm->saran, '', 'J', false);
            $pdf->Ln();            
            $pdf->SetFont('Arial', 'B', '11');
            $pdf->Cell(19, .5, 'KESIMPULAN', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(19, .5, $sql_medc_rsm->kesimpulan, '', 'J', false);
            $pdf->Ln();

            // Create folder if it doesn't exist
            $folder_path = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }

            // QR GENERATOR VALIDASI
            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. '.strtoupper($sql_pasien->nama_pgl).' ('.strtoupper($kode_pasien).')';
            $params['level'] = 'H';
            $params['size'] = 2;
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR DOKTER
            $qr_dokter = $folder_path.'/qr-dokter-'.strtolower($sql_dokter->id).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').']';
            
            \QRcode::png($params['data'], $qr_dokter, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_dokter;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4,2,$getY,2,2);
            $pdf->Image($gambar5,13.5,$getY,2,2);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(8.5, .5, '', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(4, .5, 'Validasi', '0', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, '', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(8.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_rsm->tgl_masuk), '0', 0, 'C', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '0', 0, 'L', $fill);
            $pdf->Cell(8.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk.' ' : ''), '0', 0, 'C', $fill);
            $pdf->Ln();
                    
            $pdf->SetFillColor(235, 232, 228);
            $pdf->SetTextColor(0);
            $pdf->SetFont('Arial', '', '10');
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');
            
            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }        
        
    public function pdf_medcheck_resume_rnp() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            $id_rsm             = $this->input->get('id_resm');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_rsm       = $this->db->where('id', general::dekrip($id_rsm))->get('tbl_trans_medcheck_resume')->row(); 
            $sql_medc_rsm_hsl   = $this->db->where('id_resume', general::dekrip($id_rsm))->where('status_rnp', '1')->get('tbl_trans_medcheck_resume_det')->result(); 
            $sql_medc_rsm_trp   = $this->db->where('id_resume', general::dekrip($id_rsm))->where('status_trp', '1')->get('tbl_trans_medcheck_resume_det')->result(); 
            $sql_medc_res       = $this->db->where('id_medcheck', $sql_medc->id)->where('status_plg', '1')->get('tbl_trans_medcheck_resep')->row(); 
            $sql_medc_res_det   = $this->db->where('id_resep', $sql_medc_res->id)->get('tbl_trans_medcheck_resep_det')->result();
            $sql_medc_icd       = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_icd')->result();
            $sql_poli           = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc_rsm->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';

            // Create directory if it doesn't exist
            $dir = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($dir)) {
                mkdir($dir, 0777, true);
            }

            $judul  = "RESUME MEDIS RAWAT INAP";
            $judul2 = "Inpatient Medical Resume";
            
            $this->load->library('MedPDF');
            $pdf = new MedPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 6.5);
            $pdf->header = 0;
            $pdf->addPage('','',false);
            
            // Gambar Watermark Tengah
            if (file_exists($gambar2)) {
                $pdf->Image($gambar2,5,4,15,19);
            }
            
            // Blok Judul
            $pdf->SetFont('Arial', 'B', '11');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln(0);
            $pdf->SetFont('Arial', 'Bi', '10');
            $pdf->Cell(19, .5, $judul2, 0, 1, 'C');
            $pdf->Ln();
            
            // Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, 'No. Pemeriksaan', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_medc_rsm->no_surat, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'No. RM', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Tgl Masuk', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $this->tanggalan->tgl_indo5($sql_medc->tgl_masuk), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Nama Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->nama_pgl.' ('.$sql_pasien->jns_klm.')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'NIK', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Tgl Lahir', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' / '.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Poli', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_poli->lokasi, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Alamat', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, (!empty($sql_pasien->alamat) ? $sql_pasien->alamat : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
            $pdf->Ln();
            
            $fill = FALSE;
            foreach ($sql_medc_rsm_hsl as $rsm){
                $pdf->SetFont('Arial', 'B', '8');
                $pdf->Cell(4, .5, $rsm->param, '', 0, 'L', $fill);
                $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                $pdf->SetFont('Arial', '', '8');
                $pdf->MultiCell(14.5, .5, iconv('UTF-8', 'windows-1252', html_entity_decode($rsm->param_nilai)), '0', 'J');
            }
            
            $n = 1;
            foreach ($sql_medc_icd as $icd){
                if($n == 1){
                    $pdf->SetFont('Arial', 'B', '8');
                    $pdf->Cell(4, .5, 'ICD 10', '', 0, 'L', $fill);
                    $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                }else{
                    $pdf->SetFont('Arial', '', '8');
                    $pdf->Cell(4.5, .5, '', '', 0, 'L', $fill);
                }
                $pdf->SetFont('Arial', '', '8');
                $pdf->Cell(14.5, .5, '- '.$icd->diagnosa_en, '', 0, 'L', $fill);
                $pdf->Ln();
                
                $n++;
            }
            $pdf->Ln();
            
            $pdf->SetFont('Arial', 'B', '8');
            $pdf->Cell(19, .5, 'TERAPI PULANG', 'TB', 0, 'C', $fill);
            $pdf->Ln(); 
            
            $pdf->Cell(1, .5, 'No.', 'B', 0, 'C', $fill);
            $pdf->Cell(6, .5, 'Nama Obat', 'B', 0, 'L', $fill);
            $pdf->Cell(12, .5, 'Catatan', 'B', 0, 'L', $fill);
            $pdf->Ln();    
            
            $fill = FALSE;
            $no_trp = 1;
            foreach ($sql_medc_res_det as $trp){
                $pdf->SetFont('Arial', '', '8');
                $pdf->Cell(1, .5, $no_trp, '', 0, 'C', $fill);
                $pdf->Cell(6, .5, ucwords($trp->item), '', 0, 'L', $fill);
                $pdf->MultiCell(12, .5, $trp->dosis.' '.(!empty($trp->dosis_ket) ? '('.$trp->dosis_ket.')' : '').(!empty($trp->keterangan) ? ' / '.$trp->keterangan : ''), '', 'L', $fill,$pdf->GetX(),15);
                
                $no_trp++;
            }
            
            $pdf->Cell(19, .5, '', 'T', 0, 'L', $fill);
            // Create folder if it doesn't exist
            $folder_path = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }

            // QR GENERATOR VALIDASI
            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. '.strtoupper($sql_pasien->nama_pgl).' ('.strtoupper($kode_pasien).')';
            $params['level'] = 'H';
            $params['size'] = 2;
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR DOKTER
            $qr_dokter = $folder_path.'/qr-dokter-'.strtolower($sql_dokter->id).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.(!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : '').']';
            
            \QRcode::png($params['data'], $qr_dokter, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_dokter;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4,2,$getY,2,2);
            $pdf->Image($gambar5,13.5,$getY,2,2);
            
            $pdf->SetFont('Arial', '', '8');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(8.5, .5, '', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '8');
            $pdf->Cell(4, .5, 'Petugas', '0', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, '', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '8');
            $pdf->Cell(8.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_rsm->tgl_masuk), '0', 0, 'C', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '8');
            $pdf->Cell(10.5, .5, $this->ion_auth->user($sql_medc_rsm->id_user)->row()->first_name, '0', 0, 'L', $fill);
            $pdf->Cell(8.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk.' ' : ''), '0', 0, 'C', $fill);
            $pdf->Ln();
                    
            $pdf->SetFillColor(235, 232, 228);
            $pdf->SetTextColor(0);
            $pdf->SetFont('Arial', '', '8');
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');
            
            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
        
    public function pdf_medcheck_ass_rnp() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            $id_rsm             = $this->input->get('id_resm');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_ass       = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_ass_ranap')->row(); 
            $sql_medc_ass_obt   = $this->db->where('id_ass_ranap', $sql_medc_ass->id)->get('tbl_trans_medcheck_ass_ranap_obat')->result(); 
            $sql_medc_icd       = $this->db->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_icd')->result();
            $sql_poli           = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/skala-nyeri.png';

            // Create directory if it doesn't exist
            $dir = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($dir)) {
                mkdir($dir, 0777, true);
            }

            $judul  = "ASSESMENT RAWAT INAP";
            $judul2 = "Inpatient Medical Resume";
            
            $this->load->library('MedPDF');
            $pdf = new MedPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 6.5);
            $pdf->header = 0;
            $pdf->addPage('','',false);
            
            // Gambar Watermark Tengah
            if (file_exists($gambar2)) {
                $pdf->Image($gambar2,5,4,15,19);
            }
            
            // Blok Judul
            $pdf->SetFont('Arial', 'B', '11');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln(0);
            
            // Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, 'No. Pemeriksaan', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_medc->no_surat, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'No. RM', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Tgl Masuk', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $this->tanggalan->tgl_indo5($sql_medc->tgl_masuk), '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Nama Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->nama_pgl.' ('.$sql_pasien->jns_klm.')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'NIK', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
            $pdf->Cell(2.5, .5, 'Tgl Lahir', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' / '.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Poli', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(4.5, .5, $sql_poli->lokasi, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Alamat', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(15.5, .5, (!empty($sql_pasien->alamat) ? $sql_pasien->alamat : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
            $pdf->Ln();
            $pdf->Cell(19, .5, '', 'T', 0, 'C', $fill);
            $pdf->Ln();
            
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(19, .5, '1.  KELUHAN UTAMA', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
            $pdf->MultiCell(18.5, .5, $sql_medc_ass->keluhan, '', 'J');
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(19, .5, '2.  RIWAYAT PENYAKIT', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(18.5, .5, 'a.  Riwayat penyakit lalu :', '', 0, 'J', $fill);
            $pdf->Ln();            
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(1, .5, '', '', 0, 'L', $fill);
            $pdf->MultiCell(18, .5, $sql_medc_ass->riwayat_skg, '', 'J');
            $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(18.5, .5, 'b.  Riwayat Minum Obat :', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '9');
            
            $fill = FALSE;
            foreach ($sql_medc_ass_obt as $obt){
                $pdf->Cell(1, .5, '', '', 0, 'C', $fill);
                $pdf->Cell(18, .5, '- '.$obt->param, '', 0, 'L', $fill);
                $pdf->Ln();
            }
            
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(19, .5, '3.  PEMERIKSAAN FISIK', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3.5, .5, 'Suhu Tubuh', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(2, .5, $sql_medc->ttv_st.' C', '', 0, 'L', $fill);
            $pdf->Cell(3.5, .5, 'Berat Badan', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(2, .5, $sql_medc->ttv_bb.' kg', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3.5, .5, 'Tinggi Badan', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(2, .5, $sql_medc->ttv_tb.' Cm', '', 0, 'L', $fill);
            $pdf->Cell(3.5, .5, 'Tekanan Darah', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(2, .5, $sql_medc->ttv_sistole.'/'.$sql_medc->ttv_diastole.' mmHg', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3.5, .5, 'Laju Nafas', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(2, .5, $sql_medc->ttv_laju.' / Menit', '', 0, 'L', $fill);
            $pdf->Cell(3.5, .5, 'Saturasi', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->Cell(2, .5, $sql_medc->ttv_saturasi.' %', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(19, .5, '', '', 0, 'L', $fill);
            $pdf->Ln();
            
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(19, .5, '4.  SKALA NYERI', '', 0, 'L', $fill);
            $pdf->Ln(2.75);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(1, .5, '', '', 0, 'L', $fill);
            
            for($a = 0; $a <= 10; $a++){
                $pdf->Cell(1, .5, '', ($sql_medc_ass->skala_nyeri == $a ? '1' : ''), 0, 'L', $fill);
            }
            
            # Skala Nyeri
            if (file_exists($gambar3)) {
                $pdf->Image($gambar3,1.5,16.75,11.75,3);
            }
            $pdf->Ln(1);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(19, .5, '5.  ASUHAN KEPERAWATAN', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(9.5, .5, 'Masalah Keperawatan', '', 0, 'L', $fill);
            $pdf->Cell(9.5, .5, 'Tujuan Terukur', '', 0, 'L', $fill);
            $pdf->Ln();
            
            $pdf->SetFont('Arial', '', '9');
            $x = $pdf->GetX() + 9.5;
            $y = $pdf->GetY();            
            
            $pdf->MultiCell(9.5, .5, $sql_medc_ass->askep_masalah, '', 'J');
            $pdf->SetXY($x, $y); // Mengatur posisi X dan Y baru
            $pdf->MultiCell(9.5, .5, $sql_medc_ass->askep_tujuan, '', 'J');
            
            $pdf->SetFillColor(235, 232, 228);
            $pdf->SetTextColor(0);
            $pdf->SetFont('Arial', '', '8');
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');
            
            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    

    
    public function pdf_medcheck_ass_fisik() {
        if (akses::aksesLogin() == TRUE) {
            $setting             = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck         = $this->input->get('id');
            $id_lab              = $this->input->get('id_ass');
            $status_ctk          = $this->input->get('status_ctk');
 
            $sql_medc            = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_srt        = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck_surat')->row(); 
            $sql_medc_lab        = $this->db->where('id', general::dekrip($id_lab))->get('tbl_trans_medcheck_ass_fisik')->row();
            
            # Blok Assesment Fisik
            $sql_medc_ass1L      = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('status_posisi', 'L')->where('tipe', '1')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass1R      = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('status_posisi', 'R')->where('tipe', '1')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass2       = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '2')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass3L      = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('status_posisi', 'L')->where('tipe', '3')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass3R      = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('status_posisi', 'R')->where('tipe', '3')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass4       = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '4')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass5L      = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '5')->where('status_posisi', 'L')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass5R      = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '5')->where('status_posisi', 'R')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass6       = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '6')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass7       = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '7')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass8       = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '8')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass9       = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '9')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass10      = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '10')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass11      = $this->db->limit(5)->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '11')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass12      = $this->db->limit(5)->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '12')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass13A     = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('status_posisi', 'L')->where('tipe', '13')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass13B     = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('status_posisi', 'R')->where('tipe', '13')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass14L     = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('status_posisi', 'L')->where('tipe', '14')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass14R     = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('status_posisi', 'R')->where('tipe', '14')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass15      = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '15')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass16      = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '16')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            $sql_medc_ass17      = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('tipe', '17')->get('tbl_trans_medcheck_ass_fisik_hsl')->result();
            # --- END --
            
            $sql_poli            = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row();
            $sql_pasien          = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan       = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter          = $this->db->where('id_user', (!empty($sql_medc_lab->id_dokter) ? $sql_medc_lab->id_dokter : $sql_medc->id_dokter))->get('tbl_m_karyawan')->row();
            $sql_dokter2         = $this->db->where('id_user', '221')->get('tbl_m_karyawan')->row();
            $kode_pasien         = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1             = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2             = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3             = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            $sess_print          = $this->session->userdata('lab_print');

            // Create directory if it doesn't exist
            $dir = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($dir)) {
                mkdir($dir, 0777, true);
            }
            
            $judul              = "DAFTAR RIWAYAT KESEHATAN";
            $judul2             = "Laboratory Result";

            $this->load->library('MedLabPDF');
            $pdf = new MedLabPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 5.5);
            $pdf->SetMargins(1,0.35,1);
            $pdf->header = 0;
            $pdf->addPage('','',false);
            
            # Gambar Watermark Tengah
            if (file_exists($gambar2)) {
                $pdf->Image($gambar2,5,4,15,19);  
            }
            
            # Blok Judul
            $pdf->SetFont('Arial', 'B', '13');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln();
            
            # Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, 'No. Pemeriksaan', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(4.5, .5, $sql_medc_lab->no_lab, '0', 0, 'L', $fill ?? false);
            $pdf->Cell(2.5, .5, 'No. RM', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(8, .5, $sql_pasien->kode_dpn.$sql_pasien->kode, '0', 0, 'L', $fill ?? false);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'No. Sampel', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(4.5, .5, $sql_medc_lab->no_sample, '0', 0, 'L', $fill ?? false);
            $pdf->Cell(2.5, .5, 'Nama', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(8, .5, general::bersih($sql_pasien->nama_pgl).' ('.$sql_pasien->jns_klm.')', '0', 0, 'L', $fill ?? false);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Tgl Periksa', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(4.5, .5, $this->tanggalan->tgl_indo5($sql_medc_lab->tgl_masuk), '0', 0, 'L', $fill ?? false);
            $pdf->Cell(2.5, .5, 'NIK', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(8, .5, $sql_pasien->nik, '0', 0, 'L', $fill ?? false);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Poli', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(4.5, .5, $sql_poli->lokasi, '0', 0, 'L', $fill ?? false);
            $pdf->Cell(2.5, .5, 'Tgl Lahir', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir).' / '.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir), '0', 0, 'L', $fill ?? false);
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Alamat', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->MultiCell(15.5, .5, (!empty($sql_pasien->alamat) ? general::bersih($sql_pasien->alamat) : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
            $pdf->Cell(3, .5, 'No. HP / Rmh', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->MultiCell(15.5, .5, $sql_pasien->no_hp.(!empty($penj->no_telp ?? null) ? ' / '.$penj->no_telp : ''), '0', 'L');
            $pdf->Cell(3, .5, 'Dokter Pengirim', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->MultiCell(15.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : ''), '0', 'L');
            $pdf->Ln();
            
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(19, .5, 'Anamnesa', '0', 0, 'L', $fill ?? false);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'i', '9');
            $pdf->Cell(19, .5, 'Riwayat Kesehatan Pribadi ( berikan tanda V pada pilihan anda )', '0', 0, 'L', $fill ?? false);
            $pdf->Ln();
            
            # Blok Grup 1
            $fill = false;
            
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(7, .5, 'Penyakit / Keluhan', '1', 0, 'C', $fill);
            $pdf->Cell(1, .5, 'Ya', '1', 0, 'C', $fill);
            $pdf->Cell(1, .5, 'Tidak', '1', 0, 'C', $fill);
            $pdf->Cell(1, .5, '', '0', 0, 'C', $fill);
            $pdf->Cell(7, .5, 'Penyakit / Keluhan', '1', 0, 'C', $fill);
            $pdf->Cell(1, .5, 'Ya', '1', 0, 'C', $fill);
            $pdf->Cell(1, .5, 'Tidak', '1', 0, 'C', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '9');
            
            foreach ($sql_medc_ass1L as $ass1L) {
                $pdf->Cell(7, .5, $ass1L->item_name, 'BL', 0, 'L', $fill);
                $pdf->Cell(1, .5, ($ass1L->item_value == '1' ? 'V' : ''), 'BL', 0, 'C', $fill);
                $pdf->Cell(1, .5, ($ass1L->item_value == '0' ? 'V' : ''), 'BLR', 0, 'C', $fill);
                $pdf->Cell(1, .5, '', '0', 0, 'C', $fill);
                $pdf->Ln();
            }
            
            $setY = 9.1;
            foreach ($sql_medc_ass1R as $ass1R) {
                $pdf->SetXY(11,$setY);
                $pdf->Cell(7, .5, $ass1R->item_name, 'BL', 0, 'L', $fill);
                $pdf->Cell(1, .5, ($ass1R->item_value == '1' ? 'V' : ''), 'BL', 0, 'C', $fill);
                $pdf->Cell(1, .5, ($ass1R->item_value == '0' ? 'V' : ''), 'BLR', 0, 'C', $fill);
                $pdf->Cell(1, .5, '', '0', 0, 'C', $fill);
                $pdf->Ln();
                
                $setY+=0.5;
            }

            $pdf->Cell(9, .5, '', 'T', 0, 'C', $fill);
            $pdf->Cell(1, .5, '', '', 0, 'C', $fill);
            $pdf->Cell(9, .5, '', 'T', 0, 'C', $fill);
            $pdf->Ln();
            
            # Blok Grup 15 Kebiasaan sehari2, harusnya nomer 2 tapi ketinggalan sehingga di taruh sini            
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass15 as $ass15){                
                $pdf->Cell(7, .5, $ass15->item_name, '', 0, 'L', $fill);
                $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(11.5, .5, $ass15->item_value2, '', 0, 'L', $fill);
                $pdf->Ln();
            }
            $pdf->Ln();
            # ----------------------------------------------------------------------------------------
            
            # Blok Grup 16 Kebiasaan merokok, harusnya nomer 3 tapi ketinggalan sehingga di taruh sini
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(7, .5, 'Kebiasaan sehari-hari', '1', 0, 'L', $fill);
            $pdf->Cell(1, .5, 'Ya', 'TLB', 0, 'C', $fill);
            $pdf->Cell(1, .5, 'Tidak', 'TLB', 0, 'C', $fill);
            $pdf->Cell(10, .5, 'Keterangan', '1', 0, 'L', $fill);
            $pdf->Ln();
            
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass16 as $ass16){                
                $pdf->Cell(7, .5, $ass16->item_name, 'BLR', 0, 'L', $fill);
                $pdf->Cell(1, .5, (!empty($ass16->item_value) ? 'V' : ''), 'BL', 0, 'C', $fill);
                $pdf->Cell(1, .5, (empty($ass16->item_value2) ? 'V' : ''), 'BL', 0, 'C', $fill);
                $pdf->Cell(10, .5, $ass16->item_value2, 'BLR', 0, 'L', $fill);
                $pdf->Ln();
            }
            $pdf->Cell(19, .5, '', 'T', 0, 'C', $fill);
            $pdf->Ln();
            # --------------
            
            # ISI BLOK 2
            $pdf->SetFont('Arial', 'i', '9');
            $pdf->Cell(19, .5, 'Riwayat Kesehatan Orang Tua ( berikan tanda v pada pilihan anda )', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(7, .5, 'Penyakit / Keluhan', '1', 0, 'L', $fill);
            $pdf->Cell(1, .5, 'Ya', '1', 0, 'C', $fill);
            $pdf->Cell(1, .5, 'Tidak', '1', 0, 'C', $fill);
            $pdf->Cell(10, .5, 'Jika ya, jelaskan', '1', 0, 'L', $fill);
            $pdf->Ln();
            
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass2 as $ass2) {
                $pdf->Cell(7, .5, $ass2->item_name, 'BL', 0, 'L', $fill);
                $pdf->Cell(1, .5, (!empty($ass2->item_value2) ? 'V' : ''), 'BL', 0, 'C', $fill);
                $pdf->Cell(1, .5, (empty($ass2->item_value2) ? 'V' : ''), 'BL', 0, 'C', $fill);
                $pdf->Cell(10, .5, $ass2->item_value2, 'BLR', 0, 'L', $fill);
                $pdf->Ln();
            }
            
            $pdf->Cell(19, .5, '', 'T', 0, 'C', $fill);
            $pdf->Ln();
            # --- END BLOK 2 --
            
            # ISI BLOK 3
            $pdf->SetFont('Arial', 'i', '9');
            $pdf->Cell(19, .5, 'Pemeriksaan Fisik', '0', 0, 'L', $fill);
            $pdf->Ln();
            
            foreach ($sql_medc_ass3L as $ass3L) {
                $bb_row = $this->db->where('id_medcheck_ass', $ass3L->id_medcheck_ass)->where('id_item', '36')->get('tbl_trans_medcheck_ass_fisik_hsl')->row();
                $tb_row = $this->db->where('id_medcheck_ass', $ass3L->id_medcheck_ass)->where('id_item', '35')->get('tbl_trans_medcheck_ass_fisik_hsl')->row();
                
                $bb = isset($bb_row->item_value2) ? $bb_row->item_value2 : 0;
                $tb = isset($tb_row->item_value2) ? $tb_row->item_value2 / 100 : 0;
                
                // Prevent division by zero
                $imt = 0;
                if ($tb > 0) {
                    $imt = $bb / ($tb * $tb);
                }
                        
                $pdf->SetFont('Arial', 'B', '9');
                $pdf->Cell(4, .5, $ass3L->item_name, '0', 0, 'L', $fill);
                $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                $pdf->SetFont('Arial', '', '9');
                $pdf->Cell(1, .5, ($ass3L->id_item == 37 ? (!empty($imt) ? general::format_angka($imt, 2) : '') : $ass3L->item_value2), '0', 0, 'L', $fill);
                $pdf->Cell(4.5, .5, $ass3L->item_value3, '0', 0, 'L', $fill);
                $pdf->Ln();
            }
            $pdf->Ln();
            
            $setYAss3R = 25.1;
            foreach ($sql_medc_ass3R as $ass3R) {
                $pdf->SetXY(10.5,$setYAss3R);
                $pdf->SetFont('Arial', 'B', '9');
                $pdf->Cell(3, .5, $ass3R->item_name, '0', 0, 'L', $fill);
                $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
                $pdf->SetFont('Arial', '', '9');
                $pdf->Cell(2, .5, ($ass3R->id_item == 37 ? general::format_angka($imt, 2) : $ass3R->item_value2), '0', 0, 'L', $fill);
                $pdf->Cell(4.5, .5, $ass3R->item_value3, '0', 0, 'L', $fill);
                $pdf->Ln();
                
                $setYAss3R += 0.5;
            }
            $pdf->Ln();
            # --- END BLOK 3 --
            
            # ISI BLOK 4
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(6.33, .5, '1. Pemeriksaan Mata', 'TL', 0, 'L', $fill);
            $pdf->Cell(6.33, .5, '2. Pemeriksaan THT-KL', 'T', 0, 'L', $fill);
            $pdf->Cell(6.33, .5, '', 'TR', 0, 'L', $fill);
            $pdf->Ln();
            
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass4 as $ass4) {
                $pdf->Cell(3, .5, $ass4->item_name, 'L', 0, 'L', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(1, .5, $ass4->item_value2, '', 0, '', $fill);
                $pdf->Cell(2, .5, $ass4->item_value3, '', 0, 'R', $fill);
                $pdf->Ln();
            }
            
            $pdf->Cell(3, .5, '', 'L', 0, 'L', $fill);
            $pdf->Cell(.33, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            # --- END BLOK 4 --
            
            # ISI BLOK 5
////            $pdf->SetXY(7.33,3.1);
//            $pdf->SetFont('Arial', 'i', '9');
//            $pdf->Cell(12.66, .5, 'Pemeriksaan THT-KLT', '1', 0, 'L', $fill);
//            $pdf->Ln();
            
            $setYAss5L = 3.1;
            foreach ($sql_medc_ass5L as $ass5L) {
                $pdf->SetXY(7.33,$setYAss5L);
                $pdf->Cell(3, .5, $ass5L->item_name, '', 0, 'L', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(3, .5, $ass5L->item_value2, '', 0, 'L', $fill);
                $pdf->Ln();
                
                $setYAss5L += 0.5;
            }
            $pdf->Ln();
            
            $setYAss5R = 3.1;
            foreach ($sql_medc_ass5R as $ass5R) {
                $pdf->SetXY(13.66,$setYAss5R);                
                $pdf->Cell(3, .5, $ass5R->item_name, '', 0, 'L', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(3, .5, $ass5R->item_value2, 'R', 0, 'L', $fill);
                $pdf->Ln();
                
                $setYAss5R += 0.5;
            }
            $pdf->SetXY(13.66,$setYAss5R);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.33, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '', 'R', 0, 'L', $fill);
            # --- END BLOK 5 --
            
            # ISI BLOK 6
            $setYAss6 = $setYAss5R + 0.5;
            $pdf->SetXY(1,$setYAss6);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(6.33, .5, '3. Pemeriksaan Thorax', 'L', 0, 'L', $fill);
            $pdf->Cell(6.33, .5, '4. Pemeriksaan Paru', '', 0, 'L', $fill);
            $pdf->Cell(6.33, .5, '5. Pemeriksaan Jantung', 'R', 0, 'L', $fill);
            $pdf->Ln();
            
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass6 as $ass6) { 
                $pdf->Cell(3, .5, $ass6->item_name, 'L', 0, 'L', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(3, .5, $ass6->item_value2, '', 0, 'L', $fill);
                $pdf->Ln();
            }
            # --- END BLOK 6 --
            
            # ISI BLOK 7 DAN 8 
            $setYAss7 = 6.1;
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass7 as $ass7) {
                $pdf->SetXY(7.33,$setYAss7);
                $pdf->Cell(3, .5, $ass7->item_name, '', 0, 'L', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(3, .5, $ass7->item_value2, '', 0, 'L', $fill);
                $pdf->Ln();
                
                $setYAss7 += 0.5;
            }
            $pdf->Ln();
            
            $setYAss8 = 6.1;
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass8 as $ass8) {
                $pdf->SetXY(13.66,$setYAss8);
                $pdf->Cell(3, .5, $ass8->item_name, '', 0, 'L', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(3, .5, $ass8->item_value2, 'R', 0, 'L', $fill);
                $pdf->Ln();
                
                $setYAss8 += 0.5;
            }
            # --- END BLOK 7 DAN 8 --
            
            # ISI BLOK 9 DAN 10
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(6.33, .5, '6. Pemeriksaan Abdomen', 'L', 0, 'L', $fill);
            $pdf->Cell(6.33, .5, '7. Pemeriksaan Urogenital', '', 0, 'L', $fill);
            $pdf->Cell(6.33, .5, '8. Pemeriksaan Psikiatri', 'R', 0, 'L', $fill);
            $pdf->Ln();
            
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass9 as $ass9) {
                $pdf->Cell(3, .5, $ass9->item_name, 'L', 0, 'L', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(3, .5, $ass9->item_value2, '', 0, 'L', $fill);
                $pdf->Ln();
            }
            $pdf->Ln();
            
            $setYAss10 = 8.6;
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass10 as $ass10) {
                $pdf->SetXY(7.33,$setYAss10);
                $pdf->Cell(3, .5, $ass10->item_name, '', 0, '', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(3, .5, $ass10->item_value2, '', 0, 'L', $fill);
                $pdf->Ln();
                
                $setYAss10 += 0.5;
            }
            
            $pdf->SetXY(7.33,$setYAss10);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.33, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->SetXY(7.33,$setYAss10 + 0.5);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.33, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            # --- END BLOK 9 DAN 10 --
            
            # ISI BLOK 12
            $setYAss12 = 8.6;
            $pdf->SetFont('Arial', '', '9');           
            foreach ($sql_medc_ass12 as $ass12) {
                $pdf->SetXY(13.66,$setYAss12);
                $pdf->Cell(3, .5, $ass12->item_name, '', 0, 'L', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(3, .5, $ass12->item_value2, 'R', 0, 'L', $fill);
                $pdf->Ln();
                
                $setYAss12 += 0.5;
            }
            $pdf->SetXY(13.66,$setYAss12);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.33, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '', 'R', 0, 'L', $fill);
            $pdf->SetXY(13.66,$setYAss12 + 0.5);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.33, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '', 'R', 0, 'L', $fill);
            $pdf->Ln();
            
            # ISI BLOK 11 DAN 12
            $sens_a = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('id_item', '84')->get('tbl_trans_medcheck_ass_fisik_hsl')->row();
            $sens_b = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('id_item', '85')->get('tbl_trans_medcheck_ass_fisik_hsl')->row();
            $sens_c = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('id_item', '86')->get('tbl_trans_medcheck_ass_fisik_hsl')->row();
            $sens_d = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('id_item', '87')->get('tbl_trans_medcheck_ass_fisik_hsl')->row();
            $moto_a = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('id_item', '80')->get('tbl_trans_medcheck_ass_fisik_hsl')->row();
            $moto_b = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('id_item', '81')->get('tbl_trans_medcheck_ass_fisik_hsl')->row();
            $moto_c = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('id_item', '82')->get('tbl_trans_medcheck_ass_fisik_hsl')->row();
            $moto_d = $this->db->where('id_medcheck_ass', $sql_medc_lab->id)->where('id_item', '83')->get('tbl_trans_medcheck_ass_fisik_hsl')->row();
            
            $pdf->SetXY(1,$setYAss10 + 1);
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(19, .5, '9. Pemeriksaan Ekstremitas', 'LR', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(6.33, .5, 'Sensorik', 'L', 0, 'C', $fill);
            $pdf->Cell(6.33, .5, 'Motorik', '', 0, 'C', $fill);
//            $pdf->Cell(6.33, .5, $pdf->getX(), 'R', 0, 'C', $fill);
            $pdf->Ln();
            
            $pdf->SetFont('Arial', '', '7');
            # Blok Sensorik
            $pdf->Cell(1.165, .5, '', 'L', 0, 'C', $fill);
            $pdf->Cell(2, .5, '', 'R', 0, 'C', $fill);
            $pdf->Cell(2, .5, '', '', 0, 'C', $fill);
            $pdf->Cell(1.165, .5, '', '', 0, 'C', $fill);
            
            # Blok Motorik
            $pdf->Cell(1.165, .5, '', '', 0, 'C', $fill);
            $pdf->Cell(2, .5, '', 'R', 0, 'C', $fill);
            $pdf->Cell(2, .5, '', '', 0, 'C', $fill);
            $pdf->Cell(1.165, .5, '', '', 0, 'C', $fill);
            $pdf->Ln();
            
            # Blok Sensorik
            $pdf->Cell(2.165, .5, '', 'L', 0, 'C', $fill);
            $pdf->Cell(1, .5, $sens_a->item_value2, 'BR', 0, 'C', $fill); // Tanda plus di sensorik di tengah
            $pdf->Cell(1, .5, $sens_b->item_value2, 'B', 0, 'C', $fill); // Tanda plus di sensorik di tengah
            $pdf->Cell(2.165, .5, '', '', 0, 'C', $fill);
            
            # Blok Motorik
            $pdf->Cell(2.165, .5, '', '', 0, 'C', $fill);
            $pdf->Cell(1, .5, $moto_a->item_value2, 'BR', 0, 'C', $fill); // Tanda plus di motorik di tengah
            $pdf->Cell(1, .5, $moto_b->item_value2, 'B', 0, 'C', $fill); // Tanda plus di motorik di tengah
            $pdf->Cell(2.165, .5, '', '', 0, 'C', $fill);
            $pdf->Ln();
            
            # Blok Sensorik
            $pdf->Cell(2.165, .5, '', 'L', 0, 'C', $fill);
            $pdf->Cell(1, .5, $sens_c->item_value2, 'R', 0, 'C', $fill); // Tanda plus di sensorik di tengah
            $pdf->Cell(1, .5, $sens_d->item_value2, '', 0, 'C', $fill); // Tanda plus di sensorik di tengah
            $pdf->Cell(2.165, .5, '', '', 0, 'C', $fill);
            
            # Blok Motorik
            $pdf->Cell(2.165, .5, '', '', 0, 'C', $fill);
            $pdf->Cell(1, .5, $moto_c->item_value2, 'R', 0, 'C', $fill); // Tanda plus di motorik di tengah
            $pdf->Cell(1, .5, $moto_d->item_value2, '', 0, 'C', $fill); // Tanda plus di motorik di tengah
            $pdf->Cell(2.165, .5, '', '', 0, 'C', $fill);
            $pdf->Ln();
            
            # Blok Sensorik
            $pdf->Cell(1.165, .5, '', 'L', 0, 'C', $fill);
            $pdf->Cell(2, .5, '', 'R', 0, 'C', $fill);
            $pdf->Cell(2, .5, '', '', 0, 'C', $fill); 
            $pdf->Cell(1.165, .5, '', '', 0, 'C', $fill);
            
            # Blok Motorik
            $pdf->Cell(1.165, .5, '', '', 0, 'C', $fill);
            $pdf->Cell(2, .5, '', 'R', 0, 'C', $fill); 
            $pdf->Cell(2, .5, '', '', 0, 'C', $fill);
            $pdf->Cell(1.165, .5, '', '', 0, 'C', $fill);
            $pdf->Ln();
            
            $setYAss11 = 11.6;
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass11 as $ass11) {
                $pdf->SetXY(13.66,$setYAss11);
                $pdf->Cell(3, .5, $ass11->item_name, '', 0, 'L', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(3, .5, $ass11->item_value2, 'R', 0, 'L', $fill);
                $pdf->Ln();
                
                $setYAss11 += 0.5;
            }
            
            # -- BLOK 14--
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->SetXY(1,14.1);
            $pdf->Cell(19, .5, '10. Pemeriksaan Syaraf', 'LR', 0, 'L', $fill);
            $pdf->Ln();
            
            $setYAss14L = 14.6;
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass14L as $ass14L) {
                $pdf->SetXY(1,$setYAss14L);
                $pdf->Cell(3, .5, $ass14L->item_name, 'L', 0, 'L', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(3, .5, $ass14L->item_value2, '', 0, 'L', $fill);
                $pdf->Ln();
                
                $setYAss14L += 0.5;
            }
            
            $setYAss14R = 14.6;
            $pdf->SetFont('Arial', '', '9');
            foreach ($sql_medc_ass14R as $ass14R) {
                $pdf->SetXY(7.33,$setYAss14R);
                $pdf->Cell(3, .5, $ass14R->item_name, '', 0, '', $fill);
                $pdf->Cell(.33, .5, ':', '', 0, 'C', $fill);
                $pdf->Cell(9.33, .5, $ass14R->item_value2, 'R', 0, 'L', $fill);
                $pdf->Ln();
                
                $setYAss14R += 0.5;
            }
            
            $pdf->SetXY(13.66,$setYAss14R);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.33, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '', 'R', 0, 'L', $fill);
            $pdf->SetXY(13.66,$setYAss14R + 0.5);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.33, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '', 'R', 0, 'L', $fill);
            $pdf->SetXY(13.66,$setYAss14R + 1);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.33, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '', 'R', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetXY(13.66,$setYAss14R + 1.5);
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.33, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '', 'R', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetXY(1,$setYAss14R + 2);
            $pdf->Cell(19, .5, '', 'T', 0, 'L', $fill);
            $pdf->Ln();
            # -- END
            
            # ISI BLOK 13
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(19, .5, 'Pemeriksaan Gigi', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, 'Posisi Gigi Atas', '', 0, 'L', $fill);
            
            foreach ($sql_medc_ass13A as $ass13A) {
                $pdf->Cell(1, .5, $ass13A->item_name, '', 0, 'C', $fill);                
            }
            
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Kelainan', '', 0, 'L', $fill);
            foreach ($sql_medc_ass13A as $ass13A) { 
                $pdf->SetFont('Arial', 'B', '9');
                $pdf->Cell(1, .5, $ass13A->item_value2, '', 0, 'C', $fill);
                
            }
            $pdf->Ln(1);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3, .5, 'Posisi Gigi Bawah', '', 0, 'L', $fill);
            
            foreach ($sql_medc_ass13B as $ass13B) {
                $pdf->Cell(1, .5, $ass13B->item_name, '', 0, 'C', $fill);
                
            }
            
            $pdf->Ln();
            $pdf->Cell(3, .5, 'Kelainan', '', 0, 'L', $fill);
            foreach ($sql_medc_ass13B as $ass13B) {                
                $pdf->SetFont('Arial', 'B', '9');
                $pdf->Cell(1, .5, $ass13B->item_value2, '', 0, 'C', $fill);
            }
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'Keterangan', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Arial', 'i', '9');
            $pdf->Cell(3, .5, '*Caries', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '*Tanggal', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '*Impacted', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '*Palsu', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, '*Radix', '', 0, 'L', $fill);
            $pdf->Ln(1);
            # --- END BLOK 13 --
            // Create folder if it doesn't exist
            $folder_path = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }

            // QR GENERATOR VALIDASI
            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. '.strtoupper($sql_pasien->nama_pgl).' ('.strtoupper($kode_pasien).')';
            $params['level'] = 'H';
            $params['size'] = 2;
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR DOKTER
            $qr_dokter = $folder_path.'/qr-dokter-'.strtolower($sql_dokter2->id).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh dokter penanggung jawab ['.(!empty($sql_dokter2->nama_dpn) ? $sql_dokter2->nama_dpn.' ' : '').$sql_dokter2->nama.(!empty($sql_dokter2->nama_blk) ? ', '.$sql_dokter2->nama_blk : '').']';
            
            \QRcode::png($params['data'], $qr_dokter, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_dokter;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4,2,$getY,2,2);
            $pdf->Image($gambar5,12,$getY,2,2);
            
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_lab->tgl_masuk), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(4, .5, 'Validasi', '0', 0, 'C', $fill);
            $pdf->Cell(6.5, .5, '', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(7.5, .5, (!empty($ket) ? $ket : 'Dokter Pemeriksa'), '0', 0, 'L', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk : ''), '', 0, 'L', $fill);
//            $pdf->Ln();
//            $pdf->Cell(10.5, .5, '', '', 0, 'L', $fill);
//            $pdf->Cell(7.5, .5, (!empty($sql_dokter->nik) || $sql_dokter->nik != '-' ? $sql_dokter->nik : ''), '', 0, 'L', $fill);
            $pdf->Ln();
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function pdf_medcheck_nota_rajal() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_plat      = $this->db->where('id_medcheck', $sql_medc->id)->get('v_medcheck_plat')->result();
            $sql_medc_det       = $this->db->where('id_medcheck', $sql_medc->id)->where('status_pkt', '0')->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();
            $sql_medc_det_sum   = $this->db->select('SUM(diskon) AS diskon, SUM(potongan) AS potongan, SUM(subtotal) AS subtotal')->where('id_medcheck', $sql_medc->id)->where('status_pkt', '0')->get('tbl_trans_medcheck_det')->row();
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pasien_poin    = $this->db->where('id_pasien', $sql_medc->id_pasien)->get('tbl_m_pasien_poin')->row();
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            $kasir              = !empty($sql_medc->id_kasir) ? $this->ion_auth->user($sql_medc->id_kasir)->row()->first_name : $this->ion_auth->user()->row()->first_name;

            $judul              = ($sql_medc->tipe == '6' ? 'INVOICE FARMASI' : ($sql_medc->status_bayar == '1' ? 'INVOICE' : 'TAGIHAN'));
            
            $this->load->library('MedPDF');
            $pdf = new MedPDF('P', 'cm', [21.5, 33]);
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1, 0.35, 1);
            $pdf->addPage();
            
            // Gambar Watermark Tengah
            if (file_exists($gambar2)) {
                $pdf->Image($gambar2, 5, 4, 17, 19);
            }
            
            // Blok Judul
            $pdf->SetFont('Arial', 'B', '14');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln();
            
            // Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(3.5, .5, 'Nama / Name', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(8, .5, strtoupper($sql_pasien->nama_pgl).' ('.$sql_pasien->kode_dpn . $sql_pasien->kode.')', '0', 0, 'L', $fill ?? false);
            $pdf->Ln();
            $pdf->Cell(3.5, .5, 'Alamat / Address', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(8, .5, !empty($sql_pasien->alamat) ? $sql_pasien->alamat : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-'), '0', 0, 'L', $fill ?? false);
            $pdf->Ln();
            $pdf->Cell(3.5, .5, 'Tanggal / Date', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo5($sql_medc->tgl_masuk).' - '.$this->tanggalan->tgl_indo5(date('Y-m-d H:i')), '0', 0, 'L', $fill ?? false);
            $pdf->Ln();
            $pdf->Cell(3.5, .5, 'Kasir / Cashier', '0', 0, 'L', $fill ?? false);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill ?? false);
            $pdf->Cell(8, .5, $this->ion_auth->user($sql_medc->id_kasir)->row()->first_name, '0', 0, 'L', $fill ?? false);
            $pdf->Ln(1);
                        
            $fill = false;
            $pdf->SetTextColor(5, 148, 19);
            $pdf->SetFont('Arial', 'B', '11');
            $pdf->Cell(7, 1, 'DESKRIPSI', 'TB', 0, 'L', $fill);
            $pdf->Cell(1, 1, 'JML', 'TB', 0, 'C', $fill);
            $pdf->Cell(3, 1, 'HARGA', 'TB', 0, 'R', $fill);
            $pdf->Cell(2, 1, 'DISK (%)', 'TB', 0, 'R', $fill);
            $pdf->Cell(3, 1, 'POTONGAN', 'TB', 0, 'R', $fill);
            $pdf->Cell(3, 1, 'SUBTOTAL', 'TB', 0, 'R', $fill);
            $pdf->SetTextColor(0, 0, 0);
            $pdf->Ln();
            
            $fill = false;
            $no = 1; 
            $gtotal = 0;
            foreach ($sql_medc_det as $det) {
                $sql_medc_itm = $this->db->where('id_medcheck', $det->id_medcheck)->where('id_item_kat', $det->id_item_kat)->where('status_pkt', '0')->get('tbl_trans_medcheck_det')->result();
                $sql_medc_kat = $this->db->where('id', $det->id_item_kat)->get('tbl_m_kategori')->row();
                
                $pdf->SetFont('Arial', 'Bi', '8');
                $pdf->Cell(19, .5, strtoupper($sql_medc_kat->keterangan), '', 0, 'L', $fill);
                $pdf->Ln();
                
                // Detail Pemeriksaan dan hasilnya
                $sub = 0;
                foreach ($sql_medc_itm as $medc) {                  
                    $sub += $medc->subtotal;
                    
                    $pdf->SetFont('Arial', '', '7.5');
                    $pdf->Cell(7, .5, $medc->item, '', 0, '', $fill);
                    $pdf->Cell(1, .5, (float) $medc->jml, '', 0, 'C', $fill);
                    $pdf->Cell(3, .5, general::format_angka($medc->harga), '', 0, 'R', $fill);
                    $pdf->Cell(2, .5, ($medc->disk1 != 0 ? (float)$medc->disk1 : '').($medc->disk2 != 0 ? ' + '.(float)$medc->disk2 : '').($medc->disk3 != 0 ? ' + '.(float)$medc->disk3 : ''), '', 0, 'C', $fill);
                    $pdf->Cell(3, .5, general::format_angka($medc->potongan), '', 0, 'R', $fill);
                    $pdf->Cell(3, .5, general::format_angka($medc->subtotal), '', 0, 'R', $fill);
                    $pdf->Ln();
                    
                    $resep = json_decode($medc->resep);
                    if ($resep !== null) {
                        foreach ($resep as $racikan) {
                            $pdf->SetFont('Arial', 'i', '9');
                            $pdf->Cell(7, .5, '- R/ '.strtolower($racikan->item), '', 0, '', $fill);
                            $pdf->Cell(1, .5, (float) $racikan->jml, '', 0, 'C', $fill);
                            $pdf->Cell(3, .5, general::format_angka($racikan->harga), '', 0, 'R', $fill);
                            $pdf->Cell(3, .5, general::format_angka($racikan->subtotal), '', 0, 'R', $fill);
                            $pdf->Ln();                            
                        }
                    }
                    
                    $no++;
                }
                
                // Kolom Subtotal
                $pdf->SetFont('Arial', 'B', '8');
                $pdf->Cell(16, .5, 'SUBTOTAL', 'B', 0, 'R', $fill);
                $pdf->Cell(3, .5, general::format_angka($sub), 'B', 0, 'R', $fill);
                $pdf->Ln();
                
                $gtotal += $sub;
            }
            
            // Get summary data
            $sql_medc_sum = $this->db->select('SUM(subtotal) as subtotal, SUM(diskon) as diskon, SUM(potongan) as potongan')
                                    ->where('id_medcheck', $sql_medc->id)
                                    ->get('tbl_trans_medcheck_det')
                                    ->row();
            
            $sql_platform = $this->db->where('id', $sql_medc->metode)->get('tbl_m_platform')->row();
            
            // Prevent division by zero
            $jml_total = ($sql_medc_sum->subtotal + $sql_medc_sum->diskon + $sql_medc_sum->potongan);
            $jml_diskon = $jml_total - ($jml_total - $sql_medc->jml_diskon);
            
            // Calculate discount percentage only if total amount is greater than zero
            $diskon = ($jml_total > 0) ? ($jml_diskon / $jml_total) * 100 : 0;
            
            // Kolom Total
            $pdf->SetTextColor(5, 148, 19);
            $pdf->SetFont('Arial', 'B', '8');
            $pdf->Cell(1, .5, 'POIN', '', 0, 'C', $fill);
            $pdf->Cell(15, .5, 'TOTAL', '', 0, 'R', $fill);
            $pdf->SetTextColor(0, 0, 0);
            $pdf->Cell(3, .5, general::format_angka($sql_medc->jml_total), '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->SetTextColor(5, 148, 19);
            $pdf->Cell(1, .5, general::format_angka($sql_pasien_poin->jml_poin ?? 0), '', 0, 'C', $fill);
            $pdf->Cell(15, .5, 'DISKON '.(!empty($diskon) ? $diskon.'%' : ''), '', 0, 'R', $fill);
            $pdf->SetTextColor(0, 0, 0);
            $pdf->Cell(3, .5, '('.general::format_angka($jml_diskon).')', '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->Cell(13, .5, '', '', 0, 'R', $fill);
            $pdf->SetTextColor(5, 148, 19);
            $pdf->Cell(3, .5, 'GRAND TOTAL', 'T', 0, 'R', $fill);
            $pdf->SetTextColor(0, 0, 0);
            $pdf->Cell(3, .5, general::format_angka($sql_medc_det_sum->subtotal), 'T', 0, 'R', $fill);
            $pdf->Ln();
            
            $jml_tot_byr = 0;
            foreach ($sql_medc_plat as $plat) {
                $sql_plat = $this->db->where('id', $plat->id_platform)->get('tbl_m_platform')->row();
                $jml_tot_byr += $plat->nominal;

                $pdf->SetFont('Arial', 'i', '8');
                $pdf->Cell(16, .5, '('.$this->tanggalan->tgl_indo5($plat->tgl_simpan).') '.$sql_plat->platform, '', 0, 'R', $fill);
                $pdf->SetFont('Arial', 'B', '8');
                $pdf->Cell(3, .5, general::format_angka($plat->nominal), '', 0, 'R', $fill);
                $pdf->Ln();
            }
            
            $jml_kembali = $jml_tot_byr - $sql_medc_det_sum->subtotal;
            
            $pdf->Cell(13, .5, '', '', 0, 'R', $fill);
            $pdf->SetTextColor(5, 148, 19);
            $pdf->Cell(3, .5, 'KEMBALIAN', '', 0, 'R', $fill);
            $pdf->SetTextColor(0, 0, 0);
            $pdf->Cell(3, .5, ($jml_kembali >= 0 ? general::format_angka($jml_kembali) : 0), '', 0, 'R', $fill);
            
            $pdf->Ln(1);
            // Create folder if it doesn't exist
            $folder_path = FCPATH.'file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }
            
            // QR GENERATOR VALIDASI
            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. '.strtoupper($sql_pasien->nama_pgl).' ('.strtoupper($kode_pasien).')';
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR PETUGAS KASIR
            $qr_kasir = $folder_path.'/qr-kasir-'.strtolower(md5($kasir)).'.png';
            $params['data'] = 'Telah diverifikasi oleh petugas kasir '.$kasir.'. Pada tanggal '.$this->tanggalan->tgl_indo5($sql_medc->tgl_bayar);
            
            \QRcode::png($params['data'], $qr_kasir, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_kasir;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4, 1, $getY, 2, 2);
            $pdf->Image($gambar5, 12.5, $getY, 2, 2);

            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc->tgl_bayar), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(11.5, .5, 'Validasi', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Petugas Kasir', '', 0, 'L', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, '('.$kasir.')', '', 0, 'L', $fill);
            $pdf->Ln();

            $type = $_GET['type'] ?? 'I';

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl.'_INV'. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function pdf_medcheck_nota_ranap() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_det       = $this->db->where('id_medcheck', $sql_medc->id)->where('status_pkt', '0')->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            $kasir              = (!empty($sql_medc->id_kasir) ? $this->ion_auth->user($sql_medc->id_kasir)->row()->first_name : $this->ion_auth->user()->row()->first_name);

            $judul = "BILLING ".strtoupper(general::status_rawat2($sql_medc->tipe));
            
            $this->load->library('MedPDF');
            $pdf = new MedPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 6.5);
            $pdf->addPage();
            
            // Gambar Watermark Tengah
            if (file_exists($gambar2)) {
                $pdf->Image($gambar2,5,4,17,19);
            }
            
            // Blok Judul
            $pdf->SetFont('Arial', 'B', '14');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln();
            
            // Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(5.5, .5, 'NIK / ID Card', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Nama / Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, strtoupper($sql_pasien->nama_pgl).' ('.$sql_pasien->kode_dpn . $sql_pasien->kode.')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Tgl Lahir / Date of Birth', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Jenis Kelamin / Gender', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->usia_lkp($sql_pasien->tgl_lahir).' ('.general::jns_klm($sql_pasien->jns_klm).')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Alamat / Address', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, (!empty($sql_pasien->alamat) ? $sql_pasien->alamat : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'No. Telp / Phone Number', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->no_hp, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Tanggal / Date', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo5($sql_medc->tgl_masuk).' - '.$this->tanggalan->tgl_indo5(date('Y-m-d H:i')), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Kasir / Cashier', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->ion_auth->user()->row()->first_name, '0', 0, 'L', $fill);
            $pdf->Ln(1);
                        
            $fill = FALSE;
            $pdf->SetFont('Arial', 'B', '11');
            $pdf->Cell(1, .5, '#', 'TB', 0, 'C', $fill);
            $pdf->Cell(4, .5, 'TGL', 'TB', 0, 'L', $fill);
            $pdf->Cell(7, .5, 'ITEM', 'TB', 0, 'L', $fill);
            $pdf->Cell(1, .5, 'JML', 'TB', 0, 'C', $fill);
            $pdf->Cell(3, .5, 'HARGA', 'TB', 0, 'R', $fill);
            $pdf->Cell(3, .5, 'SUBTOTAL', 'TB', 0, 'R', $fill);
            $pdf->Ln();
            
            $fill = FALSE;
            $no = 1; $gtotal = 0;
            foreach ($sql_medc_det as $det){
                $sql_medc_itm = $this->db
                                     ->where('id_medcheck', $det->id_medcheck)
                                     ->where('id_item_kat', $det->id_item_kat)
                                     ->where('status_pkt', '0')
                                     ->where('jml >=', '0')
                                     ->order_by('tgl_simpan', 'asc')
                                     ->get('tbl_trans_medcheck_det')->result();
                $sql_medc_kat = $this->db->where('id', $det->id_item_kat)->get('tbl_m_kategori')->row();
                
                $pdf->SetFont('Arial', 'Bi', '10');
                $pdf->Cell(19, .5, ' '.strtoupper($sql_medc_kat->keterangan), '', 0, 'L', $fill);
                $pdf->Ln();
                
                // Detail Pemeriksaan dan hasilnya
                $sub = 0;
                foreach ($sql_medc_itm as $medc){                  
                    if ($medc->jml > 0) {
                        $sub     = $sub + $medc->subtotal;
                        $hrg_pcs = $medc->subtotal / $medc->jml;
               
                        $pdf->SetFont('Arial', '', '10');
                        $pdf->Cell(1, .5, $no . '.', '', 0, 'C', $fill);
                        $pdf->Cell(4, .5, $this->tanggalan->tgl_indo5($medc->tgl_simpan), '', 0, 'L', $fill);
                        $pdf->Cell(7, .5, $medc->item, '', 0, '', $fill);
                        $pdf->Cell(1, .5, (float) $medc->jml, '', 0, 'C', $fill);
                        $pdf->Cell(3, .5, general::format_angka($medc->harga), '', 0, 'R', $fill);
                        $pdf->Cell(3, .5, general::format_angka($medc->subtotal), '', 0, 'R', $fill);
                        $pdf->Ln();
                        
                        $resep_data = json_decode($medc->resep);
                        if (is_array($resep_data)) {
                            foreach ($resep_data as $racikan) {
                                $pdf->SetFont('Arial', 'i', '9');
                                $pdf->Cell(1, .5, '', '', 0, 'C', $fill);
                                $pdf->Cell(4, .5, '', '', 0, 'L', $fill);
                                $pdf->Cell(7, .5, '- R/ '.strtolower($racikan->item), '', 0, '', $fill);
                                $pdf->Cell(1, .5, (float) $racikan->jml, '', 0, 'C', $fill);
                                $pdf->Cell(3, .5, general::format_angka($racikan->harga), '', 0, 'R', $fill);
                                $pdf->Cell(3, .5, general::format_angka($racikan->subtotal), '', 0, 'R', $fill);
                                $pdf->Ln();                            
                            }
                        }
                        
                        $no++;
                    }
                }
                
                // Kolom Subtotal
                $pdf->SetFont('Arial', 'B', '10');
                $pdf->Cell(16, .5, 'SUBTOTAL', 'B', 0, 'R', $fill);
                $pdf->Cell(3, .5, general::format_angka($sub), 'B', 0, 'R', $fill);
                $pdf->Ln();
                
                $gtotal = $gtotal + $sub;
            }
                
            // Kolom Grandtotal
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(16, .5, 'GRAND TOTAL', '', 0, 'R', $fill);
            $pdf->Cell(3, .5, general::format_angka($gtotal), '', 0, 'R', $fill);
            $pdf->Ln(1);
            
            // Create folder if it doesn't exist
            $folder_path = FCPATH.'/file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }
            
            // QR GENERATOR VALIDASI
            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. '.strtoupper($sql_pasien->nama_pgl).' ('.strtoupper($kode_pasien).')';
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR PETUGAS KASIR
            $qr_kasir = $folder_path.'/qr-kasir-'.strtolower(md5($kasir)).'.png';
            $params['data'] = 'Telah diverifikasi oleh petugas kasir '.$kasir.'. Pada tanggal '.$this->tanggalan->tgl_indo5($sql_medc->tgl_bayar);
            
            \QRcode::png($params['data'], $qr_kasir, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_kasir;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($gambar4, 1, $getY, 2, 2);
            $pdf->Image($gambar5, 12.5, $getY, 2, 2);

            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc->tgl_masuk), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(11.5, .5, 'Validasi', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Petugas Kasir', '', 0, 'L', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, '('.$kasir.')', '', 0, 'L', $fill);
            $pdf->Ln();

            $type = $_GET['type'] ?? 'I';

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl.'_BILLING'. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # INVOICE RANAP
    public function pdf_medcheck_nota_ranap2() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_plat      = $this->db->where('id_medcheck', $sql_medc->id)->get('v_medcheck_plat')->result();
            $sql_medc_det       = $this->db->where('id_medcheck', $sql_medc->id)->where('status_pkt', '0')->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();
            $sql_medc_det_sum   = $this->db->select('SUM(diskon) AS diskon, SUM(potongan) AS potongan, SUM(subtotal) AS subtotal')->where('id_medcheck', $sql_medc->id)->where('status_pkt', '0')->get('tbl_trans_medcheck_det')->row();
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pasien_poin    = $this->db->where('id_pasien', $sql_medc->id_pasien)->get('tbl_m_pasien_poin')->row(); 
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            $kasir              = (!empty($sql_medc->id_kasir) ? $this->ion_auth->user($sql_medc->id_kasir)->row()->first_name : $this->ion_auth->user()->row()->first_name);

            $judul = "INVOICE RAWAT INAP";
            
            $this->load->library('MedPDF');
            $pdf = new MedPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 6.5);
            $pdf->addPage();
            
            // Gambar Watermark Tengah
            if (file_exists($gambar2)) {
                $pdf->Image($gambar2,5,4,17,19);
            }
            
            // Blok Judul
            $pdf->SetFont('Arial', 'B', '14');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln();
            
            // Blok ID PASIEN
            $fill = false;
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(5.5, .5, 'NIK / ID Card', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->nik, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Nama / Name', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, strtoupper($sql_pasien->nama_pgl).' ('.$sql_pasien->kode_dpn . $sql_pasien->kode.')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Tgl Lahir / Date of Birth', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Jenis Kelamin / Gender', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->usia_lkp($sql_pasien->tgl_lahir).' ('.general::jns_klm($sql_pasien->jns_klm).')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Alamat / Address', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, (!empty($sql_pasien->alamat) ? $sql_pasien->alamat : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'No. Telp / Phone Number', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $sql_pasien->no_hp, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Tanggal / Date', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->tanggalan->tgl_indo5($sql_medc->tgl_masuk).' - '.$this->tanggalan->tgl_indo5($sql_medc->tgl_bayar), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, .5, 'Kasir / Cashier', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->Cell(8, .5, $this->ion_auth->user()->row()->first_name, '0', 0, 'L', $fill);
            $pdf->Ln(1);
            
            $fill = FALSE;
            $pdf->SetTextColor(5,148,19);
            $pdf->SetFont('Arial', 'B', '11');
            $pdf->Cell(4, 1, 'TGL', 'TB', 0, 'L', $fill);
            $pdf->Cell(8, 1, 'DESKRIPSI', 'TB', 0, 'L', $fill);
            $pdf->Cell(1, 1, 'JML', 'TB', 0, 'C', $fill);
            $pdf->Cell(3, 1, 'HARGA', 'TB', 0, 'R', $fill);
            $pdf->Cell(3, 1, 'SUBTOTAL', 'TB', 0, 'R', $fill);
            $pdf->SetTextColor(0,0,0);
            $pdf->Ln();
            
            $fill = FALSE;
            $no = 1; $gtotal = 0;
            foreach ($sql_medc_det as $det){
                $sql_medc_itm = $this->db->where('id_medcheck', $det->id_medcheck)->where('id_item_kat', $det->id_item_kat)->where('status_pkt', '0')->where('jml >=', '0')->get('tbl_trans_medcheck_det')->result();
                $sql_medc_kat = $this->db->where('id', $det->id_item_kat)->get('tbl_m_kategori')->row();
                
                $pdf->SetFont('Arial', 'Bi', '10');
                $pdf->Cell(19, .5, strtoupper($sql_medc_kat->keterangan), '', 0, 'L', $fill);
                $pdf->Ln();
                
                // Detail Pemeriksaan dan hasilnya
                $sub = 0;
                foreach ($sql_medc_itm as $medc){                  
                        $sub = $sub + $medc->subtotal;
                        
                        if($medc->jml > 0){
                            $pdf->SetFont('Arial', '', '10');
                            $pdf->Cell(4, .5, $this->tanggalan->tgl_indo5($medc->tgl_simpan), '', 0, 'L', $fill);
                            $pdf->Cell(8, .5, $medc->item, '', 0, '', $fill);
                            $pdf->Cell(1, .5, (float) $medc->jml, '', 0, 'C', $fill);
                            $pdf->Cell(3, .5, general::format_angka($medc->harga), '', 0, 'R', $fill);
                            $pdf->Cell(3, .5, general::format_angka($medc->subtotal), '', 0, 'R', $fill);
                            $pdf->Ln();
                        
                            $resep_data = json_decode($medc->resep);
                            if (is_array($resep_data)) {
                                foreach ($resep_data as $racikan) {
                                    $pdf->SetFont('Arial', 'i', '9');
                                    $pdf->Cell(4, .5, '', '', 0, 'C', $fill);
                                    $pdf->Cell(8, .5, '- R/ '.strtolower($racikan->item), '', 0, '', $fill);
                                    $pdf->Cell(1, .5, (float) $racikan->jml, '', 0, 'C', $fill);
                                    $pdf->Cell(3, .5, general::format_angka($racikan->harga), '', 0, 'R', $fill);
                                    $pdf->Cell(3, .5, general::format_angka($racikan->subtotal), '', 0, 'R', $fill);
                                    $pdf->Ln();                            
                                }
                            }
                        }
                        
                        $no++;
                }
                
                // Kolom Subtotal
                $pdf->SetFont('Arial', 'B', '10');
                $pdf->Cell(16, .5, 'SUBTOTAL', 'B', 0, 'R', $fill);
                $pdf->Cell(3, .5, general::format_angka($sub), 'B', 0, 'R', $fill);
                $pdf->Ln();
                
                $gtotal = $gtotal + $sub;
            }
            
            $jml_total      = $sql_medc_det_sum->subtotal + $sql_medc_det_sum->diskon + $sql_medc_det_sum->potongan;
            $jml_diskon     = $jml_total - $sql_medc_det_sum->subtotal;
            $diskon         = ($jml_total > 0) ? ($jml_diskon / $jml_total) * 100 : 0;
            
            // Kolom Total
            $pdf->SetTextColor(5,148,19);
            $pdf->SetFont('Arial', 'B', '10');
            $pdf->Cell(1, .5, 'POIN', '', 0, 'C', $fill);
            $pdf->Cell(15, .5, 'TOTAL', '', 0, 'R', $fill);
            $pdf->SetTextColor(0,0,0);
            $pdf->Cell(3, .5, general::format_angka($jml_total), '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->Cell(1, .5, general::format_angka($sql_pasien_poin->jml_poin ?? 0), '', 0, 'C', $fill);
            $pdf->SetTextColor(5,148,19);
            $pdf->Cell(15, .5, 'DISKON '.(!empty($diskon) ? number_format($diskon, 2).'%' : ''), '', 0, 'R', $fill);
            $pdf->SetTextColor(0,0,0);
            $pdf->Cell(3, .5, '('.general::format_angka($jml_diskon).')', '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->Cell(13, .5, '', '', 0, 'R', $fill);
            $pdf->SetTextColor(5,148,19);
            $pdf->Cell(3, .5, 'GRAND TOTAL', 'T', 0, 'R', $fill);
            $pdf->SetTextColor(0,0,0);
            $pdf->Cell(3, .5, general::format_angka($sql_medc_det_sum->subtotal), 'T', 0, 'R', $fill);
            $pdf->Ln();
            
            $jml_tot_byr = 0;
            foreach ($sql_medc_plat as $plat){
                $sql_plat    = $this->db->where('id', $plat->id_platform)->get('tbl_m_platform')->row();
                $jml_tot_byr = $jml_tot_byr + $plat->nominal;                
                
                $pdf->SetFont('Arial', 'i', '10');
                $pdf->Cell(16, .5, '('.$this->tanggalan->tgl_indo5($plat->tgl_simpan).') '.($sql_plat->platform ?? 'Unknown'), '', 0, 'R', $fill);
                $pdf->SetFont('Arial', 'B', '10');
                $pdf->Cell(3, .5, general::format_angka($plat->nominal), '', 0, 'R', $fill);
                $pdf->Ln();
            }
            
            $kembalian = $jml_tot_byr - $sql_medc_det_sum->subtotal;
            $jml_kembali = ($kembalian < 0 ? '0' : $kembalian);
            
            $pdf->Cell(13, .5, '', '', 0, 'R', $fill);
            $pdf->SetTextColor(5,148,19); //257a35
            $pdf->Cell(3, .5, 'TOTAL BAYAR', '', 0, 'R', $fill);
            $pdf->SetTextColor(0,0,0);
            $pdf->Cell(3, .5, general::format_angka($jml_tot_byr), '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->Cell(13, .5, '', '', 0, 'R', $fill);
            $pdf->SetTextColor(5,148,19);
            $pdf->Cell(3, .5, 'KEMBALIAN', '', 0, 'R', $fill);
            $pdf->SetTextColor(0,0,0);
            $pdf->Cell(3, .5, general::format_angka($jml_kembali), '', 0, 'R', $fill);
            
            $pdf->Ln(1);
            
            // QR GENERATOR VALIDASI
            $folder_path = FCPATH.'/file/pasien/'.strtolower($kode_pasien);
            if (!file_exists($folder_path)) {
                mkdir($folder_path, 0777, true);
            }
            
            $qr_validasi = $folder_path.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $params['data'] = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. '.strtoupper($sql_pasien->nama_pgl).' ('.strtoupper($kode_pasien).')';
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            \QRcode::png($params['data'], $qr_validasi, QR_ECLEVEL_H, 2, 2);

            $gambar4 = $qr_validasi;
                        
            // QR GENERATOR PETUGAS KASIR
            $qr_kasir = $folder_path.'/qr-kasir-'.strtolower(md5($kasir)).'.png';
            $params['data'] = 'Telah diverifikasi oleh petugas kasir '.$kasir.'. Pada tanggal '.$this->tanggalan->tgl_indo5($sql_medc->tgl_bayar);
            
            \QRcode::png($params['data'], $qr_kasir, QR_ECLEVEL_H, 2, 2);

            $gambar5 = $qr_kasir;
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            if (file_exists($gambar4)) {
                $pdf->Image($gambar4, 1, $getY, 2, 2);
            }
            if (file_exists($gambar5)) {
                $pdf->Image($gambar5, 12.5, $getY, 2, 2);
            }

            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc->tgl_bayar), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(11.5, .5, 'Validasi', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Petugas Kasir', '', 0, 'L', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, '('.$kasir.')', '', 0, 'L', $fill);
            $pdf->Ln();

            $type = $_GET['type'] ?? 'I';

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl.'_INV'. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # KUITANSI
    public function pdf_medcheck_nota_ranap3() {
        if (akses::aksesLogin() == TRUE) {
            $this->load->helper("terbilang");
            $setting = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck = $this->input->get('id');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_plat      = $this->db->where('id_medcheck', $sql_medc->id)->get('v_medcheck_plat')->result();
            $sql_medc_det       = $this->db->where('id_medcheck', $sql_medc->id)
                                          ->where('status_pkt', '0')
                                          ->group_by('id_item_kat')
                                          ->get('tbl_trans_medcheck_det')
                                          ->result();
            
            $sql_medc_det_sum   = $this->db->select('SUM(diskon) AS diskon, SUM(potongan) AS potongan, SUM(subtotal) AS subtotal')
                                          ->where('id_medcheck', $sql_medc->id)
                                          ->get('tbl_trans_medcheck_det')
                                          ->row();
            
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)
                                          ->get('tbl_m_pasien')
                                          ->row();
            
            $sql_pasien_poin    = $this->db->where('id_pasien', $sql_medc->id_pasien)
                                          ->get('tbl_m_pasien_poin')
                                          ->row();
            
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)
                                          ->get('tbl_m_jenis_kerja')
                                          ->row();
            
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)
                                          ->get('tbl_m_karyawan')
                                          ->row();
            
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            $kasir              = (!empty($sql_medc->id_kasir) ? $this->ion_auth->user($sql_medc->id_kasir)->row()->first_name : $this->ion_auth->user()->row()->first_name);

            $judul = "KWITANSI ".strtoupper(general::status_rawat2($sql_medc->tipe));
            
            $this->load->library('MedPDF');
            $pdf = new MedPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 6.5);
            $pdf->addPage();
            
            // Gambar Watermark Tengah
            $pdf->Image($gambar2,5,4,17,19);
            
            // Blok Judul
            $pdf->SetFont('Arial', 'B', '14');
            $pdf->Cell(19, .5, $judul, 0, 1, 'C');
            $pdf->Ln();
            
            $fill = false;
            
            // Blok ID PASIEN
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(5.5, .5, 'TELAH MENERIMA PEMBAYARAN DARI :', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(19, .5, strtoupper($sql_pasien->nama_pgl).' ('.$sql_pasien->kode_dpn . $sql_pasien->kode.')'.' / '.$this->tanggalan->usia($sql_pasien->tgl_lahir).' ('.general::jns_klm($sql_pasien->jns_klm).')', '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(19, .5, (!empty($sql_pasien->alamat) ? $sql_pasien->alamat : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(19, .5, $sql_pasien->no_hp, '0', 0, 'L', $fill);
            $pdf->Ln(1);
            
            $fill = FALSE;
            $pdf->SetTextColor(5,148,19);
            $pdf->SetFont('Arial', 'B', '11');
            $pdf->Cell(5, 1, 'NO. INVOICE', 'TB', 0, 'L', $fill);
            $pdf->Cell(4, 1, 'TANGGAL', 'TB', 0, 'L', $fill);
            $pdf->Cell(6, 1, 'PLATFORM', 'TB', 0, 'L', $fill);
            $pdf->Cell(4, 1, 'NOMINAL', 'TB', 0, 'R', $fill);
            $pdf->SetTextColor(0,0,0);
            $pdf->Ln();
            
            $fill = FALSE;
            $gtotal = 0;
            foreach ($sql_medc_plat as $det){
                $sql_medc_itm = $this->db->where('id_medcheck', $det->id_medcheck)->where('id_item_kat', $det->id_item_kat)->get('tbl_trans_medcheck_det')->result();
                $sql_platform = $this->db->where('id', $det->id_platform)->get('tbl_m_platform')->row();
                
                $pdf->SetFont('Arial', '', '10');
                $pdf->Cell(5, .5, $det->no_nota, '', 0, 'L', $fill);
                $pdf->Cell(4, .5, $this->tanggalan->tgl_indo5($det->tgl_simpan), '', 0, 'L', $fill);
                $pdf->Cell(6, .5, $sql_platform->platform.($det->platform != '-' ? $det->platform : ''), '', 0, 'L', $fill);
                $pdf->Cell(4, .5, general::format_angka($det->nominal), '', 0, 'R', $fill);
                $pdf->Ln();
                
                $gtotal += $det->nominal;
            }
            
            $pdf->Ln();
            $pdf->SetTextColor(5,148,19);
            $pdf->SetFont('Arial', 'B', '10');            
            $pdf->Cell(13, .5, '', '', 0, 'R', $fill);
            $pdf->SetTextColor(5,148,19);
            $pdf->Cell(3, .5, 'GRAND TOTAL', 'T', 0, 'R', $fill);
            $pdf->SetTextColor(0,0,0);
            $pdf->Cell(3, .5, general::format_angka($sql_medc->jml_gtotal), 'T', 0, 'R', $fill);
            $pdf->Ln();
            
            $pdf->Cell(13, .5, '', '', 0, 'R', $fill);
            $pdf->SetTextColor(5,148,19);
            $pdf->Cell(3, .5, 'TOTAL BAYAR', '', 0, 'R', $fill);
            $pdf->SetTextColor(0,0,0);
            $pdf->Cell(3, .5, general::format_angka($gtotal), '', 0, 'R', $fill);
            $pdf->Ln();
            
            $pdf->Cell(13, .5, '', '', 0, 'R', $fill);
            $pdf->SetTextColor(5,148,19);
            $pdf->Cell(3, .5, 'KEMBALIAN', 'B', 0, 'R', $fill);
            $pdf->SetTextColor(0,0,0);
            $pdf->Cell(3, .5, general::format_angka($sql_medc->jml_kembali), 'B', 0, 'R', $fill);
            $pdf->Ln(1);
            
            // Kolom Terbilang
            $pdf->SetFont('Arial', 'Bi', '11');
            $pdf->SetTextColor(0,0,0);
            $pdf->Cell(3, .5, '  TERBILANG :  ', 'TB', 0, 'L', $fill);
            $pdf->SetFont('Arial', 'i', '11');
            $pdf->Cell(16, .5, strtoupper(penyebut($sql_medc->jml_gtotal)), 'TB', 0, 'L', $fill);
            $pdf->Ln();
            
            $pdf->Ln(1);
            
            // Generate QR codes
            $qr_data_validasi = 'Telah diverifikasi dan ditandatangani secara elektronik oleh manajemen '.$setting->judul.'. Pasien a/n. '.strtoupper($sql_pasien->nama_pgl).' ('.strtoupper($kode_pasien).')';
            $qr_data_kasir = 'Telah diverifikasi oleh petugas kasir '.$kasir.'. Pada tanggal '.$this->tanggalan->tgl_indo5($sql_medc->tgl_bayar);
            
            $qr_folder = FCPATH.'/file/pasien/'.strtolower($kode_pasien);
            if (!is_dir($qr_folder)) {
                mkdir($qr_folder, 0777, true);
            }
            
            $qr_validasi = $qr_folder.'/qr-validasi-'.strtolower($kode_pasien).'.png';
            $qr_kasir = $qr_folder.'/qr-kasir-'.strtolower(md5($kasir)).'.png';
            
            require_once APPPATH . 'third_party/phpqrcode/qrlib.php';
            
            \QRcode::png($qr_data_validasi, $qr_validasi, QR_ECLEVEL_H, 2, 2);
            \QRcode::png($qr_data_kasir, $qr_kasir, QR_ECLEVEL_H, 2, 2);
            
            // Gambar VALIDASI
            $getY = $pdf->GetY() + 1;
            $pdf->Image($qr_validasi,1,$getY,2,2);
            $pdf->Image($qr_kasir,12.5,$getY,2,2);

            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc->tgl_bayar), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(11.5, .5, 'Validasi', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, 'Petugas Kasir', '', 0, 'L', $fill);
            $pdf->Ln(2.5);
            
            $pdf->SetFont('Arial', '', '10');
            $pdf->Cell(11.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(7.5, .5, '('.$kasir.')', '', 0, 'L', $fill);
            $pdf->Ln();

            $type = $_GET['type'] ?? 'I';

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl . '_KWI' . '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # KUITANSI
    public function pdf_medcheck_nota_dm() {
        if (akses::aksesLogin() == TRUE) {
            $this->load->helper("terbilang");
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_plat      = $this->db->where('id_medcheck', $sql_medc->id)->get('v_medcheck_plat')->result();
            $sql_medc_det       = $this->db->where('id_medcheck', $sql_medc->id)->where('status_pkt', '0')->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();
            $sql_medc_det_sum   = $this->db->select('SUM(diskon) AS diskon, SUM(potongan) AS potongan, SUM(potongan_poin) AS potongan_poin, SUM(subtotal) AS subtotal')->where('id_medcheck', $sql_medc->id)->get('tbl_trans_medcheck_det')->row();
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_pasien_poin    = $this->db->where('id_pasien', $sql_medc->id_pasien)->get('tbl_m_pasien_poin')->row();
            $sql_poli           = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row();
            $sql_pekerjaan      = $this->db->where('id', $sql_pasien->id_pekerjaan)->get('tbl_m_jenis_kerja')->row();
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            $kasir              = (!empty($sql_medc->id_kasir) ? $this->ion_auth->user($sql_medc->id_kasir)->row()->first_name : $this->ion_auth->user()->row()->first_name);

            $judul = "KWITANSI ".strtoupper(general::status_rawat2($sql_medc->tipe));
            
            $this->load->library('MedPDFdm');
            $pdf = new MedPDFdm('P', 'cm', array(12.4,25));
            $pdf->SetAutoPageBreak('auto', 5);
            $pdf->SetMargins(0.75, 0.5, 0.75); 
            $pdf->addPage();
            
            $fill = FALSE;
            $pdf->Ln(0.20);
            $pdf->SetFont('Times', 'B', '8');
            $pdf->Cell(1.5, 0.25, 'No. Faktur', '', 0, 'L', $fill);
            $pdf->Cell(0.25, 0.25, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Times', '', '8');
            $pdf->Cell(5.5, 0.25, $sql_medc->no_nota, '', 0, 'L', $fill);
            $pdf->SetFont('Times', 'B', '8');
            $pdf->Cell(1, 0.25, 'No. RM', '', 0, 'L', $fill);
            $pdf->Cell(0.25, 0.25, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Times', '', '8');
            $pdf->Cell(1.5, 0.25, $sql_pasien->kode, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Times', 'B', '8');
            $pdf->Cell(1.5, 0.25, 'Nama', '', 0, 'L', $fill);
            $pdf->Cell(0.25, 0.25, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Times', '', '8');
            $pdf->Cell(5.5, 0.25, $sql_pasien->nama_pgl, '', 0, 'L', $fill);
            $pdf->SetFont('Times', 'B', '8');
            $pdf->Cell(1, 0.25, 'Tanggal', '', 0, 'L', $fill);
            $pdf->Cell(0.25, 0.25, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Times', '', '8');
            $pdf->Cell(1.5, 0.25, $this->tanggalan->tgl_indo2($sql_medc->tgl_masuk).' '.$this->tanggalan->wkt_indo($sql_medc->tgl_masuk).'-'.$this->tanggalan->wkt_indo($sql_medc->tgl_bayar), '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Times', 'B', '8');
            $pdf->Cell(1.5, 0.25, 'Tgl Lahir', '', 0, 'L', $fill);
            $pdf->Cell(0.25, 0.25, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Times', '', '8');
            $pdf->Cell(5.5, 0.25, $this->tanggalan->tgl_indo2($sql_pasien->tgl_lahir), '', 0, 'L', $fill);
            $pdf->SetFont('Times', 'B', '8');
            $pdf->Cell(1, 0.25, 'Poli', '', 0, 'L', $fill);
            $pdf->Cell(0.25, 0.25, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Times', '', '8');
            $pdf->Cell(1.5, 0.25, $sql_poli->lokasi, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Times', 'B', '8');
            $pdf->Cell(1.5, 0.25, 'Telp / HP', '', 0, 'L', $fill);
            $pdf->Cell(0.25, 0.25, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Times', '', '8');
            $pdf->Cell(5.5, 0.25, $sql_pasien->no_hp, '', 0, 'L', $fill);
            $pdf->SetFont('Times', 'B', '8');
            $pdf->Cell(1, 0.25, 'Kasir', '', 0, 'L', $fill);
            $pdf->Cell(0.25, 0.25, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Times', '', '8');
            $pdf->MultiCell(3, 0.25, (!empty($sql_medc->id_kasir) ? $this->ion_auth->user($sql_medc->id_kasir)->row()->first_name : $this->ion_auth->user()->row()->first_name), 0, 'L');
            // Isi Nota
            $pdf->SetFont('Times', 'B', '8');
            $pdf->Cell(5.5, 0.35, 'Item', 'TB', 0, 'L', $fill);
            $pdf->Cell(1, 0.35, 'Jml', 'TB', 0, 'C', $fill);
            $pdf->Cell(2, 0.35, 'Harga', 'TB', 0, 'R', $fill);
            $pdf->Cell(2.5, 0.35, 'Subtotal', 'TB', 0, 'R', $fill);
            $pdf->Ln();            
            
            $fill = FALSE;
            $no = 1; $gtotal = 0;
            foreach ($sql_medc_det as $det){
                $sql_kat = $this->db->where('id', $det->id_item_kat)->get('tbl_m_kategori')->row();
                $sql_det = $this->db->where('id_medcheck', $det->id_medcheck)->where('id_item_kat', $det->id_item_kat)->where('status_pkt', '0')->where('jml >=', '0')->get('tbl_trans_medcheck_det')->result();
                
                $pdf->SetFont('Times', 'B', '8');
                $pdf->Cell(5.5, 0.35, $sql_kat->keterangan . ' (' . $sql_kat->kategori . ')', '', 0, 'L', $fill);
                $pdf->Ln();
                $pdf->SetFont('Times', '', '8');
                
                $subtotal = 0;
                foreach ($sql_det as $medc) {
                    $total_item = $medc->subtotal;
                    $total_hrg  = $medc->subtotal;
                    $total_disk = $medc->diskon + $medc->potongan;
                    
                    $pdf->Cell(5.5, 0.35, ($medc->status_rc == '1' ? '- ' : '').$medc->item, '', 0, 'L', $fill);
                    $pdf->Cell(1, 0.35, (float)$medc->jml, '', 0, 'C', $fill);
                    $pdf->Cell(2, 0.35, general::format_angka($medc->harga), '', 0, 'R', $fill);
                    $pdf->Cell(2.5, 0.35, general::format_angka($medc->subtotal), '', 0, 'R', $fill);
                    $pdf->Ln();
                    
                    if($medc->diskon > 0){
                        $pdf->Cell(5.5, 0.35, ($medc->disk1 != '0.00' ? 'disk : '.(float)$medc->disk1 : '').($medc->disk2 != '0.00' ? ' + '.(float)$medc->disk2 : '').($medc->disk3 != '0.00' ? ' + '.(float)$medc->disk3 : '').($medc->disk1 != '0.00' || $medc->disk2 != '0.00' || $medc->disk3 != '0.00' ? '%' : '').($medc->potongan > 0 ? ' pot : '.general::format_angka($medc->potongan) : ''), '', 0, 'R', $fill);
                        $pdf->Cell(1, 0.35, '', '', 0, 'C', $fill);
                        $pdf->Cell(2, 0.35, (!empty($total_disk) ? '('.general::format_angka($total_disk).')' : ''), '', 0, 'R', $fill);
                        $pdf->Cell(2.5, 0.35, '', '', 0, 'R', $fill);
                        $pdf->Ln();
                    }
                    
                    
                    # RACIKAN SUUU                   
                    foreach (json_decode($medc->resep) as $racikan) {
                        $pdf->SetFont('Times', 'i', '8'); 
                        $pdf->Cell(5.5, 0.35, '-'.$racikan->item, '', 0, 'L', $fill);
                        $pdf->Cell(1, 0.35, (float)$racikan->jml, '', 0, 'C', $fill);
                        $pdf->Cell(2, 0.35, general::format_angka($racikan->harga), '', 0, 'R', $fill);
                        $pdf->Cell(2.5, 0.35, '', '', 0, 'R', $fill);
                        $pdf->Ln();
                    }
                    
                    $subtotal += $total_item;
                }

                $pdf->SetFont('Times', 'B', '8');
                $pdf->Cell(8.5, 0.35, 'Subtotal', '', 0, 'R', $fill);
                $pdf->Cell(2.5, 0.35, general::format_angka($subtotal), '', 0, 'R', $fill);
                $pdf->Ln();

                $gtotal = $gtotal + $subtotal;
                $number++;         
            }
            
            $sql_platform   = $this->db->where('id', $sql_medc->metode)->get('tbl_m_platform')->row();
            $jml_ongkir     = $sql_medc->jml_ongkir;
            $jml_total      = $sql_medc_det_sum->subtotal + $sql_medc_det_sum->diskon + $sql_medc_det_sum->potongan + $sql_medc_det_sum->potongan_poin;
            $jml_diskon     = $jml_total - $sql_medc_det_sum->subtotal;
            $diskon         = ($jml_diskon / $sql_medc->jml_total) * 100;
            $jml_subtotal   = $sql_medc->jml_total + $jml_ongkir - $jml_diskon;

            $pdf->SetFont('Times', 'B', '8');
            $pdf->Cell(5.5, 0.35, $sql_platform->platform, 'T', 0, 'L', $fill);
            $pdf->Cell(3, 0.35, 'GRAND TOTAL', 'T', 0, 'R', $fill);
            $pdf->Cell(2.5, 0.35, general::format_angka($sql_medc->jml_total), 'T', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, 0.35, 'PARAF', '', 0, 'L', $fill);
            $pdf->Cell(3, 0.35, 'Disc ('.(float) round($diskon, 1).'%)', '', 0, 'R', $fill);
            $pdf->Cell(2.5, 0.35, '-'.general::format_angka($jml_diskon), '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, 0.35, 'Poin : '.($sql_pasien_poin->jml_poin <= 0 ? 0 : (float)$sql_pasien_poin->jml_poin), '', 0, 'L', $fill);
            $pdf->Cell(3, 0.35, 'Ongkir', '', 0, 'R', $fill);
            $pdf->Cell(2.5, 0.35, general::format_angka($jml_ongkir), '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->Cell(5.5, 0.35, '', '', 0, 'L', $fill);
            $pdf->Cell(3, 0.35, 'Harus dibayar', '', 0, 'R', $fill);
            $pdf->Cell(2.5, 0.35, general::format_angka($jml_subtotal), '', 0, 'R', $fill);
            $pdf->Ln();
            
            $jml_tot_byr = 0;
            foreach ($sql_medc_plat as $plat) {
                $sql_plat       = $this->db->where('id', $plat->id_platform)->get('tbl_m_platform')->row();
                $jml_tot_byr    = $jml_tot_byr + $plat->nominal;

                $pdf->Cell(5.5, 0.35, '', '', 0, 'L', $fill);
                $pdf->Cell(3, 0.35, $sql_plat->platform, '', 0, 'R', $fill);
                $pdf->Cell(2.5, 0.35, general::format_angka($plat->nominal), '', 0, 'R', $fill);
                $pdf->Ln();
            }
                   
            $jml_kembali    = $jml_subtotal - $jml_tot_byr;
            $pdf->Cell(5.5, 0.35, '', '', 0, 'L', $fill);
            $pdf->Cell(3, 0.35, 'Kembali', '', 0, 'R', $fill);
            $pdf->Cell(2.5, 0.35, general::format_angka($jml_kembali), '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->SetFont('Times', '', '9');
            $pdf->Cell(11, 0.35, 'Terimakasih atas kunjungannya, semoga lekas sembuh', 'T', 0, 'C', $fill);
            $pdf->Ln();
            $pdf->SetFont('Times', 'B', '9');
            $pdf->Cell(11, 0.35, 'Transaksi yang sudah dibayar tidak dapat dibatalkan', 'B', 0, 'C', $fill);
            $pdf->Ln();

            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl . '_KWI' . '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login', '<div class="alert alert-danger">Authentifikasi gagal, silahkan login ulang!!</div>');
            redirect();
        }
    }
    
    
    # LABEL
    public function pdf_medcheck_label() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_resep           = $this->input->get('id_resep');
            $id_medcheck        = $this->input->get('id');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_plat      = $this->db->where('id_medcheck', $sql_medc->id)->get('v_medcheck_plat')->result();
            $sql_medc_det       = $this->db->where('id_medcheck', $sql_medc->id)->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();
            $sql_medc_res       = $this->db->where('id', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep')->row();
            $sql_medc_res_det   = $this->db->where('id_resep', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep_det')->result();
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';
            $kasir              = (!empty($sql_medc->id_kasir) ? $this->ion_auth->user($sql_medc->id_kasir)->row()->first_name : $this->ion_auth->user()->row()->first_name);

            
            $this->load->library('MedLblPDF');
            $pdf = new MedLblPDF('P', 'cm', 'a4');
            # LEft 1.65
            $pdf->SetMargins(1.40,1,0.1);
            $pdf->SetAutoPageBreak('auto', 9);
            $pdf->header = 0;
            $pdf->addPage('','',false);

            foreach ($sql_medc_res_det as $resep_det){                                
                $pdf->SetFont('Arial', '', '6');
                $pdf->Cell(1, .3, strtoupper($sql_pasien->kode_dpn . $sql_pasien->kode), 'LT', 0, 'L', $fill);
                $pdf->Cell(1.23, .3, '', 'T', 0, 'L', $fill);
                $pdf->Cell(1.23, .3, $this->tanggalan->tgl_indo2($sql_medc->tgl_masuk), 'TR', 0, 'R', $fill);
                $pdf->Cell(0.42, .3, '', '0', 0, '1', $fill); # Separator
                $pdf->Ln();
                $pdf->SetFont('Arial', '', '6');
                $pdf->Cell(3.46, .3, substr($sql_pasien->nama_pgl, 0, 19), 'LR', 0, 'L', $fill);
                $pdf->Cell(0.42, .3, '', '0', 0, '1', $fill); # Separator
                $pdf->Ln();
                $pdf->SetFont('Arial', '', '4.5');
                $pdf->Cell(3.46, .3, substr($resep_det->item, 0, 35), 'LR', 0, 'L', $fill);
                $pdf->Cell(0.42, .3, '', '0', 0, '1', $fill); # Separator
                $pdf->Ln();
                $pdf->SetFont('Arial', 'Bi', '6');
                $pdf->Cell(3.46, .3, (strlen($resep_det->dosis) == '8' ? '' : $resep_det->dosis), 'LR', 0, 'L', $fill);
                $pdf->Cell(0.42, .3, '', '', 0, '1', $fill); # Separator
                $pdf->Ln();
                $pdf->Cell(3.46, .3, '('.(float)$resep_det->jml.' '.$resep_det->satuan.')', 'LR', 0, 'L', $fill);
                $pdf->Cell(0.42, .3, '', '0', 0, '1', $fill); # Separator
                $pdf->Ln();
                $pdf->SetFont('Arial', 'B', '6');
                $pdf->Cell(3.46, .3, '- Semoga Lekas Sembuh -', 'LBR', 0, 'C', $fill);
                $pdf->Cell(0.42, .3, '', '0', 0, '1', $fill); # Separator
                $pdf->Ln(1.3);
            }

            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');

            ob_start();
            $pdf->Output('label_'.str_replace(array('.', ' ', ','), '', strtolower($sql_pasien->nama)).'.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # KWITANSI
    public function pdf_medcheck_kwi() {
        if (akses::aksesLogin() == TRUE) {
            $this->load->helper("terbilang");
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            $id                 = $this->input->get('id_kwi');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_kwi       = $this->db->where('id', general::dekrip($id))->get('tbl_trans_medcheck_kwi')->row();
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $sql_user           = $this->db->where('id_user', $sql_medc_kwi->id_user)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-header-es1.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-header-es2.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-header-es3.png';
            $gambar4            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-header-es4.png';
            $kasir              = (!empty($sql_medc->id_kasir) ? $this->ion_auth->user($sql_medc->id_kasir)->row()->first_name : $this->ion_auth->user()->row()->first_name);
            $fill               = false;
            
            $this->load->library('MedLblPDF');
            $pdf = new MedLblPDF('P', 'cm', array(21.5,33));
            $pdf->SetAutoPageBreak('auto', 6);
            $pdf->header = 0;
            $pdf->addPage('','',false);
                        
            // Gambar Logo Atas 1
            if (file_exists($gambar1)) {
                $pdf->Image($gambar1, 1.3, 1.15, 1.94, 1.21);
            }
            // Gambar Logo Atas 2
            if (file_exists($gambar2)) {
                $pdf->Image($gambar2, 8.7, 1.15, 1.02, 1.15);
            }
            // Gambar Logo Atas 3
            if (file_exists($gambar3)) {
                $pdf->Image($gambar3, 9.85, 1.15, 0.71, 1.59);
            }
            // Gambar Logo Atas 4
            if (file_exists($gambar4)) {
                $pdf->Image($gambar4, 10.75, 1.15, 1.17, 1.23);
            }

            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(11, 1.75, '', 'B', 0, 'L', $fill);
            $pdf->Cell(3, 1.75, 'KWITANSI', 'B', 0, 'C', $fill);
            $pdf->Ln();
            $pdf->Cell(14, .5, '', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'Sudah terima dari', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(7.5, .5, $sql_medc_kwi->dari, '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, 'Rp.', '', 0, '', $fill);
            $pdf->Cell(2.5, .5, general::format_angka($sql_medc_kwi->nominal), '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'Terbilang', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Arial', 'i', '8');
            $pdf->MultiCell(10.5, .5, strtoupper(general::format_angka_str($sql_medc_kwi->nominal)).' RUPIAH', '', 'L');
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, 'Untuk Pembayaran', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(10.5, .5, $sql_medc_kwi->ket, '', 0, 'C', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(10.5, .5, $sql_pasien->nama_pgl, '', 0, 'C', $fill);
            $pdf->Ln();
            
            # Jika diagnosa tidak diisi maka tidak tambpil
            if(!empty($sql_medc_kwi->diagnosa)){
                $pdf->SetFont('Arial', 'B', '9');
                $pdf->Cell(3, .5, 'Diagnosa', '', 0, 'L', $fill);
                $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
                $pdf->SetFont('Arial', '', '9');
                $pdf->MultiCell(10.5, .5, $sql_medc_kwi->diagnosa, '', 'L');
                $pdf->Ln();
                $pdf->Cell(14, .5, '', '', 0, 'L', $fill);
                $pdf->Ln();
            }
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(3, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, '', '', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(7.5, .5, '', '', 0, 'L', $fill);
            $pdf->Cell(3, .5, 'Semarang, '.$this->tanggalan->tgl_indo3($sql_medc_kwi->tgl_masuk), '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->Cell(14, .5, '', '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '7');
            $pdf->Cell(14, .5, $setting->judul, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(14, .5, $setting->alamat, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(9, .5, $setting->tlp, 'B', 0, 'L', $fill);
            $pdf->Cell(5, .5, $sql_user->nama, 'B', 0, 'R', $fill);
            $pdf->Ln();

            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');

            ob_start();
            $pdf->Output($sql_pasien->nama_pgl.'_KWI'. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # RESEP
    public function pdf_medcheck_resep() {
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_medcheck        = $this->input->get('id');
            $id_resep           = $this->input->get('id_resep');
            
            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_res       = $this->db->where('id', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep')->row();
            $sql_medc_rsp       = $this->db->where('id_resep', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep_det')->result();
            $sql_poli           = $this->db->where('id', $sql_medc->id_poli)->get('tbl_m_poli')->row(); 
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $gambar1            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-esensia-2.png';
            $gambar2            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-bw-bg2-1440px.png';
            $gambar3            = FCPATH.'/assets/theme/admin-lte-3/dist/img/logo-footer.png';

            $judul  = "RESEP";
            
            $this->load->library('MedResepPDF');
            $pdf = new MedResepPDF('P', 'cm', array(11,20));
            $pdf->SetAutoPageBreak('auto', 7);
            $pdf->SetMargins(1,0.35,1);
            $pdf->header = 0;
            $pdf->addPage('','',false);
                                    
            // Blok ID PASIEN
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(4, .5, '', '0', 0, 'L', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(5.5, .5, $setting->kota.', '.$this->tanggalan->tgl_indo3($sql_medc->tgl_masuk), '', 0, 'R', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(1, .5, 'Dokter', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->MultiCell(7, .5, (!empty($sql_dokter->nama_dpn) ? $sql_dokter->nama_dpn.' ' : '').$sql_dokter->nama.(!empty($sql_dokter->nama_blk) ? ', '.$sql_dokter->nama_blk.' ' : ''), '0', 'L');
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(1, .5, 'SIP', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '0', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(8, .5, $sql_dokter->sip, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', 'B', '9');
            $pdf->Cell(1, .5, 'Poli', '', 0, 'L', $fill);
            $pdf->Cell(.5, .5, ':', '', 0, 'C', $fill);
            $pdf->SetFont('Arial', '', '9');
            $pdf->Cell(7, .5, $sql_poli->lokasi, '', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(9.5, .5, '', 'T', 0, 'L', $fill);
            $pdf->Ln();
            
            # DATA RESEP            
            $fill = FALSE;
            $no   = 1;
            foreach ($sql_medc_rsp as $res){
                $sql_medc_rsp_rc = $this->db->where('id_resep_det', $res->id)->get('tbl_trans_medcheck_resep_det_rc')->result();
                
                $pdf->SetFont('Arial', 'B', '9');
                $pdf->Cell(.5, .5, 'R/', '', 0, 'L', $fill);
                $pdf->SetFont('Arial', '', '9');
                $pdf->Cell(7, .5, $res->item, '', 0, 'L', $fill);
                $pdf->Cell(2, .5, (empty($res->resep) ? (float)$res->jml.' '.$res->satuan : ''), '', 0, 'L', $fill);
                $pdf->Ln();
                
                # Item Racikan
                foreach ($sql_medc_rsp_rc as $res_rc){
                    $pdf->Cell(.5, .25, '', '', 0, 'L', $fill);
                    $pdf->SetFont('Arial', 'i', '7');
                    $pdf->Cell(7, .25, '- '.$res_rc->item, '', 0, 'L', $fill);
                    $pdf->Cell(2, .25, (float)$res_rc->jml.' '.$res_rc->satuan, '', 0, 'L', $fill);
                    $pdf->Ln();                    
                }
                
                # Dosis resep
                $pdf->SetFont('Arial', 'i', '8');
                $pdf->Cell(.5, .5, '', '', 0, 'L', $fill);
                $pdf->Cell(9, .5, ($res->dosis != '  Tiap  ' ? (!empty($res->dosis) ? '('.$res->dosis.' / ' : '(').$res->dosis_ket.')' : ''), '', 0, 'L', $fill);
                $pdf->Ln();                
            }
            
            $pdf->Ln();
            $pdf->Cell(9.5, .5, 'TTD Pasien', 'T', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->SetFont('Arial', '', '7');
            $pdf->Cell(1.5, .3, '', 'TLR', 0, 'L', $fill);
            $pdf->Cell(1, .3, 'Pro', '', 0, 'L', $fill);
            $pdf->Cell(.5, .3, ':', '0', 0, 'C', $fill);
            $pdf->Cell(6.5, .3, $sql_pasien->nama_pgl.' ('.$sql_pasien->jns_klm.') / '.$kode_pasien, '0', 0, 'L', $fill);
            
            if(!empty($sql_medc->ttd_obat)){
                # Gambar TTD Pasien
                $gambar4    = FCPATH.$sql_medc->ttd_obat;
                $getY       = $pdf->GetY();
                $pdf->Image($gambar4,1,$getY,2,2);
            }
            
            $pdf->Ln();
            $pdf->Cell(1.5, .3, '', 'LR', 0, 'L', $fill);
            $pdf->Cell(1, .3, 'Umur', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .3, ':', '0', 0, 'C', $fill);
            $pdf->Cell(6.5, .3, $this->tanggalan->usia_lkp($sql_pasien->tgl_lahir), '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(1.5, .3, '', 'LRB', 0, 'L', $fill);
            $pdf->Cell(1, .3, 'Alamat', '0', 0, 'L', $fill);
            $pdf->Cell(.5, .3, ':', '0', 0, 'C', $fill);
            $pdf->MultiCell(6.5, .3, (!empty($sql_pasien->alamat) ? $sql_pasien->alamat : (!empty($sql_pasien->alamat_dom) ? $sql_pasien->alamat_dom : '-')), '0', 'L');
            $pdf->Ln();
            $pdf->Cell(2, .3, 'Diserahkan Oleh', '', 0, 'L', $fill);
            $pdf->Cell(.5, .3, ':', '0', 0, 'C', $fill);
            $pdf->Cell(6, .3, $this->ion_auth->user($sql_medc->id_farmasi)->row()->first_name, '0', 0, 'L', $fill);
            $pdf->Ln();
            $pdf->Cell(2, .3, $this->tanggalan->tgl_indo5($sql_medc->tgl_ttd), '', 0, 'L', $fill);
            
            $type = (isset($_GET['type']) ? $_GET['type'] : 'I');
            
            ob_start();
            $pdf->Output($sql_pasien->nama_pgl. '.pdf', $type);
            ob_end_flush();
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # XLS LABEL
    public function xls_medcheck_label(){
        if (akses::aksesLogin() == TRUE) {
            $setting            = $this->db->get('tbl_pengaturan')->row();
            $id_resep           = $this->input->get('id_resep');
            $id_medcheck        = $this->input->get('id');

            $sql_medc           = $this->db->where('id', general::dekrip($id_medcheck))->get('tbl_trans_medcheck')->row();
            $sql_medc_plat      = $this->db->where('id_medcheck', $sql_medc->id)->get('v_medcheck_plat')->result();
            $sql_medc_det       = $this->db->where('id_medcheck', $sql_medc->id)->group_by('id_item_kat')->get('tbl_trans_medcheck_det')->result();
            $sql_medc_res       = $this->db->where('id', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep')->row();
            $sql_medc_res_det   = $this->db->where('id_resep', general::dekrip($id_resep))->get('tbl_trans_medcheck_resep_det')->result();
            $sql_pasien         = $this->db->where('id', $sql_medc->id_pasien)->get('tbl_m_pasien')->row(); 
            $sql_dokter         = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
            $kode_pasien        = $sql_pasien->kode_dpn.$sql_pasien->kode;
            $res                = str_replace('/','', $sql_medc_res->no_resep);
            $no_res             = strtolower($res);

            $objPHPExcel = new PHPExcel();

            // Header Tabel Nota
            $objPHPExcel->getActiveSheet()->getStyle('A1:N1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objPHPExcel->getActiveSheet()->getStyle('A1:N1')->getFont()->setBold(TRUE);

            $objPHPExcel->setActiveSheetIndex(0)
                    ->setCellValue('A1', '')
                    ->setCellValue('B1', 'Tanggal')
                    ->setCellValue('C1', 'RM')
                    ->setCellValue('D1', 'Pasien')
                    ->setCellValue('E1', 'Tgl Lahir')
                    ->setCellValue('F1', 'L/P')
                    ->setCellValue('G1', 'Item')
                    ->setCellValue('H1', 'Qty')
                    ->setCellValue('I1', 'Satuan')
                    ->setCellValue('J1', 'Exp')
                    ->setCellValue('K1', 'Dosis')
                    ->setCellValue('L1', 'Keterangan')
                    ->setCellValue('M1', 'Dokter')
                    ->setCellValue('N1', 'Judul');

            $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(2);
            $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(13);
            $objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(10);
            $objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(65);
            $objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(30);
            $objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(14);
            $objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(50);
            $objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(8);
            $objPHPExcel->getActiveSheet()->getColumnDimension('I')->setWidth(10);
            $objPHPExcel->getActiveSheet()->getColumnDimension('J')->setWidth(13);
            $objPHPExcel->getActiveSheet()->getColumnDimension('K')->setWidth(40);
            $objPHPExcel->getActiveSheet()->getColumnDimension('L')->setWidth(30);
            $objPHPExcel->getActiveSheet()->getColumnDimension('M')->setWidth(65);
            $objPHPExcel->getActiveSheet()->getColumnDimension('N')->setWidth(40);

            if(!empty($sql_medc_res_det)){
                $no    = 1;
                $cell  = 2;
                $total = 0;
                foreach ($sql_medc_res_det as $resep_det){
                    $sql_doc    = $this->db->where('id_user', $sql_medc->id_dokter)->get('tbl_m_karyawan')->row();
                    $item       = $this->db->where('id', $resep_det->id_item)->get('tbl_m_produk')->row();

                    $objPHPExcel->getActiveSheet()->getStyle('B'.$cell.':C'.$cell)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle('D'.$cell)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);
                    $objPHPExcel->getActiveSheet()->getStyle('E'.$cell.':F'.$cell)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle('G'.$cell)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);
                    $objPHPExcel->getActiveSheet()->getStyle('H'.$cell.':J'.$cell)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
                    $objPHPExcel->getActiveSheet()->getStyle('K'.$cell.':M'.$cell)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);
                    
                    $objPHPExcel->setActiveSheetIndex(0)
                            ->setCellValue('A'.$cell, '')
                            ->setCellValue('B'.$cell, $this->tanggalan->tgl_indo($resep_det->tgl_simpan))
                            ->setCellValue('C'.$cell, $kode_pasien)
                            ->setCellValue('D'.$cell, $sql_pasien->nama)
                            ->setCellValue('E'.$cell, $this->tanggalan->tgl_indo($sql_pasien->tgl_lahir).' ('.$this->tanggalan->usia_lkp($sql_pasien->tgl_lahir).')')
                            ->setCellValue('F'.$cell, general::jns_klm($sql_pasien->jns_klm))
                            ->setCellValue('G'.$cell, $resep_det->item)
                            ->setCellValue('H'.$cell, (float)$resep_det->jml)
                            ->setCellValue('I'.$cell, $resep_det->satuan)
                            ->setCellValue('J'.$cell, ($resep_det->tgl_ed != '0000-00-00' ? $this->tanggalan->tgl_indo($resep_det->tgl_ed) : ''))
                            ->setCellValue('K'.$cell, ($resep_det->dosis == '  Tiap  ' ? '' : $resep_det->dosis))
                            ->setCellValue('L'.$cell, $resep_det->dosis_ket)
                            ->setCellValue('M'.$cell, (!empty($sql_doc->nama_dpn) ? $sql_doc->nama_dpn.' ' : '').$sql_doc->nama.(!empty($sql_doc->nama_blk) ? ', '.$sql_doc->nama_blk : ''))
                            ->setCellValue('N'.$cell, $setting->judul);

                    $no++;
                    $cell++;
                }
            }

            // Rename worksheet
            $objPHPExcel->getActiveSheet()->setTitle('Label Farmasi');

            /** Page Setup * */
            $objPHPExcel->getActiveSheet()->getPageSetup()->setOrientation(PHPExcel_Worksheet_PageSetup::ORIENTATION_PORTRAIT);
            $objPHPExcel->getActiveSheet()->getPageSetup()->setPaperSize(PHPExcel_Worksheet_PageSetup::PAPERSIZE_A4);

            /* -- Margin -- */
            $objPHPExcel->getActiveSheet()
                    ->getPageMargins()->setTop(0.25);
            $objPHPExcel->getActiveSheet()
                    ->getPageMargins()->setRight(0);
            $objPHPExcel->getActiveSheet()
                    ->getPageMargins()->setLeft(0);
            $objPHPExcel->getActiveSheet()
                    ->getPageMargins()->setFooter(0);


            /** Page Setup * */
            // Set document properties
            $objPHPExcel->getProperties()->setCreator("Mikhael Felian Waskito")
                    ->setLastModifiedBy($this->ion_auth->user()->row()->username)
                    ->setTitle("Stok")
                    ->setSubject("Aplikasi Bengkel POS")
                    ->setDescription("Kunjungi http://tigerasoft.co.id")
                    ->setKeywords($setting->judul_app)
                    ->setCategory("Untuk mencetak nota dot matrix");



            // Redirect output to a client’s web browser (Excel5)
            header('Content-Type: application/vnd.ms-excel');
            // header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
            header('Content-Disposition: attachment;filename="label_'.$no_res.'_'.str_replace(array(' ','.'),'_', strtolower($sql_pasien->nama)).'.xls"');

            // If you're serving to IE over SSL, then the following may be needed
            header('Expires: Mon, 15 Feb 1992 05:00:00 GMT'); // Date in the past
            header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT'); // always modified
            header('Cache-Control: cache, must-revalidate'); // HTTP/1.1
            header('Pragma: public'); // HTTP/1.0

            ob_clean();
            $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
            $objWriter->save('php://output');
            exit;
        }else{
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }


    # Pencarian modul pendaftaran
    public function set_cari_daftar() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id_medcheck');
            $nama       = $this->input->post('pasien');
            $tipe       = $this->input->post('tipe');
            $poli       = $this->input->post('poli');
            $tgl        = $this->input->post('tgl_daftar');
            $status_byr = $this->input->post('status_bayar');
            $tipe       = $this->input->post('tipe');

            $sql        = $sql   = $this->db->select('*')->where('status_akt !=', '2')->like('nama',$nama)->limit(10)->get('tbl_pendaftaran');
            
            $sql_row    = $sql->row();
            $sql_jml    = $sql->num_rows();
            
            redirect(base_url('medcheck/data_pendaftaran.php?'.(!empty($tgl) ? 'filter_tgl='.$this->tanggalan->tgl_indo_sys($tgl) : '').(!empty($nama) ? 'filter_nama='.$nama : '').(!empty($poli) ? '&poli='.$poli : '').(!empty($tipe) ? '&tipe='.$tipe : '').(!empty($id) ? '&id='.general::enkrip($id) : '')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    # Pencarian modul Antrian
    public function set_cari_antrian() {
        if (akses::aksesLogin() == TRUE) {
            $poli       = $this->input->post('poli');
            $tgl        = $this->input->post('tgl_daftar');

            $sql        = $sql   = $this->db->like('cnoro',$poli)->like('ddate',$tgl)->get('tr_queue');
            
            $sql_row    = $sql->row();
            $sql_jml    = $sql->num_rows();
            
            redirect(base_url('medcheck/data_antrian.php?'.(!empty($tgl) ? 'filter_tgl='.$this->tanggalan->tgl_indo_sys($tgl) : '').(!empty($poli) ? 'filter_poli='.$poli : '')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    

    public function set_cari_medcheck() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id_medcheck');
            $nama       = $this->input->post('pasien');
            $poli       = $this->input->post('poli');
            $tipe       = $this->input->post('tipe');
            $tgl        = $this->input->post('tgl');
            $status_byr = $this->input->post('status_bayar');
            
            redirect(base_url('medcheck/index.php?tipe=1'.(!empty($nama) ? '&filter_nama='.$nama : '').(!empty($poli) ? '&filter_poli='.$poli : '').(!empty($id) ? '&id='.general::enkrip($id) : '').(!empty($tgl) ? '&filter_tgl='.$this->tanggalan->tgl_indo_sys($tgl) : '').(!empty($tipe) ? '&filter_tipe='.$tipe : '').(isset($status_byr) ? '&filter_bayar='.$status_byr : '')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_cari_medcheck_kons() {
        if (akses::aksesLogin() == TRUE) {
            $nama       = $this->input->post('pasien');

            $sql        = $this->db
                                ->select('tbl_trans_medcheck.id, tbl_trans_medcheck.tgl_masuk, tbl_trans_medcheck.no_nota, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.tipe AS tipe_rawat, tbl_m_pasien.id AS id_pasien, tbl_m_pasien.nik, tbl_m_pasien.nama, tbl_m_pasien.nama_pgl, tbl_m_pasien.no_hp, tbl_m_pasien.tgl_lahir, tbl_m_pasien.jns_klm, tbl_m_pasien.alamat, tbl_m_poli.lokasi AS poli')
                                ->join('tbl_m_pasien', 'tbl_m_pasien.id=tbl_trans_medcheck.id_pasien')
                                ->join('tbl_m_poli', 'tbl_m_poli.id=tbl_trans_medcheck.id_poli')
                                ->where('tbl_trans_medcheck.status_hps', '0')
                                ->like('tbl_trans_medcheck.pasien', $nama)
                                ->get('tbl_trans_medcheck');
            
            $sql_row    = $sql->row();
            $sql_jml    = $sql->num_rows();
            
            redirect(base_url('medcheck/data_konsul_cari.php?tipe=1'.(!empty($nama) ? '&filter_nama='.$nama : '').(!empty($sql_jml) ? '&jml='.$sql_jml : '')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_cari_medcheck_rad() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id_medcheck');
            $nama       = $this->input->post('pasien');
            $tipe       = $this->input->post('tipe');
            $tgl        = $this->input->post('tgl');
            $status     = $this->input->post('status');

            $sql        = $this->db
                                ->select('tbl_trans_medcheck.id, tbl_trans_medcheck.tgl_masuk, tbl_trans_medcheck.no_nota, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.tipe AS tipe_rawat, tbl_m_pasien.id AS id_pasien, tbl_m_pasien.nik, tbl_m_pasien.nama, tbl_m_pasien.nama_pgl, tbl_m_pasien.no_hp, tbl_m_pasien.tgl_lahir, tbl_m_pasien.jns_klm, tbl_m_pasien.alamat, tbl_m_poli.lokasi AS poli')
                                ->join('tbl_m_pasien', 'tbl_m_pasien.id=tbl_trans_medcheck.id_pasien')
                                ->join('tbl_m_poli', 'tbl_m_poli.id=tbl_trans_medcheck.id_poli')
                                ->where('tbl_trans_medcheck.status_hps', '0')
                                ->like('DATE(tbl_trans_medcheck.tgl_masuk)', $this->tanggalan->tgl_indo_sys($tgl))
                                ->like('tbl_trans_medcheck.id', $id)
                                ->like('tbl_trans_medcheck.pasien', $nama)
                                ->like('tbl_trans_medcheck.tipe', $tipe)
                                ->like('tbl_trans_medcheck.status_bayar', $status_byr)
                                ->get('tbl_trans_medcheck');
            
            $sql_row    = $sql->row();
            $sql_jml    = $sql->num_rows();
            
            redirect(base_url('medcheck/data_radiologi.php?status='.$status.(!empty($nama) ? '&filter_nama='.$nama : '').(!empty($id) ? '&id='.general::enkrip($id) : '').(!empty($tgl) ? '&filter_tgl='.$this->tanggalan->tgl_indo_sys($tgl) : '').(!empty($tipe) ? '&filter_tipe='.$tipe : '')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_cari_medcheck_batal() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id_medcheck');
            $nama       = $this->input->post('pasien');
            $tipe       = $this->input->post('tipe');
            $tgl        = $this->input->post('tgl');
            $status_byr = $this->input->post('status_bayar');

            $sql        = $this->db
                                   ->like('DATE(tgl_masuk)', $this->tanggalan->tgl_indo_sys($tgl))
                                   ->like('id', $id)
                                   ->like('pasien', $nama)
                                   ->like('tipe', $tipe)
                                   ->like('status_bayar', $status_byr)
                                   ->get('v_medcheck_hapus');
            
            $sql_row    = $sql->row();
            $sql_jml    = $sql->num_rows();
            
            redirect(base_url('medcheck/data_hapus.php?tipe=1'.(!empty($nama) ? '&filter_nama='.$nama : '').(!empty($id) ? '&id='.general::enkrip($id) : '').(!empty($tgl) ? '&filter_tgl='.$this->tanggalan->tgl_indo_sys($tgl) : '').(!empty($tipe) ? '&filter_tipe='.$tipe : '').(isset($status_byr) ? '&filter_bayar='.$status_byr : '')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_cari_medcheck_bayar() {
        if (akses::aksesLogin() == TRUE) {
            $id         = $this->input->post('id_medcheck');
            $nama       = $this->input->post('pasien');
            $tgl_msk    = $this->input->post('tgl');

            $sql        = $this->db
                                ->select('tbl_trans_medcheck.id, tbl_trans_medcheck.tgl_masuk, tbl_trans_medcheck.no_nota, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.tipe AS tipe_rawat, tbl_m_pasien.id AS id_pasien, tbl_m_pasien.nik, tbl_m_pasien.nama, tbl_m_pasien.nama_pgl, tbl_m_pasien.no_hp, tbl_m_pasien.tgl_lahir, tbl_m_pasien.jns_klm, tbl_m_pasien.alamat, tbl_m_poli.lokasi AS poli')
                                ->join('tbl_m_pasien', 'tbl_m_pasien.id=tbl_trans_medcheck.id_pasien')
                                ->join('tbl_m_poli', 'tbl_m_poli.id=tbl_trans_medcheck.id_poli')
                                ->where('tbl_trans_medcheck.status >=', '5')
                                ->where('tbl_trans_medcheck.status_bayar !=', '1')
                                ->like('tbl_trans_medcheck.tgl_masuk', $this->tanggalan->tgl_indo_sys($tgl_msk))
                                ->like('tbl_trans_medcheck.pasien', $nama)
                                ->get('tbl_trans_medcheck');
            
            $sql_row    = $sql->row();
            $sql_jml    = $sql->num_rows();
            
            redirect(base_url('medcheck/data_pemb.php?tipe=1'.(!empty($nama) ? '&filter_nama='.$nama : '').(!empty($tgl_msk) ? '&filter_tgl='.$this->tanggalan->tgl_indo_sys($tgl_msk) : '')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function set_cari_konsul() {
        if (akses::aksesLogin() == TRUE) {
            $nama       = $this->input->post('judul');

            $sql        = $this->db
                                ->select('id')
                                ->where('id_parent', '0')
                                ->like('judul', $nama)
                                ->get('tbl_trans_konsul');
            
            $sql_row    = $sql->row();
            $sql_jml    = $sql->num_rows();
            
            redirect(base_url('medcheck/data_konsul.php?'.(!empty($nama) ? 'filter_judul='.$nama.'&' : '').(!empty($sql_jml) ? 'jml='.$sql_jml : '')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_cari_resep() {
        if (akses::aksesLogin() == TRUE) {
            $f_nama = $this->input->post('pasien');
            $f_tgl  = $this->input->post('tgl');
                        
            redirect(base_url('medcheck/resep/data_resep.php?'.(!empty($f_tgl) ? 'filter_tgl='.$this->tanggalan->tgl_indo_sys($f_tgl).'&' : '').(!empty($f_nama) ? 'filter_nama='.$f_nama.'&' : '').(!empty($sql_jml) ? 'jml='.$sql_jml : '')));
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function json_pasien() {
        if (akses::aksesLogin() == TRUE) {
            $term  = $this->input->get('term');
            $sql   = $this->db->select('id, kode, kode_dpn, nik, nama_pgl, alamat, jns_klm, tgl_lahir')
                              ->like('nama',$term)
                              ->or_like('nik',$term)
                              ->or_like('alamat',$term)
                              ->limit(200)->get('tbl_m_pasien')->result();
            
            if(!empty($sql)){
                foreach ($sql as $sql){
                    $produk[] = array(
                        'id'         => $sql->id,
                        'id_pas'     => general::enkrip($sql->id),
                        'kode'       => $sql->kode_dpn.$sql->kode,
                        'nik'        => $sql->nik,
                        'nama'       => $sql->nama_pgl,
                        'nama2'      => $sql->nama,
                        'tgl_lahir'  => $sql->tgl_lahir,
                        'jns_klm'    => $sql->jns_klm,
                        'alamat'     => $sql->alamat,
                    );
                }
                
                if(!empty($term)){
                    echo json_encode($produk);
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function json_pasien_gc() {
        if (akses::aksesLogin() == TRUE) {
            $term  = $this->input->get('term');
            $sql   = $this->db->select('id, kode, kode_dpn, nik, nama_pgl, alamat, jns_klm, tgl_lahir')
                              ->like('nama',$term)
                              ->or_like('nik',$term)
                              ->or_like('alamat',$term)
                              ->limit(200)->get('tbl_m_pasien')->result();
            
            if(!empty($sql)){
                foreach ($sql as $sql){
                    $produk[] = array(
                        'id'         => $sql->id,
                        'id_pas'     => general::enkrip($sql->id),
                        'kode'       => $sql->kode_dpn.$sql->kode,
                        'nik'        => $sql->nik,
                        'nama'       => $sql->nama_pgl,
                        'nama2'      => $sql->nama,
                        'tgl_lahir'  => $sql->tgl_lahir,
                        'jns_klm'    => $sql->jns_klm,
                        'alamat'     => $sql->alamat,
                    );
                }
                
                if(!empty($term)){
                    echo json_encode($produk);
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function json_dokter() {
        if (akses::aksesLogin() == TRUE) {
            $term  = $this->input->get('term');
            $sql   = $this->db->select('id, id_user, kode, nik, nama, nama_dpn, nama_blk')->like('nama',$term)->where('id_user_group', '10')->get('tbl_m_karyawan')->result();
            
            if(!empty($sql)){
                foreach ($sql as $sql){
                    $produk[] = array(
                        'id'         => $sql->id,
                        'id_user'    => $sql->id_user,
                        'kode'       => $sql->kode,
                        'nik'        => $sql->nik,
                        'nama'       => (!empty($sql->nama_dpn) ? $sql->nama_dpn.' ' : '').$sql->nama.(!empty($sql->nama_blk) ? ', '.$sql->nama_blk : ''),
                    );
                }
                echo json_encode($produk);
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function json_item() {
        // Check if this is an AJAX request
        if (!$this->input->is_ajax_request()) {
            exit('No direct script access allowed');
        }
        
        if (akses::aksesLogin() == TRUE) {
            $term  = $this->input->get('term');
            $stat  = $this->input->get('status');
            $page  = $this->input->get('page');
            $sg    = $this->db->where('status', '1')->get('tbl_m_gudang')->row()->status;
            
            switch ($page){
                default:
                    $sql = $this->db->select('tbl_m_produk.id, tbl_m_produk.id_satuan, tbl_m_produk.kode, tbl_m_produk.produk, tbl_m_produk.produk_alias, tbl_m_produk.produk_kand, tbl_m_produk.jml, tbl_m_produk.harga_jual, tbl_m_produk.harga_beli, tbl_m_produk.harga_beli, tbl_m_produk.status_brg_dep, tbl_m_produk.status_racikan')
                                    ->where('status_hps', '0')
                                    ->where("(tbl_m_produk.produk LIKE '%" . $term . "%' OR tbl_m_produk.produk_alias LIKE '%" . $term . "%' OR tbl_m_produk.produk_kand LIKE '%" . $term . "%' OR tbl_m_produk.kode LIKE '%" . $term . "%' OR tbl_m_produk.barcode LIKE '" . $term . "')")
                                    ->order_by('tbl_m_produk.jml', ($_GET['mod'] == 'beli' ? 'asc' : 'desc'))
                                    ->get('tbl_m_produk')->result();
                    break;
                    
                case 'tindakan':
                    $sql = $this->db->select('tbl_m_produk.id, tbl_m_produk.id_satuan, tbl_m_produk.kode, tbl_m_produk.produk, tbl_m_produk.produk_alias, tbl_m_produk.produk_kand, tbl_m_produk.jml, tbl_m_produk.harga_jual, tbl_m_produk.harga_beli, tbl_m_produk.harga_beli, tbl_m_produk.status_brg_dep')
                                    ->where("(tbl_m_produk.produk LIKE '%" . $term . "%' OR tbl_m_produk.produk_alias LIKE '%" . $term . "%' OR tbl_m_produk.produk_kand LIKE '%" . $term . "%' OR tbl_m_produk.kode LIKE '%" . $term . "%' OR tbl_m_produk.barcode LIKE '" . $term . "')")
                                    ->where('tbl_m_produk.status', '2')
                                    ->where('status_hps', '0')
                                    ->or_where('tbl_m_produk.status', '6')
                                    ->order_by('tbl_m_produk.jml', ($_GET['mod'] == 'beli' ? 'asc' : 'desc'))
                                    ->get('tbl_m_produk')->result();
                    break;
                    
                case 'lab':
                    $sql = $this->db->select('tbl_m_produk.id, tbl_m_produk.id_satuan, tbl_m_produk.kode, tbl_m_produk.produk, tbl_m_produk.produk_alias, tbl_m_produk.produk_kand, tbl_m_produk.jml, tbl_m_produk.harga_jual, tbl_m_produk.harga_beli, tbl_m_produk.harga_beli, tbl_m_produk.status_brg_dep')
                                    ->where('tbl_m_produk.status', '3')
                                    ->where('status_hps', '0')
//                                    ->or_where('tbl_m_produk.status', '6')
                                    ->where("(tbl_m_produk.produk LIKE '%" . $term . "%' OR tbl_m_produk.produk_alias LIKE '%" . $term . "%' OR tbl_m_produk.produk_kand LIKE '%" . $term . "%' OR tbl_m_produk.kode LIKE '%" . $term . "%' OR tbl_m_produk.barcode LIKE '" . $term . "')")
                                    ->get('tbl_m_produk')->result();
                    break;
                    
                case 'rad':
                    $sql = $this->db->select('tbl_m_produk.id, tbl_m_produk.id_satuan, tbl_m_produk.kode, tbl_m_produk.produk, tbl_m_produk.produk_alias, tbl_m_produk.produk_kand, tbl_m_produk.jml, tbl_m_produk.harga_jual, tbl_m_produk.harga_beli, tbl_m_produk.harga_beli, tbl_m_produk.status_brg_dep')
                                    ->where("(tbl_m_produk.produk LIKE '%" . $term . "%' OR tbl_m_produk.produk_alias LIKE '%" . $term . "%' OR tbl_m_produk.produk_kand LIKE '%" . $term . "%' OR tbl_m_produk.kode LIKE '%" . $term . "%' OR tbl_m_produk.barcode LIKE '" . $term . "')")
                                    ->where('tbl_m_produk.status', '5')
                                    ->where('status_hps', '0')
//                                    ->or_where('tbl_m_produk.status', '6')
                                    ->order_by('tbl_m_produk.jml', ($_GET['mod'] == 'beli' ? 'asc' : 'desc'))
                                    ->get('tbl_m_produk')->result();
                    break;
                    
                case 'obat':
                    $sql = $this->db->select('tbl_m_produk.id, tbl_m_produk.id_satuan, tbl_m_produk.kode, tbl_m_produk.produk, tbl_m_produk.produk_alias, tbl_m_produk.produk_kand, tbl_m_produk.jml, tbl_m_produk.harga_jual, tbl_m_produk.harga_beli, tbl_m_produk.harga_beli, tbl_m_produk.status_brg_dep, tbl_m_produk.status_racikan')
                                    ->where("(tbl_m_produk.produk LIKE '%" . $term . "%' OR tbl_m_produk.produk_alias LIKE '%" . $term . "%' OR tbl_m_produk.produk_kand LIKE '%" . $term . "%' OR tbl_m_produk.kode LIKE '%" . $term . "%' OR tbl_m_produk.barcode LIKE '" . $term . "')")
                                    ->where('tbl_m_produk.status', '4')
                                    ->where('status_hps', '0')
//                                    ->or_where('tbl_m_produk.status', '6')
                                    ->order_by('tbl_m_produk.jml', ($_GET['mod'] == 'beli' ? 'asc' : 'desc'))
                                    ->get('tbl_m_produk')->result();
                    break;
            }

            if(!empty($sql)){
                foreach ($sql as $sql){
                    $sql_satuan = $this->db->where('id', $sql->id_satuan)->get('tbl_m_satuan')->row();
                    $sql_stok   = $this->db->select('SUM(jml * jml_satuan) AS jml')->where('id_produk', $sql->id)->where('id_gudang', $sg)->get('tbl_m_produk_stok')->row();
                        
                    $produk[] = [
                            'id'            => general::enkrip($sql->id),
                            'kode'          => $sql->kode,
                            'name'          => $sql->produk,
                            'alias'         => (!empty($sql->produk_alias) ? $sql->produk_alias : ''),
                            'kandungan'     => (!empty($sql->produk_kand) ? '('.strtolower($sql->produk_kand).')' : ''),
                            'jml'           => ($sql_stok->jml < 0 ? '0' : $sql_stok->jml.' '.$sql_satuan->satuanTerkecil),
                            'satuan'        => $sql_satuan->satuanTerkecil,
                            'harga'         => (float)$sql->harga_jual,
                            'harga_beli'    => (float)$sql->harga_beli,
                            'harga_grosir'  => (float)$sql->harga_grosir,
                            'status_racikan'=> (int)$sql->status_racikan
                    ];
                }

                return $this->output
                    ->set_content_type('application/json')
                    ->set_status_header(200)
                    ->set_output(json_encode($produk));
            } else {
                return $this->output
                    ->set_content_type('application/json')
                    ->set_status_header(200)
                    ->set_output(json_encode([]));
            }
        } else {
            return $this->output
                ->set_content_type('application/json')
                ->set_status_header(401)
                ->set_output(json_encode(['error' => 'Authentication failed']));
        }
    }
    
    public function json_icd() {
        if (akses::aksesLogin() == TRUE) {
            $term = $this->input->get('term');
            $stat = $this->input->get('status');
            
            $sql = $this->db->select('id, kode, icd')
                                ->where("(kode LIKE '%".$term."%' OR icd LIKE '%".$term."%')")
                           ->limit(500)
                           ->get('tbl_m_icd')
                           ->result();

            if(!empty($sql)){
                foreach ($sql as $sql){
                    $produk[] = array(
                        'id'            => $sql->id,
                        'kode'          => $sql->kode,
                        'diagnosa'      => $sql->icd,
                        'diagnosa_en'   => $sql->icd,
                    );
                }
                
        return $this->output
        ->set_content_type('application/json')
                    ->set_status_header(200)
        ->set_output(json_encode($produk));
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function json_po() {
        if (akses::aksesLogin() == TRUE) {
            $term  = $this->input->get('term');
            $sql   = $this->db
                          ->select('tbl_trans_medcheck.id, tbl_trans_medcheck.tgl_masuk, tbl_trans_medcheck.no_nota, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.tipe AS tipe_rawat, tbl_m_pasien.id AS id_pasien, tbl_m_pasien.nik, tbl_m_pasien.nama, tbl_m_pasien.nama_pgl, tbl_m_pasien.no_hp, tbl_m_pasien.tgl_lahir, tbl_m_pasien.jns_klm, tbl_m_pasien.alamat, tbl_m_poli.lokasi AS poli')
                           ->join('tbl_m_pasien', 'tbl_m_pasien.id=tbl_trans_medcheck.id_pasien')
                           ->join('tbl_m_poli', 'tbl_m_poli.id=tbl_trans_medcheck.id_poli')
                           ->like('tbl_m_pasien.nama', $term)
                           ->or_like('tbl_m_pasien.nik', $term)
                           ->or_like('tbl_m_pasien.alamat', $term)
                           ->get('tbl_trans_medcheck')->result();
            
            if(!empty($sql)){
                foreach ($sql as $sql){
                    $produk[] = array(
                        'id'         => $sql->id,
                        'id_pasien'  => $sql->id_pasien,
                        'nik'        => $sql->nik,
                        'nama'       => $sql->nama_pgl,
                        'nama2'      => $sql->nama,
                        'no_hp'      => $sql->no_hp,
                        'tgl_lahir'  => $this->tanggalan->tgl_indo2($sql->tgl_lahir).' ('.$this->tanggalan->usia($sql->tgl_lahir).')',
                        'jns_klm'    => general::jns_klm($sql->jns_klm),
                        'alamat'     => $sql->alamat,
                        'no_trx'     => $sql->no_rm,
                        'no_nota'    => $sql->no_nota,
                        'tgl_masuk'  => $this->tanggalan->tgl_indo5($sql->tgl_masuk),
                        'poli'       => $sql->poli,
                        'tipe_rawat' => general::status_rawat2($sql->tipe_rawat),
                    );
                }
                
                echo json_encode($produk);
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function json_medcheck() {
        if (akses::aksesLogin() == TRUE) {
            $term  = $this->input->get('term');
            $sql   = $this->db
                           ->where('status_pos', '0')
                           ->where('status_bayar', '0')
                           ->like('tbl_trans_medcheck.pasien', $term)
//                           ->or_like('tbl_m_pasien.nik', $term)
                           ->get('tbl_trans_medcheck')->result();
            
            if(!empty($sql)){
                foreach ($sql as $sql){
                    $produk[] = array(
                        'id'         => general::enkrip($sql->id),
                        'id_pasien'  => $sql->id_pasien,
                        'no_rm'      => $sql->no_rm,
                        'nama'       => $sql->pasien,
                        'tipe_rawat' => general::status_rawat2($sql->tipe_rawat),
                    );
                }
                
                echo json_encode($produk);
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    public function json_medcheck_retur() {
        if (akses::aksesLogin() == TRUE) {
            $term  = $this->input->get('term');
            $sql   = $this->db
                          ->select("tbl_trans_medcheck.id, tbl_trans_medcheck.tgl_masuk, tbl_trans_medcheck.no_nota, tbl_trans_medcheck.no_rm, tbl_trans_medcheck.tipe AS tipe_rawat, tbl_m_pasien.id AS id_pasien, tbl_m_pasien.kode_dpn, tbl_m_pasien.kode, tbl_m_pasien.nik, tbl_m_pasien.nama, tbl_m_pasien.nama_pgl, tbl_m_pasien.no_hp, tbl_m_pasien.tgl_lahir, tbl_m_pasien.jns_klm, tbl_m_pasien.alamat, tbl_m_poli.lokasi AS poli")
                           ->join('tbl_m_pasien', 'tbl_m_pasien.id=tbl_trans_medcheck.id_pasien')
                           ->join('tbl_m_poli', 'tbl_m_poli.id=tbl_trans_medcheck.id_poli')
                           ->where('tbl_trans_medcheck.status_bayar', '1')
                           ->like('tbl_m_pasien.nama', $term)
                           ->or_like('tbl_m_pasien.nik', $term)
                           ->or_like('tbl_m_pasien.alamat', $term)
                           ->or_like('tbl_trans_medcheck.no_rm', $term)
                           ->get('tbl_trans_medcheck')->result();
            
            if(!empty($sql)){
                foreach ($sql as $sql){
                    $produk[] = array(
                        'id'         => general::enkrip($sql->id),
                        'id_pasien'  => $sql->id_pasien,
                        'nik'        => $sql->nik,
                        'kode'       => $sql->kode_dpn.$sql->kode,
                        'nama'       => $sql->nama_pgl,
                        'nama2'      => $sql->nama,
                        'no_hp'      => $sql->no_hp,
                        'tgl_lahir'  => $this->tanggalan->tgl_indo2($sql->tgl_lahir).' ('.$this->tanggalan->usia($sql->tgl_lahir).')',
                        'jns_klm'    => general::jns_klm($sql->jns_klm),
                        'alamat'     => $sql->alamat,
                        'no_trx'     => $sql->no_rm,
                        'no_nota'    => $sql->no_nota,
                        'tgl_masuk'  => $this->tanggalan->tgl_indo5($sql->tgl_masuk),
                        'poli'       => $sql->poli,
                        'tipe_rawat' => general::status_rawat2($sql->tipe_rawat),
                    );
                }
                
                echo json_encode($produk);
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function json_medcheck_ant() {
        if (akses::aksesLogin() == TRUE) {
            $term  = $this->input->get('term');
            $sql   = $this->db->select('*')->where('status_akt !=', '2')->like('nama',$term)->limit(10)->get('tbl_pendaftaran')->result();
            
            if(!empty($sql)){
                foreach ($sql as $sql){
                    $produk[] = array(
                        'id'         => $sql->id,
                        'nik'        => $sql->nik,
                        'no_urut'    => $sql->no_urut,
                        'nama'       => $sql->nama_pgl,
                        'nama2'      => $sql->nama,
                        'tgl_lahir'  => $sql->tgl_lahir,
                        'jns_klm'    => $sql->jns_klm,
                        'alamat'     => $sql->alamat,
                    );
                }
                
                if(!empty($term)){
                    echo json_encode($produk);
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # JSON Label Pendaftaran
    public function json_medcheck_label_dft() {
        if (akses::aksesLogin() == TRUE) {
            $id_dft = $this->input->get('dft');
            
            $sql   = $this->db->select("tbl_pendaftaran.tgl_masuk, tbl_pendaftaran.id_dokter, tbl_pendaftaran.id_pasien, tbl_pendaftaran.nama_pgl, tbl_pendaftaran.tgl_lahir, tbl_pendaftaran.jns_klm, tbl_pendaftaran.alamat, tbl_m_poli.lokasi AS poli")
                              ->where('tbl_pendaftaran.id', general::dekrip($id_dft))
                              ->join('tbl_m_poli', 'tbl_m_poli.id=tbl_pendaftaran.id_poli')
                              ->get('tbl_pendaftaran')->result();

            if(!empty($sql)){
                foreach ($sql as $label){
                    $setting    = $this->db->get('tbl_pengaturan')->row();
                    $sql_doc    = $this->db->where('id_user', $label->id_dokter)->get('tbl_m_karyawan')->row();
                    
                    $cetak[] = array(
                        'tgl'           => $this->tanggalan->tgl_indo($label->tgl_masuk),
                        'trx'           => '',
                        'rm'            => (!empty($label->id_pasien) ? $setting->kode_pasien.''.$label->id_pasien : '-'),
                        'nama'          => $label->nama_pgl,
                        'tgl_lahir'     => $this->tanggalan->tgl_indo($label->tgl_lahir).' ('.$this->tanggalan->usia_lkp($label->tgl_lahir).')',
                        'jns_klm'       => general::jns_klm($label->jns_klm),
                        'alamat'        => $label->alamat,
                        'dokter'        => (!empty($sql_doc->nama_dpn) ? $sql_doc->nama_dpn.' ' : '').$sql_doc->nama.(!empty($sql_doc->nama_blk) ? ', '.$sql_doc->nama_blk : ''),
                        'poli'          => $label->poli,
                        'judul'         => $setting->judul
                    );
                }

                echo json_encode($cetak);
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # JSON Label
    public function json_medcheck_label() {
        if (akses::aksesLogin() == TRUE) {
            $id_resep           = $this->input->get('id_resep');
            $id_medcheck        = $this->input->get('id');
            
            $sql   = $this->db->select("tbl_trans_medcheck.id, tbl_trans_medcheck.id_dokter, tbl_trans_medcheck_resep.tgl_simpan, tbl_m_pasien.kode_dpn, tbl_m_pasien.kode, tbl_m_pasien.nama, tbl_m_pasien.tgl_lahir, tbl_m_pasien.jns_klm, tbl_trans_medcheck_resep_det.item, tbl_trans_medcheck_resep_det.jml, tbl_trans_medcheck_resep_det.satuan, tbl_trans_medcheck_resep_det.keterangan as catatan, tbl_trans_medcheck_resep_det.dosis, tbl_trans_medcheck_resep_det.dosis_ket, tbl_trans_medcheck_resep_det.status_mkn, tbl_trans_medcheck_resep_det.status_etiket")
                              ->where('tbl_trans_medcheck_resep_det.id_resep', general::dekrip($id_resep))
                              ->join('tbl_trans_medcheck_resep', 'tbl_trans_medcheck_resep.id=tbl_trans_medcheck_resep_det.id_resep')
                              ->join('tbl_trans_medcheck', 'tbl_trans_medcheck.id=tbl_trans_medcheck_resep_det.id_medcheck')
                              ->join('tbl_m_pasien', 'tbl_m_pasien.id=tbl_trans_medcheck.id_pasien')
                              ->order_by('tbl_trans_medcheck_resep_det.id', 'ASC')
                              ->get('tbl_trans_medcheck_resep_det')->result();

            if(!empty($sql)){
                foreach ($sql as $resep){
                    $setting    = $this->db->get('tbl_pengaturan')->row();
                    $sql_doc    = $this->db->where('id_user', $resep->id_dokter)->get('tbl_m_karyawan')->row();
                    
                    $recipe[] = array(
                        'tgl'           => $this->tanggalan->tgl_indo($resep->tgl_simpan),
                        'rm'            => $resep->kode_dpn.''.$resep->kode,
                        'nama'          => $resep->nama,
                        'tgl_lahir'     => $this->tanggalan->tgl_indo($resep->tgl_lahir).' ('.$this->tanggalan->usia_lkp($resep->tgl_lahir).')',
                        'jns_klm'       => general::jns_klm($resep->jns_klm),
                        'item'          => $resep->item,
                        'jml'           => (float)$resep->jml,
                        'satuan'        => $resep->satuan,
                        'catatan'       => $resep->catatan,
                        'dosis'         => $resep->dosis,
                        'makan'         => general::tipe_obat_makan($resep->status_mkn),
                        'status_etiket' => general::tipe_obat_etiket($resep->status_etiket),
                        'ket'           => $resep->dosis_ket,
                        'dokter'        => (!empty($sql_doc->nama_dpn) ? $sql_doc->nama_dpn.' ' : '').$sql_doc->nama.(!empty($sql_doc->nama_blk) ? ', '.$sql_doc->nama_blk : ''),
                        'judul'         => $setting->judul
                    );
                }

                echo json_encode($recipe);
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # JSON Label ID Pasien
    public function json_medcheck_label_id() {
        if (akses::aksesLogin() == TRUE) {
            $id_medcheck        = $this->input->get('id');
            
            $sql   = $this->db->select("tbl_trans_medcheck.tgl_masuk, tbl_trans_medcheck.id_dokter, tbl_trans_medcheck.no_rm AS trx, tbl_m_pasien.kode_dpn, tbl_m_pasien.kode, tbl_m_pasien.nama_pgl, tbl_m_pasien.tgl_lahir, tbl_m_pasien.jns_klm, tbl_m_pasien.alamat, tbl_m_poli.lokasi AS poli")
                              ->where('tbl_trans_medcheck.id', general::dekrip($id_medcheck))
                              ->join('tbl_m_pasien', 'tbl_m_pasien.id=tbl_trans_medcheck.id_pasien')
                              ->join('tbl_m_poli', 'tbl_m_poli.id=tbl_trans_medcheck.id_poli')
                              ->get('tbl_trans_medcheck')->result();

            if(!empty($sql)){
                foreach ($sql as $label){
                    $setting    = $this->db->get('tbl_pengaturan')->row();
                    $sql_doc    = $this->db->where('id_user', $label->id_dokter)->get('tbl_m_karyawan')->row();
                    
                    $cetak[] = array(
                        'tgl'           => $this->tanggalan->tgl_indo($label->tgl_masuk),
                        'trx'           => $label->trx,
                        'rm'            => $label->kode_dpn.''.$label->kode,
                        'nama'          => $label->nama_pgl,
                        'tgl_lahir'     => $this->tanggalan->tgl_indo($label->tgl_lahir).' ('.$this->tanggalan->usia_lkp($label->tgl_lahir).')',
                        'jns_klm'       => general::jns_klm($label->jns_klm),
                        'alamat'        => $label->alamat,
                        'dokter'        => (!empty($sql_doc->nama_dpn) ? $sql_doc->nama_dpn.' ' : '').$sql_doc->nama.(!empty($sql_doc->nama_blk) ? ', '.$sql_doc->nama_blk : ''),
                        'poli'          => $label->poli,
                        'judul'         => $setting->judul
                    );
                }

                echo json_encode($cetak);
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }
    
    # Data Dokter
    public function data_dokter() {
        $id_poli = $this->input->get('id_poli');

        $sql_dokter = $this->db->where('id_poli', $id_poli)->get('v_master_dokter')->result();

        foreach ($sql_dokter as $dokter) {
            echo '<option value="' . $dokter->id_user . '">' . (!empty($dokter->nama_dpn) ? $dokter->nama_dpn . ' ' : '') . strtoupper($dokter->nama) . (!empty($dokter->nama_blk) ? ', ' . $dokter->nama_blk : '') . '</option>';
        }
    }
    
    
    
    /**
     * Add Parameter
     * 
     * This method handles the form submission from the modal
     * and saves the parameter to the database
     */
    public function add_param() {
        if (akses::aksesLogin() == TRUE) {
            // Check if request is AJAX/JSON
            $is_ajax = $this->input->is_ajax_request();
            
            // Forbid direct access if not an AJAX request
            if (!$is_ajax) {
                show_error('No direct script access allowed', 403, 'Access Forbidden');
                return;
            }
            
            $param = $this->input->post('param');
            
            $response = [
                'status'  => false,
                'message' => '',
                'data'    => null
            ];

            if (empty($param)) {
                $response['message'] = 'Parameter tidak boleh kosong!';
                echo json_encode($response);
                return;
            } else {
                // Check if parameter already exists
                $existing = $this->db->where('param', $param)->get('tbl_m_mcu_header')->num_rows();

                if ($existing > 0) {
                    $response['message'] = 'Parameter sudah ada dalam database!';
                    echo json_encode($response);
                    return;
                } else {
                    $data = [
                        'param'      => $param,
                        'tgl_simpan' => date('Y-m-d H:i:s'),
                        'id_user'    => $this->ion_auth->user()->row()->id
                    ];

                    $this->db->insert('tbl_m_mcu_header', $data);
                    $inserted_id = $this->db->insert_id();
                    
                    $response['status'] = true;
                    $response['message'] = 'Parameter berhasil ditambahkan!';
                    $response['data'] = [
                        'id'    => $inserted_id,
                        'param' => $param
                    ];
                    
                    header('Content-Type: application/json');
                    echo json_encode($response);
                    return;
                }
            }
        } else {
            $errors = $this->ion_auth->messages();
            $this->session->set_flashdata('login_toast', 'toastr.error("Authentifikasi gagal, silahkan login ulang!!");');
            redirect();
        }
    }

    public function set_master_dokter() {
        if (Akses::aksesLogin() == TRUE) {
            // Check if request is AJAX
            $is_ajax = $this->input->is_ajax_request();
            
            if (!$is_ajax) {
                exit('No direct script access allowed');
            }

            $nik          = $this->input->post('nik');
            $kode         = $this->input->post('kode');
            $nama_dpn     = $this->input->post('nama_dpn');
            $nama         = $this->input->post('nama');
            $nama_blk     = $this->input->post('nama_blk');
            $jns_klm      = $this->input->post('jns_klm');
            $no_hp        = $this->input->post('no_hp');
            $no_rmh       = $this->input->post('no_rmh');
            $alamat       = $this->input->post('alamat');
            $alamat_dom   = $this->input->post('alamat_dom');
            $tgl_lahir    = $this->input->post('tgl_lahir');
            $tmp_lahir    = $this->input->post('tmp_lahir');
            $kota         = $this->input->post('kota');
            $jabatan      = $this->input->post('jabatan');
            $user         = $this->input->post('user');
            $pass1        = $this->input->post('pass1');
            $pass2        = $this->input->post('pass2');
            $grup         = '10';
        
            // Set validation rules
            $this->form_validation->set_error_delimiters('', '');
            $this->form_validation->set_rules('nik', 'NIK', 'required|trim');
            $this->form_validation->set_rules('nama', 'Nama Lengkap', 'required|trim');
            $this->form_validation->set_rules('jns_klm', 'Jenis Kelamin', 'required');
        
            // Run validation
            if ($this->form_validation->run() === FALSE) {
                echo json_encode([
                    'success' => false,
                    'message' => 'Validasi gagal',
                    'errors' => $this->form_validation->error_array()
                ]);
                return;
            }
            
            // Start transaction
            $this->db->trans_begin();
        
            try {                
                $pengaturan = $this->db->get('tbl_pengaturan')->row();
                
                $sql_num    = $this->db->get('tbl_m_karyawan')->num_rows() + 1;
                $kode_no    = sprintf('%05d', $sql_num);
                
                // Get current user ID instead of undefined $id_user
                $id_user = $this->ion_auth->user()->row()->id;
                $get_grup   = $this->ion_auth->get_users_groups($id_user)->row();
                $sql_grup   = $this->ion_auth->group($get_grup->id)->row();
                
                // Generate username and email
                $username = 'es_dr.' . strtolower(str_replace(' ', '', $nama)).uniqid();
                $email    = $username . '@esensia.co.id';
                $pass     = 'admin1234';
                
                // Check if username already exists
                $cek = $this->db->select('username')->where('username', $username)->get('tbl_ion_users')->num_rows();
                
                if($cek > 0){
                    throw new Exception('Username sudah ada');
                } else {
                    $data_user = array(
                        'id_app'        => $pengaturan->id_app,
                        'first_name'    => (!empty($nama_dpn) ? $nama_dpn.' ' : '').strtoupper($nama).(!empty($nama_blk) ? ', '.$nama_blk : ''),
                        'username'      => $username,
                        'password'      => $pass,
                        'address'       => $alamat,
                        'birthdate'     => (!empty($tgl_lahir) ? $this->tanggalan->tgl_indo_sys($tgl_lahir) : '0000-00-00'),
                    );
                    
                    $this->ion_auth->register($username, $pass, $email, $data_user, array($grup));
                    $sql_user = $this->db->where('username', $username)->get('tbl_ion_users')->row();
                }
        
                // Prepare data for tbl_m_karyawan
                $data_kary = [
                    'id_user'           => (!empty($sql_user->id) ? $sql_user->id : '0'),
                    'id_user_group'     => (!empty($grup) ? $grup : '0'),
                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                    'nik'               => $nik,
                    'nama'              => strtoupper($nama),
                    'nama_dpn'          => $nama_dpn,
                    'nama_blk'          => $nama_blk,
                    'alamat'            => $alamat,
                    'alamat_dom'        => $alamat_dom,
                    'no_hp'             => $no_hp,
                    'no_rmh'            => $no_rmh,
                    'jabatan'           => $jabatan,
                    'jns_klm'           => $jns_klm,
                    'tgl_lahir'         => $this->tanggalan->tgl_indo_sys($tgl_lahir),
                    'tmp_lahir'         => $tmp_lahir,
                ];
        
                
                $this->db->insert('tbl_m_karyawan', $data_kary);
                $last_id_kary = $this->db->insert_id();
        
                // Check transaction status
                if ($this->db->trans_status() === FALSE) {
                    throw new Exception('Gagal menyimpan data');
                }
        
                // Commit transaction
                $this->db->trans_commit();
        
                // Send success response
                echo json_encode([
                    'success' => true,
                    'message' => 'Data dokter berhasil disimpan',
                    'redirect' => base_url('medcheck/index.php'),
                    'id' => general::enkrip($last_id_kary)
                ]);
        
            } catch (Exception $e) {
                // Rollback transaction
                $this->db->trans_rollback();
        
                // Send error response
                echo json_encode([
                    'success' => false,
                    'message' => 'Error: ' . $e->getMessage()
                ]);
            }
        } else {
            $errors = $this->ion_auth->messages();
            echo json_encode([
                'success' => false,
                'message' => 'Authentifikasi gagal, silahkan login ulang!'
            ]);
        }
    }

    /**
     * Function to handle master patient data submission from form modal
     * 
     * @return json
     */
    public function set_master_pasien() {
        if (Akses::aksesLogin() == TRUE) {
            // Check if request is AJAX
            $is_ajax = $this->input->is_ajax_request();
            
            if (!$is_ajax) {
                exit('No direct script access allowed');
            }

            $pengaturan   = $this->db->get('tbl_pengaturan')->row();

            $id           = $this->input->post('id');
            $nik          = $this->input->post('nik');
            $gelar        = $this->input->post('gelar');
            $nama         = $this->input->post('nama');
            $jns_klm      = $this->input->post('jns_klm');
            $tmp_lahir    = $this->input->post('tmp_lahir');
            $tgl_lahir    = $this->input->post('tgl_lahir');
            $no_hp        = $this->input->post('no_hp');
            $alamat       = $this->input->post('alamat');
            $alamat_dom   = $this->input->post('alamat_dom');
            $pekerjaan    = $this->input->post('pekerjaan');
            $no_rmh       = $this->input->post('no_rmh');
            $route        = $this->input->post('route');
            $file         = $this->input->post('file');
            $file_id      = $this->input->post('file_id');
        
            // Set validation rules
            $this->form_validation->set_error_delimiters('', '');
            $this->form_validation->set_rules('nik', 'NIK', 'required|trim');
            $this->form_validation->set_rules('nama', 'Nama Lengkap', 'required|trim');
            $this->form_validation->set_rules('jns_klm', 'Jenis Kelamin', 'required');
        
            // Run validation
            if ($this->form_validation->run() === FALSE) {
                echo json_encode([
                    'success'   => false,
                    'message'   => 'Validasi gagal',
                    'errors'    => $this->form_validation->error_array()
                ]);
                return;
            }

            // Get Pasien data
            $sql_pasien = $this->db->where('id', general::dekrip($id))->get('tbl_m_pasien')->row();
            $sql_gelar  = $this->db->where('id', $gelar)->get('tbl_m_gelar')->row();
            
            // Start transaction
            $this->db->trans_begin();
        
            try {

                // Process and save profile image if provided
                if (!empty($file)) {
                    // Get directory path
                    $dir            = FCPATH.'/';
                    $kode_pasien    = sprintf('%05d', $sql_pasien->id);
                    $no_rm          = strtolower($pengaturan->kode_pasien).$kode_pasien;
                    $path           = 'file/pasien/'.$no_rm.'/';
                    
                    // Create directory if it doesn't exist
                    if (!file_exists($dir.$path)) {
                        mkdir($dir.$path, 0777, true);
                    }
                    
                    // Save profile image
                    $filename = $path.'profile_'.$kode_pasien.'.png';
                    general::base64_to_jpeg($file, $dir.$filename);

                    $data_pasien['foto'] = $filename;
                }
                
                // Process and save ID image if provided
                if (!empty($file_id)) {
                    // Get directory path if not already set
                    if (!isset($dir)) {
                        $dir            = FCPATH.'/';
                        $kode_pasien    = sprintf('%05d', $sql_pasien->id);
                        $no_rm          = strtolower($pengaturan->kode_pasien).$kode_pasien;
                        $path           = 'file/pasien/'.$no_rm.'/';
                        
                        // Create directory if it doesn't exist
                        if (!file_exists($dir.$path)) {
                            mkdir($dir.$path, 0777, true);
                        }
                    }
                    
                    // Save ID image
                    $filename_id = $path.'ID_'.$kode_pasien.'.png';
                    general::base64_to_jpeg($file_id, $dir.$filename_id);

                    $data_pasien['foto_id'] = $filename_id;
                }

                $nama_pgl = (!empty($sql_gelar->gelar) ? $sql_gelar->gelar.' ' : '').$nama;

                
                // Prepare data for tbl_m_pasien
                $data_pasien = [
                    'tgl_simpan'        => date('Y-m-d H:i:s'),
                    'nik'               => $nik,
                    'nama'              => strtoupper($nama),
                    'nama_pgl'          => strtoupper($nama_pgl),
                    'alamat'            => $alamat,
                    'alamat_dom'        => $alamat_dom,
                    'no_hp'             => $no_hp,
                    'no_rmh'            => $no_rmh,
                    'jns_klm'           => $jns_klm,
                    'tgl_lahir'         => $this->tanggalan->tgl_indo_sys($tgl_lahir),
                    'tmp_lahir'         => $tmp_lahir
                ];
        
                $this->db->where('id', $sql_pasien->id)->update('tbl_m_pasien', $data_pasien);
                $last_id_pasien = $sql_pasien->id;
        
                // Check transaction status
                if ($this->db->trans_status() === FALSE) {
                    throw new Exception('Gagal menyimpan data');
                }
        
                // Commit transaction
                $this->db->trans_commit();
        
                // Send success response
                echo json_encode([
                    'success'   => true,
                    'message'   => 'Data pasien berhasil diubah !!',
                    // 'redirect'  => base_url('medcheck/tindakan.php?id='.general::enkrip($last_id_pasien)),
                    'id'        => general::enkrip($last_id_pasien),
                    'data'      => $data_pasien
                ]);
        
            } catch (Exception $e) {
                // Rollback transaction
                $this->db->trans_rollback();
        
                // Send error response
                echo json_encode([
                    'success' => false,
                    'message' => 'Error: ' . $e->getMessage()
                ]);
            }
        } else {
            $errors = $this->ion_auth->messages();
            echo json_encode([
                'success' => false,
                'message' => 'Authentifikasi gagal, silahkan login ulang!'
            ]);
        }
    }
}
